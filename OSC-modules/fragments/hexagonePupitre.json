{
  "version": "1.25.6",
  "createdWith": "Open Stage Control",
  "type": "fragment",
  "content": {
    "type": "panel",
    "top": 100,
    "left": 60,
    "lock": false,
    "id": "panel_1",
    "visible": true,
    "interaction": true,
    "comments": "",
    "width": 220,
    "height": 340,
    "expand": "false",
    "colorText": "auto",
    "colorWidget": "auto",
    "colorStroke": "auto",
    "colorFill": "auto",
    "alphaStroke": 0,
    "alphaFillOff": 0,
    "alphaFillOn": "auto",
    "lineWidth": 0,
    "borderRadius": "auto",
    "padding": 1,
    "html": "",
    "css": "",
    "colorBg": "auto",
    "layout": "default",
    "justify": "start",
    "gridTemplate": "",
    "contain": true,
    "scroll": true,
    "innerPadding": false,
    "tabsPosition": "top",
    "variables": "@{parent.variables}",
    "traversing": false,
    "value": "",
    "default": "",
    "linkId": "",
    "address": "auto",
    "preArgs": "",
    "typeTags": "",
    "decimals": 2,
    "target": "",
    "ignoreDefaults": false,
    "bypass": false,
    "onCreate": "",
    "onValue": "",
    "widgets": [
      {
        "type": "svg",
        "top": 0,
        "left": 0,
        "lock": false,
        "id": "hexagonePupitreSVG",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 210,
        "height": 190,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "rgba(106,177,248,1)",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "svg": "  <g\n     inkscape:groupmode=\"layer\"\n     id=\"c\"\n     inkscape:label=\"c\"\n     style=\"display:inline\">\n    <path\n       sodipodi:type=\"star\"\n       style=\"fill:VAR{C_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:5.66929;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n       id=\"path1639\"\n       inkscape:flatsided=\"true\"\n       sodipodi:sides=\"6\"\n       sodipodi:cx=\"150.86665\"\n       sodipodi:cy=\"154.45871\"\n       sodipodi:r1=\"72.400345\"\n       sodipodi:r2=\"62.700539\"\n       sodipodi:arg1=\"1.0516502\"\n       sodipodi:arg2=\"1.575249\"\n       inkscape:rounded=\"0\"\n       inkscape:randomized=\"0\"\n       d=\"m 186.78728,217.31981 -72.39962,-0.32237 -35.920634,-62.8611 36.478994,-62.538733 72.39963,0.322373 35.92063,62.8611 z\"\n       transform=\"matrix(0.52674048,0,0,0.52674048,20.418143,11.444109)\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"se\"\n     inkscape:label=\"se\"\n     style=\"display:inline\">\n    <path\n       id=\"rect2351\"\n       style=\"fill:VAR{SE_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"m 139.25372,93.606388 59.30576,0.339563 -49.14606,83.853969 -29.939,-50.28437 z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"ne\"\n     inkscape:label=\"ne\"\n     style=\"display:inline\">\n    <path\n       id=\"rect2493\"\n       style=\"fill:VAR{NE_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"M 119.77718,59.522429 150.16323,9.404475 198.3999,93.818646 139.25372,93.606388 Z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"n\"\n     inkscape:label=\"n\"\n     style=\"display:inline\">\n    <path\n       id=\"rect2638\"\n       style=\"fill:VAR{N_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"m 52.94007,8.9715706 97.22316,0.4329044 -30.38605,50.117954 -39.805577,0.09823 z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"no\"\n     inkscape:label=\"no\"\n     style=\"display:inline\">\n    <path\n       id=\"rect2743\"\n       style=\"fill:VAR{NO_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"M 52.940076,8.9715716 79.971603,59.620656 60.742024,93.2568 3.9535932,92.952842 Z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"so\"\n     inkscape:label=\"so\">\n    <path\n       id=\"rect3047\"\n       style=\"fill:VAR{SO_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"M 3.9535934,92.952844 60.742024,93.2568 80.218572,127.34076 52.190266,177.36702 Z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"s\"\n     inkscape:label=\"s\"\n     style=\"display:inline\">\n    <path\n       id=\"rect2285\"\n       style=\"fill:VAR{S_Fill, \"none\"};fill-opacity:0.745902;stroke:#6ab1f8;stroke-width:3.07395;stroke-linejoin:round\"\n       d=\"m 80.218572,127.34076 39.255848,0.17479 29.939,50.28437 -97.223154,-0.4329 z\"\n       sodipodi:nodetypes=\"ccccc\" />\n  </g>",
        "value": "",
        "default": "",
        "linkId": "",
        "address": "/test",
        "preArgs": "",
        "target": "localhost:4000",
        "onCreate": "",
        "onValue": ""
      },
      {
        "type": "button",
        "top": 60,
        "left": 80,
        "lock": false,
        "id": "hexagonePupitre_C",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 50,
        "height": 70,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "C",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 20,
        "left": 140,
        "lock": false,
        "id": "hexagonePupitre_NE",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 50,
        "height": 80,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "NE",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 10,
        "left": 70,
        "lock": false,
        "id": "hexagonePupitre_N",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 70,
        "height": 50,
        "expand": "false",
        "colorText": "#f7f8f8",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "N",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "N",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 100,
        "left": 140,
        "lock": false,
        "id": "hexagonePupitre_SE",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 50,
        "height": 80,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "SE",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 130,
        "left": 70,
        "lock": false,
        "id": "hexagonePupitre_S",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 70,
        "height": 50,
        "expand": "false",
        "colorText": "#f7f8f8",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "S",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 20,
        "left": 30,
        "lock": false,
        "id": "hexagonePupitre_NO",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 40,
        "height": 80,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "NO",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 100,
        "left": 30,
        "lock": false,
        "id": "hexagonePupitre_SO",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 40,
        "height": 70,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": 0,
        "alphaFillOn": 0,
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "label": false,
        "vertical": false,
        "wrap": false,
        "on": 1,
        "off": 0,
        "mode": "toggle",
        "doubleTap": false,
        "decoupled": false,
        "value": "",
        "default": 1,
        "linkId": "",
        "address": "auto",
        "preArgs": "SO",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "let pad = getProp(this,'preArgs')\n\nlet pads = get('hexagonePadState')\nlet mode = get('hexagonePupitreSwitch')\nif (mode === 0) {\n  pads.values[pad].state = value\n  setVar(\"hexagonePupitreSVG\", pad + \"_Fill\", get('padColor')[value]);\n}\nif (mode === 1){\n  pads.selected = pad\n  let trackConfig = get(\"trackConfig\")\n  let cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n  })\n  let moduleId = 0\n  let triggers = trackConfig.modules[moduleId].cueList[cue].triggers\n  let sampleId = \"\"\n  triggers.forEach((t) =>{\n      let fill =  get('padColor')[0]\n    if (t.name === pad) {\n      fill = get('padColor')[1]\n      set('hexagonePupitreLoop',t.loop,{'send': false,'script': false})\n      set('hexagonePupitrePlayMode',t.playMode,{'send': false,'script': false})\n      set('hexagonePupitreFadeOut',t.fadeOut,{'send': false,'script': false})\n      set('hexagonePupitreGain',t.gain,{'send': false,'script': false})\n      sampleId = t.sampleId\n    }\n    setVar(\"hexagonePupitreSVG\", t.name + \"_Fill\", fill,{'send':false});\n  })\n  const sampleObject = trackConfig.modules[moduleId].samples[sampleId]\n  let sampleName = \"\"\n  let sampleDir = get('sampleListingFolder')\n  if (sampleObject) {\n    sampleName = sampleObject.sampleName\n    sampleDir = sampleObject.sampleDir\n  } else sampleName = \"_NO SAMPLE\"\n  setTimeout(function () {\n    set('samplesList',sampleName,{'send': false,'script': false})\n    set('sampleListingFolder',sampleDir,{'send': false,'script': false})\n\t}, 100);\n} \nset('hexagonePadState',pads)\n"
      },
      {
        "type": "button",
        "top": 190,
        "left": 0,
        "lock": false,
        "id": "hexagonePupitreSwitch",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 210,
        "height": 30,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorTextOn": "auto",
        "wrap": false,
        "mode": "toggle",
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "// noprotect\nlet visible = false\nlet pads= get('hexagonePadState')\nfor (let key in pads.values) {\n\n  if (value) {\n    if (key === pads.selected) {\n      set('hexagonePupitre_' + key, 1)\n      visible = true\n    }\n    set('hexagonePupitre_' + key, 0,{'send': false,'script': false})\n  } else {  \n    set('hexagonePupitre_' + key, pads.values[key].state)\n  }\n} \nsetVar('samplesListing','visible',visible)\n\nsetVar('hexagonePadSettings','visible',visible)",
        "label": "Edit Pads",
        "vertical": false,
        "on": 1,
        "off": 0,
        "doubleTap": false,
        "decoupled": false
      },
      {
        "type": "variable",
        "lock": false,
        "id": "hexagonePadState",
        "comments": "",
        "value": {
          "selected": "N",
          "values": {
            "S": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "C": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "N": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "NE": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "NO": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "SO": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            },
            "SE": {
              "state": 1,
              "sample": "",
              "sampleDir": ""
            }
          }
        },
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": ""
      },
      {
        "type": "variable",
        "lock": false,
        "id": "hexagonePadSelect",
        "comments": "",
        "value": {
          "pad": "C",
          "state": 0
        },
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": ""
      },
      {
        "type": "variable",
        "lock": false,
        "id": "padColor",
        "comments": "",
        "value": [
          "none",
          "#aaaaff"
        ],
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": ""
      },
      {
        "type": "panel",
        "top": 220,
        "left": 0,
        "lock": false,
        "id": "hexagonePadSettings",
        "visible": "VAR{visible,false}",
        "interaction": true,
        "comments": "",
        "width": 210,
        "height": 100,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": 0,
        "alphaFillOff": "auto",
        "alphaFillOn": 0,
        "lineWidth": 0,
        "borderRadius": "auto",
        "padding": 1,
        "html": "",
        "css": "",
        "colorBg": "auto",
        "layout": "default",
        "justify": "start",
        "gridTemplate": "",
        "contain": true,
        "scroll": true,
        "innerPadding": true,
        "tabsPosition": "top",
        "variables": "@{parent.variables}",
        "traversing": false,
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "",
        "widgets": [
          {
            "type": "button",
            "top": 0,
            "left": 0,
            "lock": false,
            "id": "hexagonePupitreLoop",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 200,
            "height": 30,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "colorTextOn": "auto",
            "label": "Loop",
            "vertical": false,
            "wrap": false,
            "on": 1,
            "off": 0,
            "mode": "toggle",
            "doubleTap": false,
            "decoupled": false,
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "let trackConfig = get(\"trackConfig\")\nlet pad = get('hexagonePadState').selected\nlet cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n})\nlet triggers =  trackConfig.modules[0].cueList[cue].triggers\n  triggers.forEach((t,i) => {\n    if (t.name === pad) {\n      trackConfig.modules[0].cueList[cue].triggers[i].loop = value\n    }\n  })\nset(\"trackConfig\",trackConfig)"
          },
          {
            "type": "text",
            "top": 30,
            "left": 0,
            "lock": false,
            "id": "hexagonePupitrePlayModeTitle",
            "visible": true,
            "comments": "",
            "width": 80,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "vertical": false,
            "wrap": false,
            "align": "center",
            "value": "Playmode",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "decimals": 2,
            "target": "",
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "dropdown",
            "top": 30,
            "left": 80,
            "lock": false,
            "id": "hexagonePupitrePlayMode",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 120,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "label": "auto",
            "icon": "true",
            "align": "center",
            "values": {
              "latch": "latch",
              "toggle": "toggle",
              "punch": "punch"
            },
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "let trackConfig = get(\"trackConfig\")\nlet pad = get('hexagonePadState').selected\nlet cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n})\nlet triggers =  trackConfig.modules[0].cueList[cue].triggers\n  triggers.forEach((t,i) => {\n    if (t.name === pad) {\n      trackConfig.modules[0].cueList[cue].triggers[i].playMode = value\n    }\n  })\nset(\"trackConfig\",trackConfig)"
          },
          {
            "type": "input",
            "top": 50,
            "left": 80,
            "lock": false,
            "id": "hexagonePupitreFadeOut",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 120,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "align": "center",
            "unit": "ms",
            "asYouType": false,
            "numeric": true,
            "validation": "",
            "maxLength": "",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "let trackConfig = get(\"trackConfig\")\nlet pad = get('hexagonePadState').selected\nlet cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n})\nlet triggers =  trackConfig.modules[0].cueList[cue].triggers\n  triggers.forEach((t,i) => {\n    if (t.name === pad) {\n      trackConfig.modules[0].cueList[cue].triggers[i].fadeOut = value\n    }\n  })\nset(\"trackConfig\",trackConfig)"
          },
          {
            "type": "text",
            "top": 70,
            "left": 0,
            "lock": false,
            "id": "hexagonePupitreGainTitle",
            "visible": true,
            "comments": "",
            "width": 80,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "vertical": false,
            "wrap": false,
            "align": "center",
            "value": "Gain",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "decimals": 2,
            "target": "",
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "text",
            "top": 50,
            "left": 0,
            "lock": false,
            "id": "hexagonePupitreFadeOutTitle",
            "visible": true,
            "comments": "",
            "width": 80,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "vertical": false,
            "wrap": false,
            "align": "center",
            "value": "Fade Out",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "decimals": 2,
            "target": "",
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "input",
            "top": 70,
            "left": 80,
            "lock": false,
            "id": "hexagonePupitreGain",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 120,
            "height": 20,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "align": "center",
            "unit": "dB",
            "asYouType": false,
            "numeric": true,
            "validation": "",
            "maxLength": "",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "let trackConfig = get(\"trackConfig\")\nlet pad = get('hexagonePadState').selected\nlet cue = 0\n  trackConfig.presets.forEach((p) => {\n    if (p.name === get('Presets_switch')) {\n    cue = p.id\n    }\n})\nlet triggers =  trackConfig.modules[0].cueList[0].triggers\n  triggers.forEach((t,i) => {\n    if (t.name === pad) {\n      trackConfig.modules[0].cueList[cue].triggers[i].gain = value\n    }\n  })\nset(\"trackConfig\",trackConfig)"
          }
        ],
        "tabs": []
      }
    ],
    "tabs": []
  }
}