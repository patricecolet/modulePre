{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Open Stage Control","text":""},{"location":"download/","title":"Download the latest release","text":"<p>Click here to read the installation guide.</p> <p> Open Stage Control  Loading assets...    Read the Changelog     Support on Patreon"},{"location":"docs/changelog/","title":"Changelog","text":""},{"location":"docs/changelog/#1256","title":"1.25.6","text":"<ul> <li> <p>bug fixes</p> <ul> <li>sliders: error when <code>steps</code> is an array</li> </ul> </li> <li> <p>scripting</p> <ul> <li><code>stateSet</code>: add optional <code>{send: false}</code> flag</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1255","title":"1.25.5","text":"<ul> <li>bug fixes<ul> <li>code editor: issue when middle clicking in the editor on linux</li> <li>code editor: modern js operators such as <code>**</code> not recognized</li> <li>sliders: prevent error when <code>steps</code> is not a number, add <code>auto</code> mode for using ranges values as steps (it did not work before)</li> <li>pads, range: value not initialized as an array, causing errors in some cases</li> <li>modal: popup not closing when <code>doubleTap</code> is true</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1254","title":"1.25.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>custom module: <code>receive()</code> not passing boolean arguments properly</li> <li>fix <code>--authentication</code> on iOS clients</li> </ul> </li> <li> <p>editor</p> <ul> <li>display current widget value in the <code>value</code> property's help modal</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1253","title":"1.25.3","text":"<ul> <li>bug fixes<ul> <li>input: rendering issues with big font sizes</li> <li>panel: tab rendering issue when initialized with a non-numeric value</li> <li>panel: minor style issue in tab navigation bar</li> <li>scripting: scripting functions not working inside <code>browseFile()</code> callback</li> <li>scripting: using <code>external: true</code> in <code>set()</code> should prevent affected widget from sending any message</li> <li>button: inconsistent value in <code>push</code> mode with <code>decoupled</code> enabled when setting value from script</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1252","title":"1.25.2","text":"<ul> <li>bug fixes<ul> <li>textarea: escape key not restoring previous value</li> <li>scripting: <code>setFocus(id)</code> not affecting textarea widgets</li> <li>led, text, variable: value not synchronized between different clients</li> <li>error when running from sources on Mac</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1251","title":"1.25.1","text":"<ul> <li>bug fixes<ul> <li>regression in inter-widget sync mechanism</li> <li>regression breaking <code>set()</code> function in scripts</li> <li>textarea: display nothing instead of \"null\" when receing no value, null or an empty string</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1250","title":"1.25.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>multixy: doubleTap not working on touch devices</li> <li>button: <code>x</code> and <code>y</code> variables not passed to <code>onValue</code> when <code>doubleTap</code> is true on touch devices  </li> <li>advanced syntax: update issue with clones using their own value in their properties</li> <li>client: minor keyboard shortcut issues</li> <li>panel: mitigate client synchronization issue with scrollbars</li> </ul> </li> <li> <p>widgets</p> <ul> <li>menu: add a background to menu items to help distinguish them</li> <li>menu: merge different interaction modes into a single <code>mode</code> property</li> <li>menu: add <code>swipe</code> mode</li> </ul> </li> <li> <p>remote control</p> <ul> <li><code>/STATE/SET</code>: add optional argument to prevent widgets from sending their value</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1242","title":"1.24.2","text":"<ul> <li>bug fixes<ul> <li>editor: regression breaking widget context menu actions under \"Position\" submenu</li> <li>touch devices: touchend event not fired on elements removed/detached during touchstart/touchmove callbacks (caused issues when switching tabs using a button inside a tab)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1241","title":"1.24.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>launcher: <code>Ctrl+M</code> keyboard shortcut not working</li> <li>widgets: regression incurring a small delay before resolving a property that depends on a widget's own value</li> <li>server: <code>--client-size</code> and <code>--client-position</code> options not parsed correctly</li> </ul> </li> <li> <p>advanced syntaxes</p> <ul> <li>support <code>@{}</code> inside <code>IMPORT{}</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#1240","title":"1.24.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>widgets: circular value feedback issues</li> <li>editor: <code>ctrl + e</code> not working when hit multiple times without releasing <code>ctrl</code></li> <li>mobile: \"prevent sleep\" feature not working</li> </ul> </li> <li> <p>widgets</p> <ul> <li>patchbay: add <code>in</code>, <code>out</code> and <code>both</code> modes to <code>exclusive</code> property</li> <li>panel: replace <code>verticalTabs</code> property with <code>tabsPosition</code> (supports 4 directions)</li> </ul> </li> <li> <p>custom module</p> <ul> <li>add optional <code>errorCallback</code> argument to<code>loadJSON</code> and <code>saveJSON</code></li> </ul> </li> <li> <p>server</p> <ul> <li>print multiple qrcodes if multiple network interfaces are available and prevent printing a qrcode for the localhost address</li> </ul> </li> <li> <p>misc</p> <ul> <li>add linux rpm packages</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1230","title":"1.23.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>linkId not working between two encoder widgets</li> <li>fader: <code>gradient</code> breakpoints not positioned correctly</li> <li>canvas: <code>onDraw()</code> called twice when calling <code>updateCanvas()</code></li> </ul> </li> <li> <p>midi</p> <ul> <li>optional rpn/nrpn parsing as single messages</li> </ul> </li> <li> <p>widgets</p> <ul> <li>keyboard: incoming values different than the <code>off</code> property are now interpreted as <code>on</code></li> </ul> </li> <li> <p>editor</p> <ul> <li>when focusing the label property with <code>F2</code>, select all text in the text area</li> <li>preserve scroll position in code editor when validating</li> <li>display the id of selected widget in the inspector's header</li> </ul> </li> <li> <p>scripting</p> <ul> <li>expose file browser (from the file widget) as a scripting function</li> </ul> </li> <li> <p>custom module</p> <ul> <li>don't restrict file extension in <code>loadJSON()</code> and <code>saveJSON</code> functions</li> </ul> </li> <li> <p>misc</p> <ul> <li>add polish locales (@ Manz4rk)</li> <li>add css classes to some notification popups to allow targetting them with css themes</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1220","title":"1.22.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>keyboard widget: <code>linkId</code> not working (unable to link 2 keyboard widgets)</li> <li>slides: issues with ranges containing decimal keys</li> </ul> </li> <li> <p>launcher</p> <ul> <li>add menu options to show the qr code again</li> <li>mac: change \"List MIDI devices\" keyboard shortcut to <code>Ctrl+m</code></li> </ul> </li> <li> <p>widgets</p> <ul> <li>image: add support for special value \"qrcode\"</li> </ul> </li> <li> <p>misc</p> <ul> <li>add german locales (@ Magnus Reichel)</li> <li>package file names changed to follow debian's convention</li> <li>add a cli option to disable the qr code (<code>--no-qrcode</code>)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1210","title":"1.21.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>custom module: fix autoreload on nested submodules</li> </ul> </li> <li> <p>launcher</p> <ul> <li>print a qrcode when the server starts to help connecting mobile devices</li> </ul> </li> <li> <p>editor</p> <ul> <li>horizontal scrolling issues with maximized code editor</li> </ul> </li> <li> <p>widgets</p> <ul> <li>switch/menu/dropdown: add a syntax that supports duplicate labels in <code>values</code> property</li> </ul> </li> <li> <p>custom module</p> <ul> <li>expose <code>global</code> object that persists accross module reloads.</li> </ul> </li> <li> <p>scripting</p> <ul> <li>onCreate: expose <code>value</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#1200","title":"1.20.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>scripting: prevent some functions to be marked as undefined</li> <li>advanced syntaxes: ignores quotes around file path in <code>IMPORT{}</code></li> </ul> </li> <li> <p>launcher</p> <ul> <li>add <code>Start minimized</code> menu option</li> </ul> </li> <li> <p>misc</p> <ul> <li>change noFocus client option behavior: the default client window now doesn't take the focus at all, even when a text input is clicked.</li> <li>colorize debug messages for sent and received osc/midi messages</li> </ul> </li> <li> <p>scripting</p> <ul> <li>add <code>setFocusable()</code> function to change the focusability of the window on the fly (allows reenabling focus temporarily to interact with a text widget using a dedicated toggle button for example)</li> <li>add <code>reload()</code> function</li> <li>expose Navigator object with <code>getNavigator()</code></li> </ul> </li> <li> <p>widgets</p> <ul> <li>fragment: add <code>fallback</code> property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1192","title":"1.19.2","text":"<ul> <li>bug fixes<ul> <li>regression breaking touch move events on desktop touchscreens</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1191","title":"1.19.1","text":"<ul> <li>bug fixes<ul> <li>editor zoom: adjust root widget size when zooming out</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1190","title":"1.19.0","text":"<ul> <li> <p>editor</p> <ul> <li>add keyboard shortcut \"h\" to hide selection and widget drag / resize handles while pressed</li> <li>inspector: add some shortcut buttons in the header</li> </ul> </li> <li> <p>widgets</p> <ul> <li>add folder widget (flat container that doesn't affect layout)</li> <li>input: add <code>maxLength</code> property</li> <li>multixy: allow setting its own value from onValue script while touched</li> </ul> </li> <li> <p>ui</p> <ul> <li>add a virtual onscreen keyboard for desktop clients (can be enabled from the clients main menu)</li> <li>change local zoom (alt+scroll) behavior so that it only affect widgets and add scrollbars to navigate while zooming instead of following the mouse</li> </ul> </li> <li> <p>server</p> <ul> <li>client-options: add <code>virtualKeyboard</code> option to enable virtual keyboard by default (desktop clients only)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1183","title":"1.18.3","text":"<ul> <li>bug fixes<ul> <li>button: regression in push mode (<code>on</code> value not passed to <code>onValue</code> script when triggered from another widget)</li> <li>button: decoupled push mode returning wrong value when activated from a widget script</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1182","title":"1.18.2","text":"<ul> <li>bug fixes<ul> <li>canvas: <code>onTouch</code> not triggered on iOS when when <code>event.force</code>, <code>event.altitudeAngle</code> or <code>event.azimuthAngle</code> changes</li> <li>switch: interaction issue when value labels contain icons</li> <li>ios: attempt to fix rendering glitch when waking up after sleep</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1181","title":"1.18.1","text":"<ul> <li>widgets<ul> <li>button: add <code>decoupled</code> property, compatible with all button modes</li> <li>button: remove <code>decoupled</code> mode</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1180","title":"1.18.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>client script source map not loading (helps providing useful error messages)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>button: add <code>decoupled</code> mode (toggle mode that only updates its state when it receives a value from osc/midi messages)</li> <li>button: add client option <code>altTraversing</code> to allow one-way response to traversing gestures for toggle buttons</li> <li>canvas: iOS: trigger <code>onTouch</code> when <code>event.force</code>, <code>event.altitudeAngle</code> or <code>event.azimuthAngle</code> updates</li> <li>knob: add <code>snap-alt</code> mode (snap mode that allows jumping between range.min and range.max)</li> <li>all: add <code>borderRadius</code> property</li> </ul> </li> <li> <p>scripting</p> <ul> <li>add <code>updateCanvas()</code> function (forces a canvas widget to redraw)</li> </ul> </li> <li> <p>remote control</p> <ul> <li><code>/NOTIFY</code>: if multiple arguments are provided, interpret the first one as the icon's name for the client notification</li> </ul> </li> <li> <p>midi</p> <ul> <li>on Mac, name virtual ports after the device name to avoid confusion</li> </ul> </li> <li> <p>server</p> <ul> <li>client-options: add <code>clientSync</code> option to allow disabling client synchronization</li> <li>client-options: add <code>altTraversing</code> option</li> </ul> </li> <li> <p>editor</p> <ul> <li>add <code>F2</code> keyboard shortcut to bring label property input into view if selected widget has one</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1170","title":"1.17.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: error when ctrl+clicking on a root's child</li> <li>range: multitouch interaction issue</li> </ul> </li> <li> <p>widget</p> <ul> <li>knob / encoder: <code>sensitivity</code> and ctrl+drag gesture preserve <code>circular</code> mode behavior</li> <li>knob / encoder: <code>snap</code> mode now works like <code>circular</code> mode except for the touch start event (value can't jump from start to end anymore)</li> <li>patchbay: add <code>exclusive</code> option</li> </ul> </li> <li> <p>editor</p> <ul> <li>allow interacting with a widget without selecting it by using the middle mouse button or by holding shift+win (shift+cmd on mac).</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1166","title":"1.16.6","text":"<ul> <li>bug fixes<ul> <li>visibility property update issues</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1164","title":"1.16.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>modal: display issue when a modal receives the same value multiple times</li> <li>patchbay: <code>outputs</code> property not handling object value properly</li> <li>server: resolution conflict between app files and user files</li> </ul> </li> <li> <p>widgets</p> <ul> <li>patchbay: trigger <code>onValue</code> script when a connection changes</li> </ul> </li> <li> <p>misc</p> <ul> <li>windows: allow accessing other drives than the default one (list drives when the file browser reaches the filesystem's root)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1163","title":"1.16.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>custom module: submodules not loading their own submodules with relative paths properly</li> <li>custom module: issue with circular submodule requires</li> <li>server: harmless error message when importing css files from the main theme file</li> <li>server: allow using folder names \"client\" and \"assets\" for user files (eg for images used in a session)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>canvas: add <code>onResize</code> script property</li> <li>scripting: expose javascript's <code>Image</code> constructor</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1162","title":"1.16.2","text":"<ul> <li> <p>bug fixes</p> <ul> <li>widget visibility not updated properly when set as a non-boolean value</li> </ul> </li> <li> <p>widgets</p> <ul> <li>tabs: detach hidden tabs from the DOM (reduces lag caused by heavy tabs)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1161","title":"1.16.1","text":"<ul> <li>bug fixes<ul> <li>eq widgets not properly converted when importing v0 sessions</li> <li>image paths with url queries not loaded properly</li> <li>@{} syntax not returning truncated value according to the widget's precision property (fixed for primitive values only, object values are still returned as is)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1160","title":"1.16.0","text":"<ul> <li>advanced syntaxes<ul> <li><code>@{}</code> and <code>VAR{}</code> that return objects / arrays do not return a copy of their value anymore as it may introduce a significant overhead when used extensively. Mutating these objects in <code>#{}</code> and <code>JS{}</code> scripts will now affect the actual values and should be avoided at all cost.</li> </ul> </li> <li>widgets<ul> <li><code>comments</code> property flagged as dynamic</li> <li>multixy: add <code>doubleTap</code> property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1158","title":"1.15.8","text":"<ul> <li>bug fixes<ul> <li>range: value update issue (internal touch state not updated properly)</li> <li>scripting: send(): ignore <code>ignoreDefaults</code> property</li> <li>script: onKeyboard script not cleaned upon edition / removal</li> <li>editor: some variables not appearing as defined in <code>onKeyboard</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#1157","title":"1.15.7","text":"<ul> <li> <p>bug fixes</p> <ul> <li>matrix: property resolution issue with object/array items in <code>props</code></li> <li>bypass client option <code>nofocus=1</code> when the editor is enabled</li> <li>menu/dropdown: display label when value is undefined</li> </ul> </li> <li> <p>misc</p> <ul> <li>updated midi bridge: provide more information when loading fails; may fix some compatibility issue on windows</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1156","title":"1.15.6","text":"<ul> <li>bug fixes<ul> <li>ios: prevent server error related to the use of cookies</li> <li>scripting: <code>getVar()</code> now returns a copy of the variable to prevent mutations on saved object</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1155","title":"1.15.5","text":"<ul> <li> <p>bug fixes</p> <ul> <li>matrix: advanced property issue in <code>props</code> property (bis)</li> </ul> </li> <li> <p>editor</p> <ul> <li>inspector: add solo mode with <code>alt+click</code> for category panels</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1154","title":"1.15.4","text":"<ul> <li>bug fixes<ul> <li>matrix: advanced property issue in <code>props</code> property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1153","title":"1.15.3","text":"<ul> <li>bug fixes<ul> <li>interaction issue (\"deadzone\") on touch screens</li> <li>main menu not hidden when <code>read-only</code> is set</li> <li>osc messages containing unicode characters not encoded correctly</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1152","title":"1.15.2","text":"<ul> <li>bug fixes<ul> <li>modal: scroll state not restored when the modal container is recreated</li> <li>server: allow spaces and accentuated characters in client id</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1151","title":"1.15.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>prevent flickering on canvas based widgets when they are recreated</li> </ul> </li> <li> <p>editor</p> <ul> <li>added code editor for <code>html</code> and <code>css</code> properties</li> </ul> </li> <li> <p>remote control</p> <ul> <li>add <code>/RELOAD</code> command</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1150","title":"1.15.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: prevent accessing non-editable widgets with right arrow</li> <li>multixy: regression causing interaction issue</li> </ul> </li> <li> <p>widgets</p> <ul> <li>add <code>lock</code> property to all widgets</li> </ul> </li> <li> <p>launcher</p> <ul> <li>add <code>Autostart</code> menu option</li> </ul> </li> <li> <p>misc</p> <ul> <li>update FontAwesome icon font to version 6</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1146","title":"1.14.6","text":"<ul> <li>bug fixes<ul> <li>inspector: script editor: cursor alignment issue in indented lines  </li> <li>clone: prevent freeze and print an error when attempting to create a circular clone</li> <li>modal: regression on android that prevents focusing input widgets in modals</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1145","title":"1.14.5","text":"<ul> <li>bug fixes<ul> <li>session loading error with some malformed property cases</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1144","title":"1.14.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>broken console interpreter since v1.14.0</li> </ul> </li> <li> <p>widgets</p> <ul> <li>button: add <code>momentary</code> mode for sending messages with no value; prevent button from getting stuck when <code>on</code> and <code>off</code> are equal in <code>momentary</code> and <code>tap</code> modes</li> </ul> </li> <li> <p>inspector</p> <ul> <li>color picker: inline picker widget (no longer in a modal); show color changes on the fly</li> <li>code editor: validate input with <code>cmd+enter</code> instead of <code>ctrl+enter</code> on Mac</li> </ul> </li> <li> <p>scripting</p> <ul> <li><code>screen.height</code> and <code>screen.width</code> always returns the current screen dimensions</li> <li>added <code>screen.orientation</code> global variable</li> </ul> </li> <li> <p>misc</p> <ul> <li>some performance improvements</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1143","title":"1.14.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>osc receivers (<code>OSC{}</code> syntax) now apply the same rule as widgets regarding midi messages (only receive if the message's origin matches one of the host widget's midi targets)</li> <li>modal: rendering issue on iOS</li> <li>button: <code>locals.touchCoords</code> not updated since v1.14.0</li> </ul> </li> <li> <p>widgets</p> <ul> <li>clone/fragment: remove scripting properties as they are supposed to be overridden in <code>props</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#1142","title":"1.14.2","text":"<ul> <li>bug fixes<ul> <li>context-menu: double click issue in submenus on small touch screens</li> <li>clone/fragment: broken onDraw / onTouch scripts if cloned widget is a canvas   </li> </ul> </li> </ul>"},{"location":"docs/changelog/#1140-1141","title":"1.14.0, 1.14.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>misc: sending typed arguments (<code>{type, value}</code> objects) should override the widget's <code>typeTags</code> definition</li> <li>multixy: errors when <code>ephemeral</code> is <code>true</code></li> <li>scripting: <code>setVar</code> not affecting all widgets when multiple widgets match provided id</li> </ul> </li> <li> <p>widgets</p> <ul> <li>renamed <code>script</code> property to <code>onValue</code>, <code>draw</code> to <code>onDraw</code>, <code>touch</code> to <code>onTouch</code></li> <li>added <code>onCreate</code> script property to all widgets</li> <li>added <code>onTouch</code> script to widgets that supported the touch state variable in scripts (now deprecated)</li> <li>script: added <code>onKeyboard</code> property, removed <code>event</code> property</li> <li>canvas: expose additional touch event informations (<code>radiusX</code>, <code>radiusY</code>, <code>rotationAngle</code> and iOS-only  <code>altitudeAngle</code>, <code>azimuthAngle</code> and <code>touchType</code>)</li> </ul> </li> <li> <p>scripting</p> <ul> <li>special keyword <code>this</code> now returns the string <code>\"this\"</code></li> </ul> </li> <li> <p>advanced syntaxes</p> <ul> <li>added <code>IMPORT{file}</code> syntax to allow loading external files in properties</li> </ul> </li> <li> <p>editor</p> <ul> <li>add fullscreen mode for properties with code editor enabled</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1132","title":"1.13.2","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: keep relative sizes and positions when resizing multiple widgets at a time</li> </ul> </li> <li> <p>widgets</p> <ul> <li>canvas: expose touch pressure (as <code>event.force</code>) in the <code>touch</code> script.</li> <li>canvas: expose touch events for extra elements added with the <code>html</code> property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1131","title":"1.13.1","text":"<ul> <li>bug fixes<ul> <li>editor: data loss when leaving the editor's focus with no modifications  </li> </ul> </li> </ul>"},{"location":"docs/changelog/#1130","title":"1.13.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>scripting: <code>storage.getItem()</code> not returning anything</li> </ul> </li> <li> <p>editor</p> <ul> <li>new code editor for <code>script</code>, <code>touch</code>, <code>draw</code> and <code>props</code> properties with syntax highlighting, line numbers, etc</li> </ul> </li> <li> <p>scripting</p> <ul> <li><code>set()</code>: add an option to prevent target widget's script  </li> </ul> </li> <li> <p>widgets</p> <ul> <li>root: add <code>hideMenu</code> property</li> </ul> </li> <li> <p>misc</p> <ul> <li>minor cosmetic changes</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1120","title":"1.12.0","text":"<ul> <li>widgets<ul> <li>new canvas widget (under <code>pads</code>): allows creating custom widgets</li> <li>button: expose normalized touch coordinates in scripts as <code>locals.touchCoords</code></li> <li>print a warning in the console when using advanced syntaxes in the script property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1111","title":"1.11.1","text":"<ul> <li>bug fixes<ul> <li>client options specified in server config not working unless lowercased</li> <li>make disconnection detection less aggressive (don't display notification if reconnection succeeds quickly)</li> <li>panel: initial scroll state issue</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1110","title":"1.11.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>menu: interaction issue on iOS</li> <li>script: prevent script functions from being called in the wrong scope (ie when leaked using the <code>globals</code> object) and print an explicit error</li> <li>containers: prevent errors with some color formats in colorWidget</li> <li>theme: relative url not resolved correctly</li> </ul> </li> <li> <p>widgets</p> <ul> <li>when a panel contains widgets and has <code>scroll</code> set to <code>true</code>, its value will be used to represent the scroll position for x-axis and y-axis between 0 and 1.</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1103","title":"1.10.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>config not persistent on windows</li> </ul> </li> <li> <p>misc</p> <ul> <li>read-only mode now hides and disables the main menu</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1102","title":"1.10.2","text":"<ul> <li>bug fixes<ul> <li>certificate expiration issue</li> <li>regression breaking colors in canvas-based widgets</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1100","title":"1.10.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>sliders: ignore key order in <code>range</code></li> <li>sliders: handle mousewheel increment when starting from a value between two steps with <code>steps</code> property defined</li> <li>inspector: allow scrolling in the help modal</li> <li>console: fix command history behavior and increase history size</li> </ul> </li> <li> <p>widgets</p> <ul> <li>encoder: expose angle in script (as <code>locals.angle</code>)</li> <li>new textarea widget (multi line input)</li> <li>expose the computed dimensions of canvas-based widgets in <code>css</code> (as <code>--widget-width</code> and <code>--widget-height</code>) and <code>script</code> (as <code>locals.width</code> and <code>locals.height</code>)</li> </ul> </li> <li> <p>client</p> <ul> <li>add <code>Save backup</code> menu action (saves a backup copy of current session with an incremented suffix appended to the file name)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1914","title":"1.9.14","text":"<ul> <li>bug fixes<ul> <li>modal: remove <code>html</code> property</li> <li>matrix: nested property inheritance (eg. <code>@{id_@{id_x}}</code>) not working in <code>props</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#1913","title":"1.9.13","text":"<ul> <li>bug fixes<ul> <li>nested property inheritance (eg. <code>@{id_@{id_x}}</code>) not updating properly</li> <li>canvas based widgets not updating when hidden</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1912","title":"1.9.12","text":"<ul> <li>bug fixes<ul> <li>client options: options ignored if not lowercased</li> <li>sliders: prevent errors for some edge-case <code>range</code> values</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1911","title":"1.9.11","text":"<ul> <li> <p>bug fixes</p> <ul> <li>range: value not properly updated with set()</li> </ul> </li> <li> <p>misc</p> <ul> <li>(built-in client only) add <code>nofocus</code> client option to prevent the client window from taking focus unless a text input or a dropdown is clicked.</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1910","title":"1.9.10","text":"<ul> <li> <p>bug fixes</p> <ul> <li>matrix: regression from 1.9.8 (broken nested @{} syntax in props property)</li> </ul> </li> <li> <p>misc</p> <ul> <li>midi: detect missing binary (eg when deleted by antivirus) and print a message</li> </ul> </li> </ul>"},{"location":"docs/changelog/#199","title":"1.9.9","text":"<ul> <li>bug fixes<ul> <li>matrix: regression from 1.9.8</li> </ul> </li> </ul>"},{"location":"docs/changelog/#198","title":"1.9.8","text":"<ul> <li> <p>bug fixes</p> <ul> <li>matrix: update children when <code>props</code> is modified even when the result for <code>$ = 0</code> doesn't change</li> <li>fragments: fragment widgets empty when reloading</li> <li>panel: scrollbar issue on iOS 13+</li> </ul> </li> <li> <p>scripting</p> <ul> <li>expose <code>console.clear()</code></li> </ul> </li> </ul>"},{"location":"docs/changelog/#197","title":"1.9.7","text":"<ul> <li> <p>bug fixes</p> <ul> <li>issue when resizing widget using keyboard shortcuts</li> <li>advanced syntaxes (VAR{}): avoid storing default value as string if it can be parsed as a javascript primitive (boolean, number, etc)</li> <li>advanced syntaxes (VAR{}): ignore quotes around variable name</li> </ul> </li> <li> <p>editor</p> <ul> <li>change keyboard shortcuts for moving widgets (now <code>mod + arrows</code>) and navigating in widgets (now <code>arrows</code>) to feel more natural with the project tree view.</li> </ul> </li> <li> <p>widgets</p> <ul> <li>script: bypass keyboard shortcuts already used by the editor if it is enabled</li> <li>matrix: removed ambiguous <code>start</code> property</li> <li>matrix: advanced syntax blocks can be passed to children without being resolved at the matrix\\' scope by adding an underscore before the opening bracket</li> <li>text: add <code>soft</code> mode for the <code>wrap</code> property</li> <li>input: improve <code>numeric</code> mode on iOS</li> </ul> </li> </ul>"},{"location":"docs/changelog/#196","title":"1.9.6","text":"<ul> <li> <p>bug fixes</p> <ul> <li>advanced syntaxes: <code>VAR{}</code> not updating when the default value is edited</li> <li>editor: fix \"Bring to front\" and \"Send to back\" context menu actions</li> </ul> </li> <li> <p>ui</p> </li> <li> <p>add keyboard shortcuts <code>mod + \"+\"</code> and <code>mod + \"-\"</code> to control zoom level</p> </li> <li> <p>widgets</p> <ul> <li>input: add <code>numeric</code> property (allows numeric values only and displays numeric keyboard on mobile devices)</li> <li>button: add <code>soft</code> mode for the <code>wrap</code> property</li> <li>switch: add <code>wrap</code> property</li> </ul> </li> <li> <p>editor</p> <ul> <li>display dropdown and checkbox for boolean properties with extra choices</li> </ul> </li> </ul>"},{"location":"docs/changelog/#195","title":"1.9.5","text":"<ul> <li> <p>bug fixes</p> <ul> <li>advanced syntaxes: various issues and regressions</li> <li>editor: preserve advanced syntaxes in <code>left</code> and <code>top</code> when pasting a widget</li> </ul> </li> <li> <p>editor</p> <ul> <li>tree: update widget visibility when it changes dynamically</li> </ul> </li> </ul>"},{"location":"docs/changelog/#194","title":"1.9.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>prevent error with empty <code>OSC{}</code> blocks</li> <li>regression breaking advanced syntax blocks containing nested brackets</li> </ul> </li> <li> <p>advanced syntaxes</p> <ul> <li>new syntax for creating and using custom variables in properties: <code>VAR{name, default}</code></li> <li><code>JS{}</code> blocks don't require 2 brackets anymore (<code>JS{{}}</code> still works)</li> </ul> </li> <li> <p>scripting</p> <ul> <li>add <code>getVar()</code> and <code>setVar()</code> for reading and modifying custom variables. This allows modifying properties directly from scripts (if they contain <code>VAR{}</code> blocks).</li> <li>expose session path as <code>globals.session</code></li> </ul> </li> <li> <p>editor</p> <ul> <li>make tree item blink when hitting \"Show in tree\"</li> </ul> </li> <li> <p>remote control</p> <ul> <li>add <code>/SCRIPT</code> command to run scripts remotely</li> </ul> </li> </ul>"},{"location":"docs/changelog/#193","title":"1.9.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>scripting: set() not working from a slider to a pad</li> <li>tabs not sending messages / triggering scripts when clicked in editing mode</li> <li>prevent hang with some syntax errors in advanced syntaxes</li> <li>don't show project tree if minimized when creating a new widget (1.9.2 regression)</li> <li>fix \"ID + 1\" paste for widgets with numeric ids</li> <li>dropdown: reset the underlying dropdown when the widget's value is undefined</li> </ul> </li> <li> <p>editor</p> <ul> <li>tree: allow specifying multiple type filters</li> <li>tree: add \"Show in session\" context menu action</li> </ul> </li> </ul>"},{"location":"docs/changelog/#192","title":"1.9.2","text":"<ul> <li> <p>bug fixes</p> <ul> <li>visualizer: remove <code>bars</code> and <code>dots</code> option</li> <li>plot: fix <code>bars</code> option</li> <li>project tree: clear filter input when loading a session</li> <li>server: fix serving files from paths containing accents</li> <li>editor: keep editor open when loading a session</li> <li>menu: prevent clipping in container on iOS</li> </ul> </li> <li> <p>widgets</p> <ul> <li>image: add pre defined values for <code>size</code>, <code>position</code> and <code>repeat</code> properties</li> <li>text: add vertical alignment choices to <code>align</code></li> </ul> </li> <li> <p>editor</p> <ul> <li>tree: add icons before widget ids depending on the category</li> <li>tree: activate tab when selecting it in the project tree</li> <li>tree: allow dragging widgets from a container to another</li> <li>tree: expand container when a new widget is created inside it</li> <li>tree: add support for filtering widgets by type (by typing <code>type:fader</code> for example)</li> <li>smarter shift+drag selection: allow selecting widgets in the area when the event started on the parent container</li> <li>select newly created widgets/tab except when copy-pasting</li> </ul> </li> <li> <p>remote control</p> <ul> <li>add <code>/STATE/SEND</code> command</li> </ul> </li> </ul>"},{"location":"docs/changelog/#191","title":"1.9.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>button: allow writing strings like <code>\"1.0\"</code> in <code>label</code> without removing the decimals</li> <li>editor: use css variable <code>--grid-width</code> at startup and after disabling &amp; enabling the grid</li> <li>launcher: regression preventing server halt when built-in client is closed manually beforehand</li> <li>scripting: prevent crash (built-in client only) when using the variable <code>navigator</code></li> </ul> </li> <li> <p>widgets</p> <ul> <li>menu/switch/dropdown: reset value to <code>undefined</code> when receiving a value that's not defined in <code>values</code></li> </ul> </li> <li> <p>scripting</p> <ul> <li>expose instance of navigator Clipboard as <code>globals.clipboard</code></li> </ul> </li> <li> <p>midi</p> <ul> <li>allow sending note off with velocity</li> <li>add option for receiving note off with velocity</li> </ul> </li> <li> <p>misc</p> <ul> <li>v0-&gt;v1 session conversion: remove <code>JS{{}}</code> in script property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#190","title":"1.9.0","text":"<p>Warning Sessions saved with this version will not open in older versions (sessions saved with older version will open in this version).  </p> <ul> <li> <p>bug fixes</p> <ul> <li>remote-root option not applied on resources loaded by the client app (css images, etc)</li> <li>input: display issue when resizing the window</li> <li>launcher: cancel stopping the server when there are unsaved changes in the built-in client</li> </ul> </li> <li> <p>editor</p> <ul> <li>context menu: add <code>export</code> action to export a widget as a fragment file</li> <li>show project tree if minimized when clicking on \"Show in tree\"</li> </ul> </li> <li> <p>widget</p> <ul> <li>new <code>fragment</code> widgets (under <code>containers</code>): embedded session or fragment file with overridable properties.</li> <li>add <code>comments</code> property to all widgets</li> </ul> </li> <li> <p>launcher</p> <ul> <li>add <code>Always on top</code> menu toggle</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1815","title":"1.8.15","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: error when duplicating widget while if the clipboard is empty</li> <li>ui: local zoom move issue when not in fullscreen</li> <li>custom module: <code>clearInterval()</code> not working</li> <li>regression breaking style attribute in html property</li> </ul> </li> <li> <p>misc</p> <ul> <li>faster local zoom  </li> </ul> </li> </ul>"},{"location":"docs/changelog/#1814","title":"1.8.14","text":"<ul> <li> <p>bug fixes</p> <ul> <li><code>alt+shift+c</code> not working when pressed before dragging</li> <li>incremental pasting issue with address property</li> <li>generate scrollbars for panels on iOS 13+</li> <li>fix scrolling on chrome for iOS 13+</li> </ul> </li> <li> <p>editor</p> <ul> <li>add <code>mod+d</code> and <code>mod+shift+d</code> for duplicating widgets</li> <li>use a temporary clipboard when duplicating widgets</li> </ul> </li> <li> <p>misc</p> <ul> <li>inspector: move <code>script</code> property to <code>scripting</code> category</li> <li>ui: minor style tweaks</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1813","title":"1.8.13","text":"<ul> <li> <p>widgets</p> <ul> <li>file: show save icon when mode is set to save</li> <li>file: center icon when hidePath is set to true</li> <li>sliders/pads: apply <code>spring</code> property dynamically</li> </ul> </li> <li> <p>ui</p> <ul> <li>add <code>alt</code>+<code>wheel</code> for local zoom centered on cursor</li> </ul> </li> <li> <p>editor</p> <ul> <li>add <code>alt+c+drag</code> and <code>alt+shift+c+drag</code> for duplicating dragged widgets</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1812","title":"1.8.12","text":"<ul> <li> <p>bug fixes:</p> <ul> <li>project tree: filter input position issue when scrolling</li> <li>sliders/pads: apply <code>spring</code> property dynamically</li> </ul> </li> <li> <p>project tree</p> <ul> <li>select range of contiguous widgets with shift + click</li> </ul> </li> <li> <p>misc</p> <ul> <li>plot: remove unused <code>filters</code> property; fix description for <code>rangeX</code> and <code>rangeY</code></li> <li>console: focus input when the console opens</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1811","title":"1.8.11","text":"<ul> <li> <p>bug fixes</p> <ul> <li>switch: widget not reacting at first touch when traversing is enabled on parent</li> <li>sliders: disable mousewheel when <code>spring</code> is enabled</li> </ul> </li> <li> <p>widgets</p> <ul> <li>script: add <code>once</code> event mode</li> <li>encoder: remove <code>spring</code> property</li> </ul> </li> <li> <p>custom module</p> <ul> <li>expose <code>process</code> global</li> </ul> </li> <li> <p>scripting</p> <ul> <li>add <code>openUrl</code> function</li> </ul> </li> </ul>"},{"location":"docs/changelog/#1810","title":"1.8.10","text":"<ul> <li> <p>bug fixes</p> <ul> <li>modal: issues with children's visibility</li> <li>console: allow multiple arguments in console.log()</li> </ul> </li> <li> <p>ui</p> <ul> <li>launcher: add many keyboard shortcuts</li> <li>client: add keyboard shortcuts for clearing the console</li> </ul> </li> <li> <p>scripting</p> <ul> <li>add <code>setFocus</code> function to focus an input widget programmatically</li> </ul> </li> <li> <p>misc</p> <ul> <li>add <code>usePercents</code> client option</li> </ul> </li> </ul>"},{"location":"docs/changelog/#189","title":"1.8.9","text":"<ul> <li>bug fixes<ul> <li>script: issue when using the <code>options</code> argument in <code>set()</code> (options leaked to subsequent set() calls in the script)</li> <li>multixy: <code>decimals</code> property not applied</li> <li>multixy: spring behavior not working until all points are released  </li> <li>custom module: prevent require() from reading submodules files each time and instead return the object in memory</li> </ul> </li> </ul>"},{"location":"docs/changelog/#188","title":"1.8.8","text":"<ul> <li> <p>launcher</p> <ul> <li>add file browser button for the <code>theme</code> option and fix parsing path containing spaces if only one theme is set</li> </ul> </li> <li> <p>windows</p> <ul> <li>remove <code>ctrl+w</code> shortcut for closing a window (use <code>alt+f4</code> instead)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#187","title":"1.8.7","text":"<ul> <li> <p>midi</p> <ul> <li>add active sensing messages support (received as sysex)</li> </ul> </li> <li> <p>remote control</p> <ul> <li>restore <code>/TABS</code> command (for opening tabs by ids)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>encoder: expose rotation speed in script (as <code>locals.speed</code>)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#186","title":"1.8.6","text":"<ul> <li>bug fixes<ul> <li>range: per-fader touch event not emitted properly</li> <li>rgb: fix <code>spring</code> property</li> <li>rgb: touch event not emitted</li> </ul> </li> </ul>"},{"location":"docs/changelog/#185","title":"1.8.5","text":"<ul> <li>bug fixes<ul> <li>midi: debug messages displayed as errors</li> <li>launcher: broken context menu</li> </ul> </li> </ul>"},{"location":"docs/changelog/#184","title":"1.8.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>input: prevent focus when selecting the widget for edition</li> <li>input: submit content when leaving focus, not only when hitting <code>enter</code> or <code>tab</code> (<code>esc</code> still cancels)</li> <li>midi: prevent midi bridge from stopping when an error occurs; provide meaningful errors when connection fails</li> </ul> </li> <li> <p>editor</p> <ul> <li>inspector: hitting ctrl+s while editing a property will submit the change before saving</li> </ul> </li> <li> <p>ui</p> <ul> <li>hide the console toggle button when the bottom panel is minimized and the editor is disabled</li> </ul> </li> <li> <p>widgets</p> <ul> <li>file: add <code>mode</code> property, for choosing between <code>open</code> and <code>save</code> modes</li> <li>switch: add <code>flip</code> mode</li> </ul> </li> </ul>"},{"location":"docs/changelog/#183","title":"1.8.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>keyboard: allow note numbers up to 127</li> <li>server: return http 404 error when a user-requested resource is not found instead of keeping a pending request</li> <li>modal: <code>visible</code> property not applied correctly</li> </ul> </li> <li> <p>project tree</p> <ul> <li>add an input for filtering displayed widget by id</li> </ul> </li> </ul>"},{"location":"docs/changelog/#182","title":"1.8.2","text":"<ul> <li> <p>bug fixes</p> <ul> <li>menu: allow manual line breaks (\"<code>\\n</code>\") in labels / values</li> <li>custom module: parsing issue when sending widget data using <code>receive()</code> (<code>type</code> attribute erroneously parsed as an osc typetag)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>html property: allow \"href\" attribute on \"a\" elements</li> </ul> </li> </ul>"},{"location":"docs/changelog/#181","title":"1.8.1","text":"<ul> <li>bug fixes<ul> <li>script: stops triggering osc messages under some circumstances</li> </ul> </li> </ul>"},{"location":"docs/changelog/#180","title":"1.8.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>project tree: layout issue with deeply nested widgets</li> <li>ios 10.3 regression</li> <li>file browser: layout issue with long paths</li> </ul> </li> <li> <p>custom module</p> <ul> <li>add <code>nativeRequire</code> function (allows loading native node modules or locally installed modules)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#178","title":"1.7.8","text":"<ul> <li> <p>bug fixes</p> <ul> <li>canvas-based widgets not drawn when placed in a modal while having a conditional visibility set</li> <li>text: missing <code>decimals</code> property</li> <li>clone: fix usage of osc listener syntax (acts as if clone has an <code>address</code> property set to <code>auto</code>)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>clone: make <code>props</code> property dynamic (avoid full widget rebuild when possible)</li> </ul> </li> <li> <p>misc</p> <ul> <li>increase client console history size and allow changing it with client url options</li> </ul> </li> </ul>"},{"location":"docs/changelog/#177","title":"1.7.7","text":"<ul> <li>bug fixes<ul> <li>startup regression</li> </ul> </li> </ul>"},{"location":"docs/changelog/#176","title":"1.7.6","text":"<ul> <li> <p>bug fixes</p> <ul> <li>(harmless) error raised when starting the server from the launcher with <code>debug</code> set to <code>true</code></li> </ul> </li> <li> <p>editor</p> <ul> <li>display/save color picked values with css rgba notation instead of hexadecimal</li> </ul> </li> <li> <p>widgets</p> <ul> <li>modal: add\u00a0<code>ignoreTabs</code> option (allows overflowing tab ancestors)</li> <li>menu: add\u00a0<code>ignoreTabs</code> option</li> </ul> </li> </ul>"},{"location":"docs/changelog/#175","title":"1.7.5","text":"<ul> <li>bug fixes<ul> <li>ios: cloned menu not displayed correctly</li> <li>engine: downgrade to fix startup issue on windows</li> </ul> </li> </ul>"},{"location":"docs/changelog/#174","title":"1.7.4","text":"<ul> <li>bug fixes<ul> <li>editor: cloned <code>dropdown</code> and <code>input</code> widgets not opening when selected</li> <li>widgets: prevent value-stateless widgets (tap buttons, clone, scripts, html and svg) from sending a value for cross-client synchronization (leads to unexpected script execution) and exclude them from state saves</li> <li>input: apply <code>decimals</code> number before checking the value against the <code>validation</code> expression</li> <li>range: <code>steps</code> and <code>dashed</code> property not working; remove <code>origin</code> property</li> <li>config conflicts between launcher and server (affecting at least session history)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#173","title":"1.7.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>custom module / theme: prevent reloading the module while the file is being written to</li> <li>server: if a theme is used, attempt to resolve image urls against the theme file's location</li> <li>modal/button: prevent error when <code>label</code> is updated</li> </ul> </li> <li> <p>widgets</p> <ul> <li>encoder: add  <code>ticks</code> property back</li> </ul> </li> </ul>"},{"location":"docs/changelog/#172","title":"1.7.2","text":"<ul> <li>bug fixes<ul> <li>midi: mtc parsing error</li> <li>custom module: hot reload cache issue on windows</li> </ul> </li> </ul>"},{"location":"docs/changelog/#171","title":"1.7.1","text":"<ul> <li>bug fixes<ul> <li>regression causing server errors</li> </ul> </li> </ul>"},{"location":"docs/changelog/#170","title":"1.7.0","text":"<p>Important change</p> <p>Prebuilt binaries are now supplied only for 64bit Linux/MacOs/Windows. Other platforms should use the <code>node</code> package or build it from sources.</p> <p>MIDI support</p> <p>As of this version, packages except the <code>node</code> package are bundled with a midi binary that will be used whenever midi's <code>path</code> option is not set. It is no longer necessary to install <code>python</code> and <code>python-rtmidi</code>.</p> <p>Changelog</p> <ul> <li> <p>bug fixes</p> <ul> <li>editor: missing context menu (copy, paste) in inspector inputs</li> <li>widgets: osc listeners not resolving \"auto\" address</li> <li>cli: <code>ELECTRON_RUN_AS_NODE</code> headless mode not working without <code>--no-gui</code> option</li> <li>ios: clone widget not laid out properly in horizontal panels</li> <li>ui: missing vertical scrollbar when root's height overflows the workspace</li> <li>server: provide readable error when a file requested by the client file is not found  </li> <li>tab: content not drawn when changing visible property</li> <li>matrix: addresses not generated property when matrix' address is <code>auto</code></li> </ul> </li> <li> <p>ui</p> <ul> <li>add console bottom panel with a simple script interpreter</li> </ul> </li> <li> <p>widgets</p> <ul> <li>keyboard: add <code>velocity</code> property (allows mapping the touch coordinates between <code>off</code> (top) and <code>on</code> (bottom))</li> <li>input: add <code>validation</code> property (allows defining a regular expression that the value must match)</li> <li>modal: add <code>relative</code> position property</li> </ul> </li> <li> <p>midi</p> <ul> <li>accept sending sysex strings without spaces between the bytes</li> <li>load prebuilt midi binary on 64bit linux/windows/osx</li> <li>add support for midi time code messages</li> </ul> </li> <li> <p>misc</p> <ul> <li>sessions converted from v0 will use the widget's html property to display the former label property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#162","title":"1.6.2","text":"<ul> <li>bug fixes<ul> <li>matrix: issues when changing non-dynamic properties (content not properly removed)</li> <li>input: apply default value when receiving an empty value or no value at all</li> </ul> </li> </ul>"},{"location":"docs/changelog/#161","title":"1.6.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>keyboard: prevent <code>script</code> property from being copied to each key</li> </ul> </li> <li> <p>widgets</p> <ul> <li>keyboard: make <code>on</code> and <code>off</code> properties dynamic</li> <li>script: add <code>getIndex</code> function</li> <li>matrix/keyboard: <code>id</code> variable in script is now the <code>id</code> of the child widget that triggered the event</li> </ul> </li> </ul>"},{"location":"docs/changelog/#160","title":"1.6.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>range: error when setting <code>default</code> property</li> <li>range: fix <code>doubleTap</code> property</li> </ul> </li> <li> <p>widgets</p> <ul> <li>all: add <code>html</code> property to allow inserting custom content in widgets (label, value, etc) and style it with the <code>css</code> property.</li> </ul> </li> <li> <p>scripting:</p> <ul> <li><code>send()</code>: ignore the widget's <code>bypass</code> property (allows bypassing default messages and define custom ones)</li> <li><code>set()</code>: add supports for wildcards in the id parameter</li> <li><code>set()</code>: add a 3<sup>rd</sup> optional parameter for preventing further script executions and/or osc messages from being sent</li> </ul> </li> <li> <p>custom module</p> <ul> <li>automatically reload custom module when the file is modified</li> <li>add support for loading submodules with <code>require()</code></li> </ul> </li> <li> <p>theme</p> <ul> <li>automatically reload theme when the file is modified</li> </ul> </li> </ul>"},{"location":"docs/changelog/#154","title":"1.5.4","text":"<ul> <li> <p>bug fixes</p> <ul> <li>ssl: generate unique certificates (with random serial numbers) to avoid reuse errors. Certificates generated with older versions of o-s-c will be updated automatically.</li> <li><code>~/</code>\u00a0path prefix not recognized when using remote control commands like <code>/SESSION/SAVE</code></li> <li><code>~/</code> path prefix not recognized in <code>remote-root</code> option</li> <li>editor: paste ID+1: midi-related addresses should not be incremented</li> </ul> </li> <li> <p>remote control</p> <ul> <li>add <code>/STATE/OPEN</code> and <code>/STATE/SAVE</code> commands</li> <li>ignore unsaved changes when loading a session with <code>/SESSION/OPEN</code></li> <li>resolve relative file paths against <code>remote-root</code> setting  </li> </ul> </li> </ul>"},{"location":"docs/changelog/#153","title":"1.5.3","text":"<ul> <li>bug fixes<ul> <li>editor: error when <code>preArgs</code> and <code>address</code> are modified at the same time (affects <code>/EDIT</code> command and matrix/clone widgets)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#152","title":"1.5.2","text":"<ul> <li> <p>bug fixes</p> <ul> <li>launcher: midi device names containing multiple spaces not parsed correctly</li> <li>fullscreen: lack of support not detected on some ios devices</li> <li>multixy: labels not hidden when <code>ephemeral</code> is <code>true</code></li> </ul> </li> <li> <p>remote control</p> <ul> <li>add <code>/SESSION/OPEN</code> and <code>/SESSION/SAVE</code> commands</li> </ul> </li> </ul>"},{"location":"docs/changelog/#151","title":"1.5.1","text":"<ul> <li> <p>bug fixes</p> <ul> <li>widgets: touch state scripts not triggering some synchronization mechanism</li> </ul> </li> <li> <p>widgets</p> <ul> <li>encoder: remove <code>steps</code>, <code>ticks</code> and <code>origin</code> properties</li> <li>encoder: make <code>sensitivity</code> work with values below 1</li> </ul> </li> </ul>"},{"location":"docs/changelog/#150","title":"1.5.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>image: broken value validation</li> <li>menu/dropdown: use correct z-index</li> <li>dropdown: prevent dropdown from opening when selecting the widget for edition</li> </ul> </li> <li> <p>editor</p> <ul> <li>holding <code>alt</code> extends the north-west handle to the widget's size to ease dragging</li> <li>widget properties reordered (e.g. style-related properties, even widget-specific, are now under the \"style\" category)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>remove <code>colorBg</code> for all widgets except containers</li> <li>widgets background color is now transparent by default (can be overridden with css)</li> <li>keyboard: added <code>colorBlack</code> and <code>colorWhite</code> properties to customize key colors</li> <li>dropdown/menu: add <code>label</code> property (with support easy key/value display)</li> <li>dropdown/menu: add <code>icon</code> toggle property</li> <li>modal: add <code>popupPadding</code> property to control the button's and the container's padding independently</li> </ul> </li> </ul>"},{"location":"docs/changelog/#141","title":"1.4.1","text":"<ul> <li>bug fixes<ul> <li>multixy/range: prevent some extra touch state events;`</li> </ul> </li> </ul>"},{"location":"docs/changelog/#140","title":"1.4.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>project tree: error when dropping a widget at its initial position</li> </ul> </li> <li> <p>editor</p> <ul> <li>validate property change when clicking on a widget</li> <li>cancel property change when hitting escape</li> <li>add menu and keyboard shortcuts to reorder widgets</li> <li>add keyboard shortcut to show widget in project tree</li> <li>selected widget is not showed on top of the others anymore</li> </ul> </li> <li> <p>widgets</p> <ul> <li>expose widgets unique identifiers with property name \"uuid\"</li> <li>xy/multixy: add <code>ephemeral</code> property</li> <li>fader/knob/xy/range/multixy: remove <code>touchAddress</code> property</li> <li>fader/knob/xy/range/multixy: expose touch state in <code>script</code> property (<code>touchAddress</code> usages will be converted automatically)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#130","title":"1.3.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: hide impossible actions from context-menu (eg adding widgets in tab containers)  </li> <li>editor: error when selecting a tab/root widget while a property field contains unsubmitted changes</li> <li>panel: layout issue with tabs &amp; lineWidth property</li> <li>input: extend focusable area</li> </ul> </li> <li> <p>midi</p> <ul> <li>remove variable args in sysex messages (dynamic properties and scripting can be used to this effect)</li> <li>add support for sending sysex bytes as integers</li> <li>allow sending any system message (eg MIDI time code)</li> <li>add support for receiving MIDI time code messages (as raw sysex) (requires adding the <code>mtc</code> flag to the midi configuration)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#121","title":"1.2.1","text":"<ul> <li> <p>scripting</p> <ul> <li>expose toolbar menu actions</li> </ul> </li> <li> <p>remote control</p> <ul> <li>optimise small changes made with /EDIT</li> </ul> </li> <li> <p>widgets</p> <ul> <li>button: add <code>wrap</code> and <code>vertical</code> properties</li> <li>root: add <code>width</code> and <code>height</code> properties (helps building mobile layouts)</li> </ul> </li> </ul>"},{"location":"docs/changelog/#120","title":"1.2.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>editor: id not incremented when pasting multiple widgets with id+1</li> </ul> </li> <li> <p>main</p> <ul> <li>remove support for extra args in the <code>custom-module</code> option (fixes some path issues)</li> </ul> </li> <li> <p>widgets</p> <ul> <li>all: add <code>lineWidth</code> style property</li> <li>knob: add <code>solid</code> &amp; <code>line</code> designs</li> <li>fader: add <code>knobSize</code> property</li> </ul> </li> <li> <p>editor</p> <ul> <li>preserve percentages in position/size</li> <li>add 'Relative units (%)' option to use percents automatically on new widgets</li> </ul> </li> </ul>"},{"location":"docs/changelog/#110","title":"1.1.0","text":"<ul> <li> <p>bug fixes</p> <ul> <li>iOS 14+ scrolling issue</li> </ul> </li> <li> <p>midi</p> <ul> <li>add support for channel pressure and key pressure messages</li> </ul> </li> <li> <p>widgets</p> <ul> <li>svg: remove support for non-standard <code>%x</code> and <code>%y</code> units; fixed layout update when resized;</li> <li>knob: add support for custom dash/gap size in <code>dashed</code> property</li> </ul> </li> </ul>"},{"location":"docs/changelog/#104","title":"1.0.4","text":"<ul> <li>bug fixes<ul> <li>script: broken <code>storage.getItem</code> and <code>storage.removeItem</code></li> <li>regression breaking <code>remote-root</code> option when starting with the launcher</li> </ul> </li> </ul>"},{"location":"docs/changelog/#103","title":"1.0.3","text":"<ul> <li> <p>bug fixes</p> <ul> <li>modal: layout issue on iOS</li> </ul> </li> <li> <p>widgets</p> <ul> <li>panels: added <code>contain</code> property to allow scrolling in vertical/horizontal layouts</li> </ul> </li> <li> <p>midi</p> <ul> <li>add support for named ports in midi configuration</li> </ul> </li> </ul>"},{"location":"docs/changelog/#102","title":"1.0.2","text":"<ul> <li>bug fixes<ul> <li>broken scrolling on iPhone iOS 13</li> <li>window geometry issue  </li> </ul> </li> </ul>"},{"location":"docs/changelog/#101","title":"1.0.1","text":"<ul> <li>UI<ul> <li>windows' dimensions and position are now saved upon closing and restored at startup</li> </ul> </li> </ul>"},{"location":"docs/changelog/#100","title":"1.0.0","text":"<p>This list is not exhaustive</p> <ul> <li> <p>compatibility</p> <ul> <li>dropped support for iOS 9</li> <li>firefox (75+) support</li> </ul> </li> <li> <p>UI</p> <ul> <li>overhaul design reworked</li> <li>foldable sidepanels</li> <li>removed lobby</li> <li>added toolbar menu</li> <li>display loading (spinner) in a notification instead of a modal</li> <li>mod + w to close window</li> <li>context-menu now use click event to trigger actions, not mousedown/touchstart</li> <li>no more uppercase text by default</li> </ul> </li> <li> <p>themes</p> <ul> <li>built-in themes removed except <code>orange</code></li> </ul> </li> <li> <p>translations</p> <ul> <li>incomplete russian translation removed</li> </ul> </li> <li> <p>editor</p> <ul> <li>project tree</li> <li>dropdown for properties with multiple choices</li> <li>color picker</li> <li>preview numeric values for style-related properties set to auto</li> <li>context menu: added \"show in tree\" action</li> <li>context menu: removed \"edit parent\" action</li> <li>allow copying tabs (to tab containers only)</li> <li>shared clipboard across all clients</li> <li>prevent interaction with widgets when <code>shift</code> or <code>ctrl</code> is held</li> <li>ensure @{} bindings are always updated upon edition</li> </ul> </li> <li> <p>widget changes</p> <ul> <li>all: removed <code>label</code> option except for buttons, tabs and modals (one should use <code>text</code> widgets if needed)</li> <li>all: removed support for <code>null</code> and <code>\"self\"</code> targets</li> <li>all: added <code>ignoreDefaults</code> property (allows ignoring the server's default targets)</li> <li>all: <code>precision</code> property to <code>decimals</code>, don't set osc integer typetag when 0</li> <li>all: added <code>typeTags</code> property</li> <li>all: multiple style properties to control visibility, colors, alphas and padding</li> <li>all: added <code>interaction</code> (=&gt; css <code>pointer-events: none;</code>)</li> <li>all: added <code>expand</code> (=&gt; css <code>flex: 1;</code>)</li> <li>all:  prevent html tags in label</li> <li>pads: removed <code>split</code> property -&gt; use custom-module or script instead</li> <li>root: can contain widgets or tabs</li> <li>panels: added <code>layout</code>, <code>justify</code> and <code>gridTemplate</code> to help managing layouts (especially responsive ones)</li> <li>panels: added <code>verticalTabs</code> property</li> <li>panels: added <code>traversing</code> property, allow restricting <code>traversing</code> to a specific widget type</li> <li>fader: removed <code>input</code></li> <li>fader: removed <code>meter</code></li> <li>fader: added <code>gradient</code></li> <li>fader: added <code>round</code> design style</li> <li>fader: support setting dash size and gap size in <code>dashed</code> property</li> <li>switch: added <code>layout</code> (including grid)</li> <li>switch: added <code>click</code> mode</li> <li>plot/eq: removed <code>smooth</code></li> <li>plots/sliders/pads: reversed <code>logScale</code> behavior to match standard implementations; can be either <code>false</code> (disabled), <code>true</code> (logarithmic scale) or <code>number</code> (manual log scale, negative for exponential scale)</li> <li>visualizer: added <code>framerate</code> property</li> <li>visualizer: added <code>freeze</code> property</li> <li>menu: always centered menu</li> <li>modal: modals can't overflow parent tab boundaries</li> <li>input: removed <code>vertical</code></li> <li>pads, range: when <code>touchAddress</code> is set, one message per touched point is sent, in addition to the former touch state message</li> <li>eq: removed <code>logScaleX</code> property, always draw logarithmic frequency response</li> <li>eq: logarithmic x-axis scale fixed</li> <li>eq: filters are now defined with the <code>filters</code> property, leaving the <code>value</code> to its default purpose</li> <li>eq: added <code>rangeX</code></li> <li>html: allow <code>class</code>, <code>title</code> and <code>style</code> attributes</li> <li>dropdown: close menu when receiving a value</li> <li>dropdown: removed empty 1<sup>st</sup> option</li> <li>switch: removed <code>showValues</code> (inconsistent with menu/dropdown, feature covered by <code>values</code> property)</li> <li>frame: allow loading non local urls</li> </ul> </li> <li> <p>widget removals</p> <ul> <li><code>push</code>, <code>toggle</code>: merged into <code>button</code></li> <li><code>strip</code>: features now covered by <code>panel</code></li> <li><code>meter</code>: duplicate of <code>fader</code> with <code>design</code> to <code>compact</code> and <code>interaction</code> to <code>false</code></li> <li><code>switcher</code>, <code>state</code>, <code>crossfader</code>: removed =&gt; state management functions added to the <code>script</code> widget</li> <li><code>keys</code>: merged with <code>script</code></li> <li><code>gyroscope</code>: not compatible since chrome 74 unless o-s-c goes HTTPS</li> </ul> </li> <li> <p>remote control</p> <ul> <li>removed /TABS</li> <li>added /NOTIFY</li> </ul> </li> <li> <p>scripting (general)</p> <ul> <li>removed MathJS language</li> <li>reuse #{} syntax as as shorthand for JS{{}} (one liner, implicit return)</li> <li>added <code>locals</code> variable, a variable store scoped to the widget</li> <li>renamed <code>global</code> to <code>globals</code></li> <li>expose environment variables in <code>globals</code>: <code>url</code>, <code>env</code> (query parameters), <code>platform</code>, <code>screen</code> (width/height)</li> </ul> </li> <li> <p>script widget</p> <ul> <li>always hidden except in project tree</li> <li><code>script</code> property must not be wrapped in a JS{{}} block anymore</li> <li>added <code>stateGet</code> and <code>stateSet</code> functions</li> <li>added <code>storage</code> object, proxy to the document's localStorage object (allows storing data that persist after refresh/close (cleared with the browser's cache)</li> <li>added <code>setTimeout</code>, <code>clearTimeout</code>, <code>setInterval</code>, <code>clearInterval</code> function proxies with an extra <code>id</code> argument (they clear automatically when called multiple times and upon widget removal. <code>id</code> is scoped to the widget)</li> </ul> </li> <li> <p>state</p> <ul> <li>quickstate (store/recall from menu) is now stored in the clients cache and persists after refresh/close (cleared with the browser's cache)</li> </ul> </li> <li> <p>custom module</p> <ul> <li><code>settings.read(name)</code>: <code>name</code> is now the long name of command-line options (not a camelCased one)</li> <li><code>receive()</code>: optional last argument to pass extra options such as <code>clientId</code></li> <li>client id persist upon page refresh and can be set manually with the client url option <code>id</code></li> </ul> </li> <li> <p>launcher</p> <ul> <li>config save/load</li> <li>allow starting/stopping server without rebooting</li> <li>syntax check on <code>--midi</code> option</li> </ul> </li> <li> <p>server</p> <ul> <li>renamed <code>--url-options</code> to <code>--client-options</code> and make them apply even in remote browsers (can be overridden with url queries)</li> <li>removed <code>--blank</code>, <code>--gui-only</code>, <code>--examples</code></li> <li>hide <code>--disable-gpu</code> (cli-only)</li> <li>added cli-only <code>--cache-dir</code> and <code>--config-file</code></li> <li>added <code>--authentication</code> option</li> <li>added <code>--use-ssl</code> option</li> </ul> </li> <li> <p>misc</p> <ul> <li>canvas: better visibility checks to avoid unnecessary draw calls</li> <li>visualizer: perf improvement (avoid data processing when not visible), all visualizers hook on the same loop to avoid concurrent timeouts</li> <li>button: in 'tap' mode (formerly push with <code>noRelease</code>), never send/sync <code>off</code> value, automatically reset to <code>off</code> when receiving <code>on</code></li> <li>more detached DOM for lighter nested canvas widgets (ie multixy)</li> <li>unified (kind of) dom html structure for widgets, known css tricks will require adjustments.</li> <li>cache and config files are now stored in a folder named <code>open-stage-control</code> (located in the system's default location for config file). The <code>.open-stage-control</code> is no longer used.</li> <li>added support for icons rotate/flip transform suffixes (example: <code>^cog.spin</code>, <code>^play.rotate-horizontal</code>)</li> </ul> </li> </ul>"},{"location":"docs/client-options/","title":"Client options","text":"<p>Client options can be set either with the server's <code>--client-options</code> option, or per client by adding query parameters to the server's url. One must prepend the url with a question mark (<code>?</code>) followed by <code>parameter=value</code> pairs separated with ampersands (<code>&amp;</code>).</p> Option Value Default Description \u00a0hdpi 1 / 0 0 enable high resolution canvas\u00a0 \u00a0forceHdpi number 0 force canvas scaling (ignore <code>hdpi</code>)\u00a0 doubleTap number 375 sets the double tap/click time threshold in milliseconds zoom number 1 sets the initial zoom framerate number 60 limit canvas drawing framerate desyncCanvas number 0 set to 1 to enable desynchronized canvas (may improve rendering performances) lang string system_default use a different language than the default if available (available languages: en, fr, de, pl) consoleLength number 300 sets the maximum number of log messages in the client's console id string random_id client's unique id (use with caution: two clients should never have the same id) usePercents 1 / 0 0 sets the editor's \"relative units\" option noFocus 1 / 0 \u00a00 (built-in client only) prevent the client window from taking focus clientSync 1 / 0 \u00a01 set to 0 to prevent the client from syncing with other clients altTraversing 1 / 0 \u00a00 set to 1 to enable an alternative traversing behavior for toggle buttons (traversing gestures on toggle buttons will change their values in only one way depending on the first touched button's state) virtualKeyboard 1 / 0 \u00a00 (desktop only) set to 1 to enable the virtual keyboard by default <p>Example:</p> <p><code>http://server-ip:port?hdpi=1</code></p>"},{"location":"docs/credits/","title":"Credits","text":""},{"location":"docs/credits/#license","title":"License","text":"<p>Copyleft \u00a9 Jean-Emmanuel Doucet @ AMMD 2014-2022. This program is a free software released under the GNU/GPL3 license.</p>"},{"location":"docs/credits/#dependencies","title":"Dependencies","text":"<p>Open Stage Control relies on several other free softwares:</p> <p>https://github.com/jean-emmanuel/open-stage-control/network/dependencies</p> <p>The default theme is based on Nord, some UI components are inspired by the Atom text editor.</p>"},{"location":"docs/credits/#contributors","title":"Contributors","text":"<p>https://github.com/jean-emmanuel/open-stage-control/graphs/contributors</p>"},{"location":"docs/credits/#infrastructure-supports","title":"Infrastructure supports","text":"<p>AMMD hosts this website and made this project possible by funding its first 2 years of development.</p> <p> </p> <p>Discourse provides the community forum.</p> <p> </p> <p>BrowserStack provides remote browsers for debugging.</p>"},{"location":"docs/remote-control/","title":"Remote control","text":"<p>When osc messages are received, the default behavior is to update the value of all widgets that match the address and preArgs. Additionally, Open Stage Control responds to some general osc commands.</p> <p>Multi-client setup</p> <p>These commands are interpreted by each client connected to the server so there might be more than one reply. Using a custom module is the only way to send a message to a single client.</p>"},{"location":"docs/remote-control/#edit-id-properties-options","title":"<code>/EDIT id properties options</code>","text":"<p>Apply a set of options to an existing widget by replacing the old ones with the new ones. This ignores the widget's <code>lock</code> property.</p> <ul> <li><code>id</code>: <code>string</code>, widget's <code>id</code></li> <li><code>properties</code>: <code>string</code>, JSON5 stringified object defining the new properties to merge</li> <li>example: <code>{\"label\":\"New Label\", \"color\":\"red\"}</code></li> <li><code>options</code> (optional): <code>string</code>, JSON5 stringified object defining extra option flags:<ul> <li><code>noWarning</code>: set to <code>true</code> to prevent further warning when exiting.</li> </ul> </li> </ul> <p>Warning</p> <p>Editing widgets is cpu expensive; for small and recurrent changes, consider using osc listeners instead.</p>"},{"location":"docs/remote-control/#editmerge-id-properties-options","title":"<code>/EDIT/MERGE id properties options</code>","text":"<p>Apply a set of options to an existing widget by merging them to the widget's options.  </p>"},{"location":"docs/remote-control/#editundo","title":"<code>/EDIT/UNDO</code>","text":"<p>Undo editing action</p>"},{"location":"docs/remote-control/#editredo","title":"<code>/EDIT/REDO</code>","text":"<p>Redo editing action</p>"},{"location":"docs/remote-control/#editget-target-id","title":"<code>/EDIT/GET target id</code>","text":"<p>Sends back a widget's data (JSON stringified object), including its children, to specified target.</p> <ul> <li><code>target</code>: <code>string</code>, <code>ip:port</code> pair</li> <li><code>id</code>: <code>string</code>, widget's <code>id</code></li> </ul> <p>Replies <code>/EDIT/GET id data</code></p> <ul> <li><code>id</code>: <code>string</code></li> <li><code>data</code>: <code>string</code></li> </ul>"},{"location":"docs/remote-control/#editget-target-address-prearg1-prearg2","title":"<code>/EDIT/GET target address preArg1 preArg2 ...</code>","text":"<p>Sends back a widget's data (JSON stringified object), including its children, to specified target.</p> <ul> <li><code>target</code>: <code>string</code>, <code>ip:port</code> pair</li> <li><code>address</code>: <code>string</code>, widget's <code>address</code></li> <li><code>preArg[1...]</code>: <code>*</code>, widget's <code>preArgs</code></li> </ul> <p>Replies <code>/EDIT/GET address preArg1 preArg2 ... data</code></p> <ul> <li><code>address</code>: <code>string</code>, widget's <code>address</code></li> <li><code>preArg[1...]</code>: <code>*</code>, widget's <code>preArgs</code></li> <li><code>data</code>: <code>string</code></li> </ul>"},{"location":"docs/remote-control/#get-target-id","title":"<code>/GET target id</code>","text":"<p>Sends back a widget's value to specified target.</p> <ul> <li><code>target</code>: <code>string</code>, <code>ip:port</code> pair</li> <li><code>id</code>: <code>string</code>, widget's <code>id</code></li> </ul> <p>Replies <code>/GET id value</code></p> <ul> <li><code>id</code>: <code>string</code></li> <li><code>value</code>: <code>*</code></li> </ul>"},{"location":"docs/remote-control/#get-target-address-prearg1-prearg2","title":"<code>/GET target address preArg1 preArg2 ...</code>","text":"<p>Sends back a widget's value to specified target.</p> <ul> <li><code>target</code>: <code>string</code>, <code>ip:port</code> pair</li> <li><code>address</code>: <code>string</code>, widget's <code>address</code></li> <li><code>preArg[1...]</code>: <code>*</code>, widget's <code>preArgs</code></li> </ul> <p>Replies <code>/GET address preArg1 preArg2 ... value</code></p> <ul> <li><code>address</code>: <code>string</code>, widget's <code>address</code></li> <li><code>preArg[1...]</code>: <code>*</code>, widget's <code>preArgs</code></li> <li><code>value</code>: <code>*</code></li> </ul>"},{"location":"docs/remote-control/#get","title":"<code>/GET/#</code>","text":"<p>Same as <code>/GET</code> but uses the widget's address instead of <code>/GET</code> to reply.</p>"},{"location":"docs/remote-control/#notify-icon-message","title":"<code>/NOTIFY icon message</code>","text":"<p>Sends a notification message to the client.</p> <ul> <li><code>icon</code>: icon for the notification, for example : <code>^play</code>, <code>^pause</code>, etc (see https://fontawesome.com/icons?d=gallery&amp;s=solid&amp;m=free)</li> <li><code>message</code>: message content</li> </ul>"},{"location":"docs/remote-control/#log-message","title":"<code>/LOG message</code>","text":"<p>Print message in the client's console.</p>"},{"location":"docs/remote-control/#set-id-value","title":"<code>/SET id value</code>","text":"<p>Set a widget's value as if it was interacted with from the interface. This is likely to make it send its value.</p> <ul> <li><code>id</code>: <code>string</code>, widget's <code>id</code></li> <li><code>value</code>: <code>*</code>, widget's new value</li> </ul>"},{"location":"docs/remote-control/#set-address-prearg1-prearg2-value","title":"<code>/SET address preArg1 preArg2 ... value</code>","text":"<p>Set a widget's value as if it was interacted with from the interface. This is likely to make it send its value.</p> <ul> <li><code>address</code>: <code>string</code>, widget's <code>address</code></li> <li><code>preArg[1...]</code>: <code>*</code>, widget's <code>preArgs</code></li> <li><code>value</code>: <code>*</code>, widget's new value</li> </ul>"},{"location":"docs/remote-control/#stateget-target","title":"<code>/STATE/GET target</code>","text":"<p>Sends back the app's state to specified target</p> <ul> <li><code>target</code>: <code>string</code>, <code>ip:port</code> pair</li> </ul>"},{"location":"docs/remote-control/#stateset-state-send","title":"<code>/STATE/SET state send</code>","text":"<p>Set widgets' state</p> <ul> <li><code>state</code>: <code>string</code>, json stringified object (<code>\"widget_id\": value</code> pairs)</li> <li><code>send</code> (optional): <code>boolean</code>, set to <code>false</code> to prevent widgets from sending their values when the state is applied</li> </ul>"},{"location":"docs/remote-control/#statestore","title":"<code>/STATE/STORE</code>","text":"<p>Save the state of all widgets in the temporary slot.</p>"},{"location":"docs/remote-control/#staterecall","title":"<code>/STATE/RECALL</code>","text":"<p>Reload saved state from the temporary slot.</p>"},{"location":"docs/remote-control/#statesend","title":"<code>/STATE/SEND</code>","text":"<p>Make all widgets send their current value.</p>"},{"location":"docs/remote-control/#stateopen-pathstate","title":"<code>/STATE/OPEN path.state</code>","text":"<p>Open state file <code>path.state</code>.</p>"},{"location":"docs/remote-control/#statesave-pathstate","title":"<code>/STATE/SAVE path.state</code>","text":"<p>Save state session to <code>path.state</code>.</p>"},{"location":"docs/remote-control/#sessionopen-pathjson","title":"<code>/SESSION/OPEN path.json</code>","text":"<p>Open session file <code>path.json</code>.</p>"},{"location":"docs/remote-control/#sessionsave-pathjson","title":"<code>/SESSION/SAVE path.json</code>","text":"<p>Save current session to <code>path.json</code>. If <code>path.json</code> is omitted, current session's path is used.</p>"},{"location":"docs/remote-control/#tabs-tab_id1-tab_id2","title":"<code>/TABS tab_id1 tab_id2 ...</code>","text":"<p>Open the tabs designated by the id parameters.</p>"},{"location":"docs/remote-control/#script-code","title":"<code>/SCRIPT code</code>","text":"<p>Run code as if it where executed by a script widget.</p>"},{"location":"docs/remote-control/#reload","title":"<code>/RELOAD</code>","text":"<p>Reload page in the browser.</p>"},{"location":"docs/custom-module/custom-module/","title":"Custom module","text":"<p>Using the server's <code>custom-module</code> option, users can load a custom javascript module that filters incoming and outgoing OSC / MIDI messages.</p>"},{"location":"docs/custom-module/custom-module/#writing-a-custom-module","title":"Writing a custom module","text":"<pre><code>// Do whatever you want\n// initialize variables\n// declare functions\n// load modules\n// etc\n\nmodule.exports = {\n\ninit: function(){\n// this will be executed once when the osc server starts\n},\n\noscInFilter:function(data){\n// Filter incoming osc messages\n\nvar {address, args, host, port} = data\n\n// do what you want\n\n// address = string\n// args = array of {value, type} objects\n// host = string\n// port = integer\n\n// return data if you want the message to be processed\nreturn {address, args, host, port}\n\n},\n\noscOutFilter:function(data){\n// Filter outgoing osc messages\n\nvar {address, args, host, port, clientId} = data\n\n// same as oscInFilter\n\n// return data if you want the message to be and sent\nreturn {address, args, host, port}\n},\n\nunload: function(){\n// this will be executed when the custom module is reloaded\n},\n\n}\n</code></pre>"},{"location":"docs/custom-module/custom-module/#available-globals","title":"Available globals","text":"<p>The module is executed in a restricted context, only a few globals are available :</p>"},{"location":"docs/custom-module/custom-module/#app","title":"<code>app</code>","text":"<p><code>Event Emitter</code>, useful for monitoring the events sent by the different clients. Event names can be found in callbacks.js, callbacks are called with 2 arguments: <code>data</code> (object) and <code>client</code> (object: <code>{address, id}</code>)</p>"},{"location":"docs/custom-module/custom-module/#receivehost-port-address-args-options","title":"<code>receive(host, port, address, ...args, options)</code>","text":"<p>Send osc/midi message to connected clients. <code>host</code> and <code>port</code> can be specified to simulate a specific origin for the message.</p> <ul> <li><code>host</code> (optional): <code>string</code> ip address, valid hostname or <code>\"midi\"</code></li> <li><code>port</code> (optional): <code>integer</code> port number or <code>string</code> midi device name</li> <li><code>address</code>: osc address</li> <li><code>args</code>: value or <code>{type: \"OSC_TYPE_LETTER\", value: VALUE}</code> <code>object</code> (objects that don't match this format will simply be turned to a JSON string).</li> <li><code>options</code> (optional): set to <code>{clientId: id}</code> to define which client receives the message (where <code>id</code> is the client's id as retrieved from <code>app</code> events or <code>oscOutFilter</code>)</li> </ul>"},{"location":"docs/custom-module/custom-module/#sendhost-port-address-args","title":"<code>send(host, port, address, ...args)</code>","text":"<p>Send osc/midi to a target (see <code>receive()</code>).</p>"},{"location":"docs/custom-module/custom-module/#settingsreadname","title":"<code>settings.read(name)</code>","text":"<p>Returns specified server option. <code>name</code> must be the option's long name without the leading dashes (ie: <code>\"send\"</code>, not <code>\"s\"</code>)</p>"},{"location":"docs/custom-module/custom-module/#settingsappaddresses","title":"<code>settings.appAddresses()</code>","text":"<p>Returns the server's http addresses.</p>"},{"location":"docs/custom-module/custom-module/#loadjsonpath-errorcallback","title":"<code>loadJSON(path, errorCallback)</code>","text":"<p>Loads a json file (path is relative to the custom module location)</p> <ul> <li><code>path</code>: <code>string</code>, path to file (any extension allowed, but the content must be valid JSON)</li> <li><code>errorCallback</code> (optional): <code>function</code>, called with the error as argument if the file can't be loaded</li> </ul>"},{"location":"docs/custom-module/custom-module/#savejsonpath-data-errorcallback","title":"<code>saveJSON(path, data, errorCallback)</code>","text":"<p>Saves an object/array to a json file (path is relative to the custom module location)</p> <ul> <li><code>path</code>: <code>string</code>, path to file (any extension allowed)</li> <li><code>data</code>: <code>object</code>, <code>array</code> or any value that can be encoded to JSON</li> <li><code>errorCallback</code> (optional): <code>function</code>, called with the error as argument if the file can't be loaded</li> </ul>"},{"location":"docs/custom-module/custom-module/#requirepath","title":"<code>require(path)</code>","text":"<p>Load another javascript module. Returns the value of <code>module.exports</code> defined in this module. If <code>path</code> is a relative path, it will be resolved against its parent module's path. See Managing Big Modules.</p> <p>This function is different from node's native <code>require</code> function, it's merely a way to split a custom module into separate files.</p>"},{"location":"docs/custom-module/custom-module/#nativerequiremodulename","title":"<code>nativeRequire(moduleName)</code>","text":"<p>This function can be used to load native node modules or locally installed modules (e.g. with npm) if a <code>node_modules</code> folder is found in the custom module's location.</p> Installing node modules: resources <ul> <li>https://nodejs.dev/</li> <li>https://nodejs.dev/learn/an-introduction-to-the-npm-package-manager</li> <li>https://nodejs.dev/learn/the-package-json-guide</li> </ul>"},{"location":"docs/custom-module/custom-module/#other-javascript-globals","title":"Other javascript globals","text":"<ul> <li><code>console</code></li> <li><code>setTimeout</code></li> <li><code>clearTimeout</code></li> <li><code>setInterval</code></li> <li><code>clearInterval</code></li> <li><code>__dirname</code></li> <li><code>__filename</code></li> <li><code>process</code></li> <li><code>global</code></li> </ul>"},{"location":"docs/custom-module/custom-module/#autoreload","title":"Autoreload","text":"<p>Custom modules (including submodules loaded with <code>require()</code>) are reloaded automatically when they are modified. Upon reload, timers (<code>setTimeout</code> and <code>setInterval</code>) and event listeners (added to the \u00a0<code>app</code> object) are reset.</p> <p>The <code>global</code> object persists accross reloads.</p> Reloading native modules <p>When using modules loaded with <code>nativeRequire()</code>, you may need to tell the custom module how to unload some components to allow reloading using the <code>module.exports.unload</code> definition. For example, if a port is bound using the <code>http</code> module, you'll need to unbind it otherwise the custom module will fail to bind it again when reloading:</p> <pre><code>var http = nativeRequire('http'),\nserver = http.createServer((req, res)=&gt;{\nres.writeHead(200)\nres.end('Hello world')\n})\n\nserver.listen(5555, 'localhost')\n\n\nmodule.exports = {\n\nunload: function() {\n\nserver.close()\n// otherwise you'd get \"Error: listen EADDRINUSE: address already in use 127.0.0.1:5555\"\n\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/","title":"Examples","text":""},{"location":"docs/custom-module/examples/#basic-address-routing","title":"Basic address routing","text":"<pre><code>module.exports = {\n\noscInFilter:function(data){\n\nvar {address, args, host, port} = data\n\nif (address === '/some_address') {\naddress = '/fader_1'\n}\n\nreturn {address, args, host, port}\n\n},\n\noscOutFilter:function(data){\n\nvar {address, args, host, port, clientId} = data\n\nif (address === '/fader_1') {\naddress = '/some_address'\n}\n\nreturn {address, args, host, port}\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#value-conversion","title":"Value conversion","text":"<pre><code>module.exports = {\n\noscInFilter:function(data){\n\nvar {address, args, host, port} = data\n\nif (address === '/some_address') {\n\nargs[0].value = args[0].value * 10\n\n}\n\nreturn {address, args, host, port}\n\n},\n\noscOutFilter:function(data){\n\nvar {address, args, host, port, clientId} = data\n\nif (address === '/some_address') {\n\nargs[0].value = args[0].value / 10\n\n}\n\nreturn {address, args, host, port}\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#arguments-split-merge","title":"Arguments split / merge","text":"<pre><code>var xyValue = [0, 0]\n\nmodule.exports = {\n\noscInFilter:function(data){\n\nvar {address, args, host, port} = data\n\n// split\nif (address === '/some_xy_address') {\nvar arg1 = args[0].value,\narg2 = args[1].value\n\nreceive('/fader_1', arg1)\nreceive('/fader_2', arg2)\n\nreturn // bypass original message\n}\n\nreturn {address, args, host, port}\n\n},\n\noscOutFilter:function(data){\n\nvar {address, args, host, port, clientId} = data\n\n// merge\nif (address === '/fader_1') {\n\nxyValue[0] = args[0].value\nsend(host, port, '/some_xy_address', ...xyValue)\nreturn // bypass original message\n\n} else if (address === '/fader_2') {\n\nxyValue[1] = args[1].value\nsend(host, port, '/some_xy_address', ...xyValue)\nreturn // bypass original message\n\n}\n\nreturn {address, args, host, port}\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#reply","title":"Reply","text":"<pre><code>module.exports = {\n\noscInFilter:function(data){\n\nvar {address, args, host, port} = data\n\nif (address === '/knock_knock') {\n\nsend(host, port, '/who_is_there')\n\nreturn // bypass original message\n}\n\nreturn {address, args, host, port}\n\n},\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#simulate-user-input-on-a-single-client","title":"Simulate user input on a single client","text":"<pre><code>// keep track of connected clients\n\nvar clients = []\n\napp.on('open', (data, client)=&gt;{\nif (!clients.includes(client.id)) clients.push(client.id)\n})\n\napp.on('close', (data, client)=&gt;{\nif (clients.includes(client.id)) clients.splice(clients.indexOf(client.id))\n})\n\nmodule.exports = {\n\noscInFilter:function(data){\n\nvar {address, args, host, port} = data\n\nif (address === '/some_osc_address') {\n\n// simulate user input on the first client in the array\n\nreceive('/SET', 'widget_id', 1, {clientId: clients[0]})\n\nreturn // bypass original message\n}\n\nreturn {address, args, host, port}\n\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#auto-save-client-state","title":"Auto-save client state","text":"<pre><code>// store state in a variable\nvar state = {}\n\n// keep track of connected clients\nvar clients = []\n\napp.on('sessionOpened', (data, client)=&gt;{\n\n// client connected (and in a session)\nif (!clients.includes(client.id)) clients.push(client.id)\n\n// when a client opens a session, send the state\n// but only if it's the only connected client (otherwise, let the regular sync happen)\nif (clients.length === 1) {\nreceive('/STATE/SET', state, {clientId: clients[0]})\n}\n\n})\n\napp.on('close', (data, client)=&gt;{\n\n// client disconnected\nif (clients.includes(client.id)) clients.splice(clients.indexOf(client.id))\n\n})\n\n// request 1st client's state every 10 seconds\nsetInterval(()=&gt;{\n\nif (clients.length &gt; 0) {\nreceive('/STATE/GET', '127.0.0.1:8888', {clientId: clients[0]})\n}\n\n}, 10000)\n\n\nmodule.exports = {\n\noscOutFilter: function(data) {\n\nif (data.address === '/STATE/GET') {\n// update state variable when the client responds\nstate = data.args[0].value\n\n// bypass the osc message\nreturn\n}\n\nreturn data\n\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#midi-routing","title":"MIDI routing","text":"<pre><code>var routing = {\n// midi cc vs widget id\n60: 'fader_1',\n61: 'fader_2',\n// etc\n}\n\nmodule.exports = {\n\noscInFilter:function(data){\n// Filter incoming osc messages\n\nvar {address, args, host, port} = data\n\nif (host === 'midi') {\n\n// MIDI routing !\nif (address === '/control') {\n\n// assign args to variables\nvar [channel, ctrl, value] = args.map(arg=&gt;arg.value)\n\n// simple conditions\nif (ctrl === 80) receive('/SET', 'widget_id', value / 127)\n\n// simple routing table (midi cc vs widget id)\nif (routing[ctrl]) receive('/SET', routing[ctrl], value / 127)\n\n// note: /SET simulates a user interaction and makes the widget send its osc message\n// but it adds some delay (we wait for the UI to respond)\n// AND it may trigger multiple replies if more than one client are connected.\n// Alternatively, we could do this:\n// send('/osc_address', value / 127)\n// receive('/osc_address', value / 127)\n// Or, to send /SET to a single client:\n// receive('/SET', '/osc_address', value / 127, {clientId: ID})\n\n\n}\n\nreturn // bypass original message\n\n}\n\n\n// return data if you want the message to be processed\nreturn {address, args, host, port}\n\n}\n\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#read-file","title":"Read file","text":"<pre><code>var fs = nativeRequire('fs')\n\nmodule.exports = {\n\noscOutFilter:function(data){\n// Filter outgoing osc messages\n\nvar {address, args, host, port} = data\n\nif (address === '/file') {\n\nfs.readFile(args[0].value, 'utf8' , (err, data) =&gt; {\nif (err) {\nconsole.error(err)\nreturn\n}\nreceive('/html', data)\n})\n\nreturn // bypass original message\n\n}\n\n\n// return data if you want the message to be processed\nreturn {address, args, host, port}\n\n}\n\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#display-rtsp-stream","title":"Display RTSP Stream","text":"<pre><code>// requires ffmpeg installed on the system\n// and rtsp-ffmpeg installed in the custom module's folder (by running npm install rtsp-ffmpeg)\n// see https://github.com/agsh/rtsp-ffmpeg#ffmpeg for available options\n\nvar rtsp = nativeRequire('rtsp-ffmpeg')\n\nvar stream = new rtsp.FFMpeg({\ninput: 'rtsp://freja.hiof.no:1935/rtplive/_definst_/hessdalen03.stream',\n})\n\nstream.on('data', (data)=&gt;{\n\n// send frame to image widget with address set to \"/stream\"\nreceive('/stream', 'data:image/jpeg;base64,' + data.toString('base64'))\n\n})\n\nmodule.exports = {\n\nunload: ()=&gt;{\nstream.stop()\n}\n\n}\n</code></pre>"},{"location":"docs/custom-module/examples/#custom-module-merger","title":"Custom module merger","text":"<pre><code>var submodules = [\nrequire('./custom_modA.js'),\nrequire('./custom_modB.js'),\n// etc\n]\n\n\nmodule.exports = {\ninit: function(){\nfor (var m of submodules) {\nif (m.init) m.init()\n}\n},\nunload: function(){\nfor (var m of submodules) {\nif (m.unload) m.unload()\n}\n},\noscInFilter: function(data){\n\nfor (var m of submodules) {\nif (m.oscInFilter) data = m.oscInFilter(data)\nif (!data) return\n}\n\nreturn data\n\n},\noscOutFilter: function(data){\n\nfor (var m of submodules) {\nif (m.oscOutFilter) data = m.oscOutFilter(data)\nif (!data) return\n}\n\nreturn data\n}\n}\n</code></pre>"},{"location":"docs/custom-module/managing-big-modules/","title":"Managing big modules","text":"<p>Starting with <code>v1.6.0</code>, custom modules can load submodules with the <code>require()</code> function.</p> <p>1. define some variable in <code>number.js</code></p> <pre><code>module.exports = 42\n</code></pre> <p>2. retrieve it in your main module file (<code>main.js</code>):</p> <pre><code>var num = require('./number.js')\n\nmodule.exports = {\ninit: function(){\nconsole.log(num) // 42\n},\noscInFilter: function(data){\n// etc\n}\n}\n</code></pre>"},{"location":"docs/customization/css-tips/","title":"CSS Tips","text":""},{"location":"docs/customization/css-tips/#browser-inspector","title":"Browser inspector","text":"<p>Hit F12 to open the developers tools panel. The html/css inspector helps retrieving the class names needed to style specific parts of the widgets: hit Ctrl+Shift+C or click on the inspect icon () and click on a element in the interface to reveal its html code.</p>"},{"location":"docs/customization/css-tips/#inline-syntax","title":"Inline syntax","text":"<p>For simple use cases, the <code>css</code> property can be written as a HTML inline styles (without any CSS selector). CSS rules will apply to the widget element.</p> <pre><code>opacity: 0.5; /* make the widget transparent */\nfont-size: 120%; /* increase font-size */\n</code></pre>"},{"location":"docs/customization/css-tips/#selector-syntax","title":"Selector syntax","text":"<p>CSS selectors can be used to apply styles to specific elements:</p> <pre><code>:host {\n/* style for the widget element\n       &amp; { } also works (deprecated)\n    */\n}\n\nlabel {\n/* style for the label elements */\n}\n\n&gt; label {\n/* style for the direct child label element */\n}\n</code></pre> <p>Mixing Inline and Selector syntaxes doesn't work, once you use selectors, you have to use the <code>:host</code> selector to target the widget element.</p>"},{"location":"docs/customization/css-tips/#extra-css-classes-class","title":"Extra css classes: <code>class</code>","text":"<p>This non-standard css property can be used to add custom css classes to the widget element: <code>class: my-custom-class;</code> Multiple classes can be added (one per <code>class</code> statement). Custom classes are always added to the widget's root element, css selectors are ignored.</p> <p>Using class names that are already used in the app can be hazardous. In order to avoid that, custom class names should be prefixed with something uncommon and preferably cool, such as <code>xxx-myclass</code> or <code>crispy-seitan-myclass</code>.</p>"},{"location":"docs/customization/css-tips/#layering-z-index","title":"Layering: <code>z-index</code>","text":"<p>Z-Axis ordering can be set using the <code>z-index</code> rule. Widgets positioned at absolute coordinates (when <code>top</code> or <code>left</code> is different from <code>auto</code>) have <code>z-index:10;</code> by default.</p>"},{"location":"docs/customization/css-tips/#responsive-sizing","title":"Responsive sizing","text":"<p>In most cases, using <code>vertical</code>, <code>horizontal</code> or <code>grid</code> layouts as well as using percentages in <code>height</code> and <code>width</code> will do. CSS <code>calc()</code> function can help in some cases (set the corresponding property to <code>auto</code> to avoid conflicts):</p> <pre><code>:host {\n\nwidth: calc(100% - 100rem);\n\n}\n</code></pre> <p>Media queries can also be used:</p> <pre><code>@media screen and (min-width: 768px) {\n\n:host {\n\n/* style the widget if the screen is bigger than 768px */\n\n}\n\n}\n</code></pre>"},{"location":"docs/customization/css-tips/#size-units","title":"Size units","text":"<ul> <li>use <code>rem</code> instead of <code>px</code> (<code>px</code> values will not scale when zooming), except for media queries</li> <li>use <code>%</code> for font-size</li> </ul>"},{"location":"docs/customization/css-tips/#css-variables","title":"CSS variables","text":"<p>CSS variables declared in the  default theme can be overridden.</p> <p>Widgets also rely on CSS variables for the style properties (colors, padding, etc). These are documented in the widgets' <code>css</code> property description.</p>"},{"location":"docs/customization/css-tips/#loading-images","title":"Loading images","text":"<p>Image urls are resolved in this order: - in the session's directory - in theme's directory - in the server's <code>remote-root</code> directory if the option is set - as absolute paths</p>"},{"location":"docs/customization/themes/","title":"Themes","text":""},{"location":"docs/customization/themes/#built-in-themes","title":"Built-in themes","text":"<p>Themes can be loaded with the <code>--theme</code> option. Multiple themes can be combined. Built-in themes can be loaded using their name, custom theme files can be loaded using their path.</p> <p>Available themes (full color scheme):</p> <ul> <li><code>nord</code>: arctic color palette (https://www.nordtheme.com/)</li> <li><code>orange</code>: grey and orange theme</li> </ul>"},{"location":"docs/customization/themes/#creating-a-custom-theme","title":"Creating a custom theme","text":"<p>Creating a custom theme is as simple as writing a tiny css file that will override the default css variables defined in default.scss :</p> <pre><code>:root {\n--color-accent: red;\n}\n</code></pre> <p>This will change the default accent color to red. Variables can also be overridden for a specific subset of elements, for example :</p> <pre><code>.panel-container {\n--color-accent: blue;\n}\n</code></pre> <p>This will change the default accent color to blue for all elements in panel widgets.</p>"},{"location":"docs/customization/themes/#autoreload","title":"Autoreload","text":"<p>Theme files are reloaded automatically when they are modified.</p>"},{"location":"docs/customization/themes/#scss","title":"SCSS","text":"<p>If you want to use the SCSS syntax to write your theme, follow the Running from sources instructions, create a <code>.scss</code> file in <code>src/scss/themes/</code> and run <code>npm run watch-css</code>. The theme will be watched and compiled automatically to a css file located in <code>app/assets/themes/</code> (css files in this directory can be selected from the theme option by their name, without .css suffix).</p>"},{"location":"docs/getting-started/introduction/","title":"Introduction","text":"<p>Welcome to Open Stage Control documentation. Along these pages you'll learn how to setup OSC on your system and everything you need to start building your own control interface.</p>"},{"location":"docs/getting-started/introduction/#overview","title":"Overview","text":"<p>Open Stage Control consists of 3 modules: the server, the launcher and the client.</p> <p>The server is the core of the software, it is responsible for sending and receiving all osc/midi messages, and act as a web server that serves the clients web application. It is written in Javascript and runs with Electron, a cross-platform framework based on Chromium. By default, the server always opens a client window when it starts but it can be run in headless mode, without any window.</p> <p>The launcher provides a simple way to configure and start the server. It appears whenever the server is not launched from a terminal or without being configured.</p> <p>The client is the web application made available by the server when it starts. Any compatible browser that connects to the server by browsing to its address will create a new client instance and be able to open and modify sessions.</p>"},{"location":"docs/getting-started/introduction/#requirements","title":"Requirements","text":"<p>The server can run on all platforms supported by Electron. Systems that can run Node.js may also be able to run it in headless mode (see Running with Node).</p> <p>The client is compatible with the following browsers:</p> <ul> <li>Firefox: version <code>75</code> and higher</li> <li>Chromium / Chrome: version <code>60</code> and higher</li> </ul> <p>iOS devices must be of version <code>10.3</code> or higher.</p>"},{"location":"docs/getting-started/introduction/#installation","title":"Installation","text":"Linux 64bit <p>Ubuntu / Debian</p> <ul> <li>Download <code>open-stage-control-VERSION-amd64.deb</code></li> <li>Install it by running this as root in a terminal: <pre><code>dpkg -i path/to/open-stage-control-VERSION-ARCH.deb\n</code></pre></li> </ul> <p>Other linux distributions</p> <ul> <li>Download <code>open-stage-control-VERSION-linux-x64.zip</code></li> <li>Extract it in the location of your choice</li> <li>The file inside it named <code>open-stage-control</code> is the app's main executable</li> </ul> Mac 64bit <ul> <li>Download <code>open-stage-control-VERSION-osx.zip</code></li> <li>Extract it in the location of your choice</li> <li>Drag <code>open-stage-control.app</code> in your <code>Application</code> folder</li> </ul> Windows 64bit <ul> <li>Download <code>open-stage-control-VERSION-win32-x64.zip</code></li> <li>Extract it in the location of your choice</li> <li>The file inside it named <code>open-stage-control.exe</code> is the app's main executable</li> </ul> Other systems <ul> <li>Install Node.js</li> <li>Download <code>open-stage-control-VERSION-node.zip</code></li> <li>Extract it in the location of your choice</li> <li>In a terminal, run <code>node /path/to/open-stage-control-VERSION-node --help</code></li> </ul>"},{"location":"docs/getting-started/running-from-sources/","title":"Running from sources","text":"<p>Running the app from the sources slightly differs from using prebuilt binaries: we'll build and launch the app with npm (node package manager).</p>"},{"location":"docs/getting-started/running-from-sources/#requirements","title":"Requirements","text":"<ul> <li>Node.js (v16)</li> <li>git</li> </ul>"},{"location":"docs/getting-started/running-from-sources/#run-from-sources","title":"Run from sources","text":"<p>Download</p> <pre><code>git clone https://github.com/jean-emmanuel/open-stage-control\ncd open-stage-control/\n# uncomment next line if you want the latest release\n#\u00a0instead of the current development version\n# git checkout $(git describe --tags `git rev-list --tags --max-count=1`)\nnpm install\nnpm run build\n</code></pre> <p>Raspberry systems</p> <p>Run one of these instead of <code>npm install</code> (you can get the system's <code>arch</code> by running <code>uname -m</code> in a terminal) <pre><code>npm install --arch=arm64\nnpm install --arch=armv7l\n</code></pre></p> <p>Updating from sources</p> <pre><code>git pull\nnpm install\nnpm run build\n</code></pre> <p>Run</p> <pre><code>npm start [ -- options]\n</code></pre> <p>A double hyphen (<code>--</code>) is used here to tell npm that the options are to be passed to the app.</p> <p>MIDI support</p> <p>When running from sources, MIDI support won't be enabled unless the MIDI configuration procedure for \"other systems\" is followed.</p>"},{"location":"docs/getting-started/running-from-sources/#build-documentation","title":"Build documentation","text":"<p>In order to make the local documentation available through the server's <code>--docs</code> option and the launcher's <code>Documentation</code> menu action, an extra step is needed.</p> <pre><code># install docs website theme\npython3 -m pip install mkdocs-material\n# build docs website\nnpm run build-docs\n</code></pre>"},{"location":"docs/getting-started/running-from-sources/#package-from-sources","title":"Package from sources","text":"<p>Follow the \"Run from sources\" instructions, then:</p> <pre><code># TARGET_PLATFORM can be linux, win32 (windows) or darwin (os x)\nexport PLATFORM=TARGET_PLATFORM\n# TARGET_ARCH can be ia32, x64, armv7l or arm64\nexport ARCH=TARGET_ARCH\n\n\nnpm run package\n\n\n# The node-only package can be built with\nnpm run package-node\n</code></pre> <p>This will build the app in <code>dist/open-stage-control-PLATFORM-ARCH</code>.</p> <p>Building the app for windows from a linux system requires wine to be installed.</p>"},{"location":"docs/getting-started/running-from-sources/#debianubuntu-installer","title":"Debian/Ubuntu installer","text":"<pre><code>npm run deb64\n</code></pre>"},{"location":"docs/getting-started/running-with-node/","title":"Running with node","text":""},{"location":"docs/getting-started/running-with-node/#lite-headless-mode","title":"Lite headless mode","text":"<p>It's possible to run the server in headless mode with the nodejs engine embedded in Electron, this reduces memory / cpu usage significantly.</p> <pre><code>ELECTRON_RUN_AS_NODE=1 open-stage-control path/to/open-stage-control/resources/app/ [options]\n</code></pre>"},{"location":"docs/getting-started/running-with-node/#running-with-node","title":"Running with node","text":"<p>If Electron does not run on your platform, it is possible to run the server in headless mode using Node.js.</p> <ol> <li>Install Node.js</li> <li>Download <code>open-stage-control-[version]-node.zip</code> package and extract it</li> <li>Run <code>node /path/to/open-stage-control [options]</code></li> </ol> <p>Info</p> <p>When running from sources or with regular binaries (packaged with electron), the command slightly differs:</p> <ul> <li>electron package: <code>node /path/to/open-stage-control/resources/app [options]</code></li> <li>from sources: <code>node /path/to/open-stage-control/app [options]</code></li> </ul>"},{"location":"docs/getting-started/server-configuration/","title":"Server configuration","text":"<p>The server can be configured with many options, either from a terminal or with the help of the launcher.</p>"},{"location":"docs/getting-started/server-configuration/#options","title":"Options","text":""},{"location":"docs/getting-started/server-configuration/#send","title":"<code>send</code>","text":"<p>Defines the default osc/midi targets. These will be added to the widget's individual targets. Targets must be separated by a space and formatted as follows:</p> <ul> <li><code>ip_address:port</code></li> <li><code>host_name:port</code></li> <li><code>midi:device_name</code></li> </ul>"},{"location":"docs/getting-started/server-configuration/#load","title":"<code>load</code>","text":"<p>Path to a session file (.json). All clients connecting the server will load it.</p>"},{"location":"docs/getting-started/server-configuration/#state","title":"<code>state</code>","text":"<p>Path to a state file (.state). All clients connecting the server will load it.</p>"},{"location":"docs/getting-started/server-configuration/#custom-module","title":"<code>custom-module</code>","text":"<p>Path to a custom module file (.js).</p> <p>WARNING: custom module can access the file system, use at your own risk.</p>"},{"location":"docs/getting-started/server-configuration/#port","title":"<code>port</code>","text":"<p>HTTP port for the server (default: <code>8080</code>).</p>"},{"location":"docs/getting-started/server-configuration/#osc-port","title":"<code>osc-port</code>","text":"<p>OSC (UDP) input port (default: <code>port</code>).</p>"},{"location":"docs/getting-started/server-configuration/#tcp-port","title":"<code>tcp-port</code>","text":"<p>OSC (TCP) input port.</p>"},{"location":"docs/getting-started/server-configuration/#tcp-targets","title":"<code>tcp-targets</code>","text":"<p>TCP servers to connect to. When sending osc messages, if the target matches one of these, TCP protocol will be used instead of UDP.  Targets must be separated by a space and formatted as follows:</p> <ul> <li><code>ip_address:port</code></li> <li><code>host_name:port</code></li> </ul>"},{"location":"docs/getting-started/server-configuration/#midi","title":"<code>midi</code>","text":"<p>MIDI options separated by spaces, MIDI support must be enabled, see MIDI configuration.</p>"},{"location":"docs/getting-started/server-configuration/#debug","title":"<code>debug</code>","text":"<p>Print sent and received messages in the console. This may impact performance and should not be enabled in production.</p>"},{"location":"docs/getting-started/server-configuration/#no-gui","title":"<code>no-gui</code>","text":"<p>Disable built-in client window.</p>"},{"location":"docs/getting-started/server-configuration/#fullscreen","title":"<code>fullscreen</code>","text":"<p>Start the built-in client window in fullscreen.</p>"},{"location":"docs/getting-started/server-configuration/#theme","title":"<code>theme</code>","text":"<p>Theme names or paths. See Themes.</p>"},{"location":"docs/getting-started/server-configuration/#client-options","title":"<code>client-options</code>","text":"<p>Default client options, separated by spaces.</p>"},{"location":"docs/getting-started/server-configuration/#disable-vsync","title":"<code>disable-vsync</code>","text":"<p>Disable built-in client window's vertical synchronization.</p>"},{"location":"docs/getting-started/server-configuration/#force-gpu","title":"<code>force-gpu</code>","text":"<p>Disable built-in client window's gpu blacklist (may improve rendering performance in some cases).</p>"},{"location":"docs/getting-started/server-configuration/#read-only","title":"<code>read-only</code>","text":"<p>Disable session editing, and file saving.</p>"},{"location":"docs/getting-started/server-configuration/#remote-saving","title":"<code>remote-saving</code>","text":"<p>Disable file saving for hosts that don't match the regular expression.</p> <p>Sessions are saved and opened on the server's filesystem. It is possible to limit this feature to specific client with a regular expression. For example, <code>\"127.0.0.1|192.168.0.10\"</code> disables remote saving except for clients with ip addresses <code>127.0.0.1</code> (the server's local address) and <code>192.168.0.10</code>.</p>"},{"location":"docs/getting-started/server-configuration/#remote-root","title":"<code>remote-root</code>","text":"<p>Set file browsing root folder. Prevent writing files outside of this folder.</p>"},{"location":"docs/getting-started/server-configuration/#authentication","title":"<code>authentication</code>","text":"<p>Restrict access to <code>user:password</code> (remote clients will be prompted for these credentials).</p>"},{"location":"docs/getting-started/server-configuration/#instance-name","title":"<code>instance-name</code>","text":"<p>Server's name on zeroconf/bonjour network. Incremented automatically if not available.</p>"},{"location":"docs/getting-started/server-configuration/#use-ssl","title":"<code>use-ssl</code>","text":"<p>Use HTTPS protocol instead of HTTP (a self-signed certificate will be created)</p>"},{"location":"docs/getting-started/server-configuration/#command-line-options","title":"Command-line options","text":"<p>The following options can only be set from a terminal.</p>"},{"location":"docs/getting-started/server-configuration/#disable-gpu","title":"<code>disable-gpu</code>","text":"<p>Disable hardware acceleration for the launcher window and the built-in client window.</p>"},{"location":"docs/getting-started/server-configuration/#inspect","title":"<code>inspect</code>","text":"<p>Enable node inspector.</p>"},{"location":"docs/getting-started/server-configuration/#cache-dir","title":"<code>cache-dir</code>","text":"<p>Override default cache directory (contains browser cache and localStorage data).</p>"},{"location":"docs/getting-started/server-configuration/#config-file","title":"<code>config-file</code>","text":"<p>Override default config file location (contains session history and launcher config). Defaults to <code>cache-dir/config.json</code>.</p>"},{"location":"docs/getting-started/server-configuration/#client-position","title":"<code>client-position</code>","text":"<p>Define the built-in client window position, must be a pair of integers separated by a comma (<code>x,y</code>).</p>"},{"location":"docs/getting-started/server-configuration/#client-size","title":"<code>client-size</code>","text":"<p>Define the built-in client window size, must be a pair of integers separated by a comma (<code>width,height</code>).</p>"},{"location":"docs/getting-started/server-configuration/#no-qrcode","title":"<code>no-qrcode</code>","text":"<p>Disable qrcode when the server starts.</p>"},{"location":"docs/getting-started/server-configuration/#help","title":"<code>help</code>","text":"<p>Show help.</p>"},{"location":"docs/getting-started/server-configuration/#docs","title":"<code>docs</code>","text":"<p>Serve documentation website locally and open it with the system's default browser</p>"},{"location":"docs/getting-started/server-configuration/#version","title":"<code>version</code>","text":"<p>Show version number.</p>"},{"location":"docs/getting-started/server-configuration/#running-in-a-terminal","title":"Running in a terminal","text":"<p>Options name must be prepended with a double dash (<code>--</code>) in a terminal.</p> <p>Example</p> <pre><code>open-stage-control --no-gui --load path/to/your/session.json --theme path/to/your/theme.css\n</code></pre> <p>Launches the server in headless mode, and makes all clients load provided session and theme automatically.</p>"},{"location":"docs/getting-started/server-configuration/#running-in-a-terminal-on-windows","title":"Running in a terminal on Windows","text":"<p>Windows users launching the app from a terminal need to add a double dash (<code>--</code>) and a space before their options:</p> <pre><code>open-stage-control.exe -- --port 5555 [...]\n\n# when running from sources\nnpm start -- -- [options]\n</code></pre>"},{"location":"docs/midi/midi-configuration/","title":"MIDI configuration","text":""},{"location":"docs/midi/midi-configuration/#installation","title":"Installation","text":"Linux / Windows / OSXOther systems / Node <p>Open Stage Control comes bundled with built-in MIDI support if you're using the official package for Linux, OSX or Windows.</p> <p>Enabling MIDI support on other systems or when building Open Stage Control from sources requires additional softwares to be installed on the server's system:</p> <ul> <li>python 3</li> <li>python package python-rtmidi</li> </ul> Linux <ul> <li>Install <code>python3</code> and <code>python3-pip</code> from your distribution's package repository</li> <li>Install <code>python-rtmidi</code> from a terminal by executing this command <pre><code>python3 -m pip install python-rtmidi --upgrade\n</code></pre></li> </ul> Mac <ul> <li>Download and install Python 3 for Mac OS</li> <li>Open a terminal</li> <li>Install <code>pip</code> (package installer for python) by executing these commands <pre><code>curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\n</code></pre></li> <li>Install <code>python-rtmidi</code> by executing this command <pre><code>python -m pip install python-rtmidi --upgrade\n</code></pre></li> </ul> Windows <ul> <li>Download and install Python 3 for Windows</li> <li>make sure to check the option \"Add Python 3.x to PATH\"</li> <li>Open a terminal (Win+R)</li> <li>Install <code>pip</code> (package installer for python) by executing these commands <pre><code>curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\n</code></pre></li> <li>Install <code>python-rtmidi</code> by executing this command <pre><code>python -m pip install python-rtmidi --upgrade\n</code></pre></li> </ul>"},{"location":"docs/midi/midi-configuration/#configuration","title":"Configuration","text":"<p>The server's <code>midi</code> option accepts the following parameters, separated by spaces.</p> <p>If an option contains space characters, it must be quoted.</p> <p><code>list</code></p> <p>Print the available MIDI ports to the console when the server starts. This action is also available in the launcher's menu.</p> <p><code>device_name:input,output</code></p> <p>Create a virtual MIDI device that will translate OSC messages to MIDI messages</p> <ul> <li><code>device_name</code> is an arbitrary identifier that can be used as a target by widgets (see Widget setup). It doesn't have to match any device's real name.</li> <li><code>input</code> / <code>output</code> can be port numbers or strings (as reported by the <code>list</code> action). If a string is specified, the first port whose name contains the string will be used (comparison is case-insensitive).</li> </ul> <p><code>sysex</code></p> <p>Enable parsing of system exclusive messages (disabled by default).</p> <p><code>mtc</code></p> <p>Enable parsing of midi time code messages (disabled by default).</p> <p><code>rpn</code></p> <p>Enable sending and receiving RPN/NRPN controls on as single <code>/rpn</code> / <code>/nrpn</code> messages instead of 3 or 4 control changes that constitute them.</p> <p><code>active_sensing</code></p> <p>Enable parsing of midi active sensing messages (disabled by default). Active sensing messages will be received as sysex.</p> <p><code>pc_offset</code></p> <p>Send program changes with a <code>-1</code> offset to match some software/hardware implementations</p> <p><code>note_off_velocity</code></p> <p>Enable receiving noteOff messages with a velocity and on a different address than noteOn messages.</p> <p><code>device_name:virtual</code> (Linux / Mac only): creates a virtual midi device with one input port and one output port</p> <p><code>jack</code> (Linux only): use JACK MIDI instead of ALSA. <code>python-rtmidi</code> must be compiled with jack support for this to work.</p> <p><code>path=/path/to/python</code></p> <p>Only use this if you know what you are doing. This option should not be set when using the official Linux / Windows / OSX packages.</p> <p>Indicates where to find python binary in case open stage control doesn't (<code>Error: spawn python3 ENOENT</code>).</p>"},{"location":"docs/midi/midi-configuration/#widget-setup","title":"Widget setup","text":"<p>In order to send MIDI messages, a widget must have at least one <code>target</code> formatted as follows:</p> <p><code>midi:device_name</code> (where <code>device_name</code> is one of the declared midi devices)</p> <p>Its <code>address</code> and <code>preArgs</code> properties must be set according to Open Stage Control's midi messages specification.</p> <p>Warning</p> <p>Messages received from a MIDI port only affect widgets that send to this port.</p>"},{"location":"docs/midi/midi-configuration/#debug","title":"Debug","text":"<p>Enabling the server's <code>debug</code> options will print some extra information (sent/received midi messages, midi setup information, etc)</p>"},{"location":"docs/midi/midi-configuration/#example-configuration","title":"Example configuration","text":"<p>Setting the server's <code>midi</code> option as follows:</p> <pre><code>sysex synth:1,2 daw:3,3\n</code></pre> <ul> <li>enables sysex support (sysex messages will not be ignored)</li> <li>creates a midi device \"synth\" connected with input 1 and output 2</li> <li>creates a midi device \"daw\" connected with input 3 and output 3</li> </ul> <p>If a widget has its <code>target</code> set to <code>midi:synth</code>, it will receive MIDI from port 1 and send MIDI to port 2.</p>"},{"location":"docs/midi/midi-messages/","title":"MIDI messages","text":"<p>Define static argument values using the <code>preArgs</code> option in order to complete the respective MIDI message.</p>"},{"location":"docs/midi/midi-messages/#note-channel-note-velocity","title":"<code>/note channel note velocity</code>","text":"<p>NoteOn event or noteOff if velocity equals <code>0</code>. Incoming noteOff events will be received as <code>/note</code> with velocity 0 if <code>note_off_velocity</code> is not set during setup.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>note</code>: integer between 0 and 127</li> <li><code>velocity</code>: integer between 0 and 127</li> </ul> <p>Example</p> <p>A push button might be configured as follows in order to send a MIDI note whose velocity is defined by the button's on/off value:</p> <ul> <li><code>address</code>: <code>/note</code></li> <li><code>preArgs</code>: <code>[1, 60]</code> (for MIDI channel 1, and note 60 / C4)</li> <li><code>on</code>: <code>100</code> (for noteOn velocity of 100 on button push)</li> <li><code>off</code>: <code>0</code> (to send a noteOff on button release)</li> <li><code>target</code>: <code>midi:device_name</code> (where device_name is one of the declared midi devices defined during setup)</li> </ul>"},{"location":"docs/midi/midi-messages/#note_off-channel-note-velocity","title":"<code>/note_off channel note velocity</code>","text":"<p>NoteOff event with any velocity. Incoming noteOff events will be received as <code>/note_off</code> if <code>note_off_velocity</code> is set during setup.</p>"},{"location":"docs/midi/midi-messages/#control-channel-cc-value","title":"<code>/control channel cc value</code>","text":"<p>Control change event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>cc</code>: integer between 0 and 127</li> <li><code>value</code>: integer between 0 and 127</li> </ul> <p>Example</p> <p>A fader might be configured as follows in order to send a MIDI control message (a volume control in this example):</p> <ul> <li><code>address</code>: <code>/control</code></li> <li><code>pre-args</code>: <code>[1, 7]</code> (MIDI channel 1, control number 7 generally used as volume control)</li> <li><code>range</code>: <code>{\"min\": 0, \"max\": 127}</code> (MIDI values are encoded in this range)</li> <li><code>target</code>: <code>midi:device_name</code></li> </ul>"},{"location":"docs/midi/midi-messages/#program-channel-program","title":"<code>/program channel program</code>","text":"<p>Program change event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>program</code>: integer between 0 and 127*</li> </ul> <p>Info</p> <p>* Some devices / softwares display the <code>program</code> value between 1 and 128, thus interpreting <code>program change 0</code> as <code>program change 1</code> and so on. Add the <code>pc_offset</code> parameter to the server's <code>midi</code> option to make Open Stage Control behave this way.</p>"},{"location":"docs/midi/midi-messages/#pitch-channel-pitch","title":"<code>/pitch channel pitch</code>","text":"<p>PitchWheel event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>pitch</code>: integer between 0 and 16383</li> </ul>"},{"location":"docs/midi/midi-messages/#sysex-msg","title":"<code>/sysex msg</code>","text":"<p>System exclusive message.</p> <ul> <li><code>msg</code>: hexadecimal sysex data string of the form <code>f0 ... f7</code>.</li> </ul> <p>Instead of a single hexadecimal string, arguments can be separated and defined either as hexadecimal bytes or as integers. When received, system messages are always formatted as a single hexadecimal string.</p>"},{"location":"docs/midi/midi-messages/#mtc-timecode","title":"<code>/mtc timecode</code>","text":"<p>MIDI time code message.</p> <ul> <li><code>timecode</code>: <code>hh:mm:ss:ff</code> string.</li> </ul>"},{"location":"docs/midi/midi-messages/#channel_pressure-channel-pressure","title":"<code>/channel_pressure channel pressure</code>","text":"<p>Channel pressure event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>pressure</code>: integer between 0 and 127</li> </ul>"},{"location":"docs/midi/midi-messages/#key_pressure-channel-note-pressure","title":"<code>/key_pressure channel note pressure</code>","text":"<p>Polyphonic key pressure event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>note</code>: integer between 0 and 127</li> <li><code>pressure</code>: integer between 0 and 127</li> </ul>"},{"location":"docs/midi/midi-messages/#rpn-channel-rpn-value","title":"<code>/rpn channel rpn value</code>","text":"<p>Registered Parameter Number event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>rpn</code>: integer between 0 and 16383</li> <li><code>value</code>: integer between 0 and 16383</li> </ul>"},{"location":"docs/midi/midi-messages/#nrpn-channel-nrpn-value","title":"<code>/nrpn channel nrpn value</code>","text":"<p>Non-Registered Parameter Number event.</p> <ul> <li><code>channel</code>: integer between 1 and 16</li> <li><code>nrpn</code>: integer between 0 and 16383</li> <li><code>value</code>: integer between 0 and 16383</li> </ul>"},{"location":"docs/tutorials/first-steps/","title":"First Steps with Open Stage Control","text":"<p>Contributed by H. James Harkins, Feb. 2023</p> <p>Let's walk through the basic steps to build a simple interface in Open Stage Control, send information to another app, and deploy the interface to remote (even mobile) devices.</p> <p>Before beginning, you should already have installed Open Stage Control -- see the Introduction.</p> <p>Also: This document provides sample patches for SuperCollider, Pure Data and Max/MSP, to receive control data from the Open Stage Control interface. If you do not have any of these tools, I suggest to install Pure Data because it has the smallest footprint.</p>"},{"location":"docs/tutorials/first-steps/#the-launcher","title":"The Launcher","text":"<p>Use your system's application launcher, open the Open Stage Control app. Here, you can configure options for the interface server.</p> <p>For now, go to the first box (\"send\") and type in <code>127.0.0.1:57120</code>. This will tell the server to send Open Sound Control messages to the same machine where the server is running, on port 57120.</p> <p>NOTE: For your own applications, you can use any port that is not in use. For this example, I chose 57120 because it is SuperCollider's default UDP port (and I set the Pure Data and Max patches to use the same port, to simplify.)</p> <p>You don't need to set any other options at this time.</p>"},{"location":"docs/tutorials/first-steps/#addresses-and-ports","title":"Addresses and ports","text":"<p>Many users approaching Open Sound Control for the first time get confused about ports. You need to be aware of the FROM and TO addresses. The \"send\" field in the Launcher should reference the address TO which messages should be sent. In this demo, we are assuming that Open Stage Control and the target app are running on the same machine. So the TO address is localhost: <code>127.0.0.1</code>. The \"send\" box should use the port on which the target app is receiving messages. This is typically under control of the target app: 1/ SuperCollider opens 57120 by default; 2/ Pd's [netreceive] object, and Max's [udpreceive], both require the TO port as an argument. So the TO port is your choice, as long as they match.</p> <p>Open Stage Control sends messages FROM the IP address of the machine where Open Stage Control is running, and from port 8080 (or localhost = <code>127.0.0.1</code> if on the same machine). Thus, if the receiving app will filter incoming messages based on address, the filtering address should be the FROM address, port 8080. The target app can also update Open Stage Control's display by sending messages back to exactly this address. So you will see later, in the demo patches, that messages are sent to <code>127.0.0.1:8080</code> so that the user's interaction with the target app appears in Open Stage Control as well.</p>"},{"location":"docs/tutorials/first-steps/#starting-the-server","title":"Starting the server","text":"<p>Click the \"play\" button near the top left of the window. You should see status messages in the launcher window such as:</p> <pre><code>(INFO) Server started, app available at\n    http://127.0.0.1:8080\n    http://your.ip.ad.dress:8080\n</code></pre> <p>And a new, mostly empty, window will open. This new, larger window is the client.</p>"},{"location":"docs/tutorials/first-steps/#the-client","title":"The client","text":"<p>The client allows you to edit and perform your interface.</p> <p>The interface design is called a session. To create a new session, go to the \"three-dots\" menu at the top left, and choose Session &gt; New session.</p> <p>Two new panels are displayed: a project browser, and an object inspector (to set properties). The empty space in the middle is the editor, where you will build the interface.</p> <p>Let's start with a toggle button. Right-click in the empty editor panel in the middle, and navigate to Add widget &gt; Basics &gt; button. For this demo, we don't need to change anything else: the button defaults to toggle behavior, and the display text is not important for now (although you can change it in the inspector, if you want).</p> <p>And let's add one more control, to the right of this: Right-click, Add widget &gt; Sliders &gt; fader.</p> <p></p> <p>When a widget is selected, you can move it by dragging the top-left handle, and resize it by dragging the bottom-right handle. Let's use these handles to position the fader to the right of the button, and stretch it to be horizontal instead of vertical.</p> <p></p> <p>Notice, however, that the fader's value handle is still vertical. To fix this, look in the Inspector at the right, expand \"Fader style,\" and check the \"horizontal\" checkbox.</p> <p></p> <p></p> <p>By the way: I suggest to keep the widgets closer to the top left, so that they are still visible on a phone screen (later).</p> <p>When designing an interface for production, you would change other object properties as well. In particular, the Open Sound Control addresses <code>/button_1</code> and <code>/fader_1</code> are not very descriptive. You would probably want to assign different command paths, in the \"osc\" tab. As this is just an introduction, we won't do that now.</p>"},{"location":"docs/tutorials/first-steps/#receiving-the-data","title":"Receiving the data","text":"<p>At this time, the interface can already be used: three-dots menu &gt; Editor &gt; \"Enabled\" (click to disable the editor). (The controls will respond also when the editor is enabled, but you have to click an extra time to select the widget before changing its value.)</p> <p>To see the effect, launch one of the following apps and open the given patch. The Open Stage Control button should open and close the envelope, and the fader should control frequency. The patches also send control data from their own GUIs back to Open Stage Control, so all of the controls should be synced in both directions.</p> <p>NOTE: In Pure Data and Max, the default slider/fader range is 0-127, integers. Open Stage Control uses the range 0.0 - 1.0 by default. If you just create a slider and connect it, you won't see much action. In the example patches, the slider's properties have been modified to take a 0.0 - 1.0 floating-point range, matching the data from Open Stage Control.</p> <p>NOTE: Because all of the patches bind to the same UDP port, you can open only one at a time. You could, if you like, change the port number in one patch, and add that port by specifying multiple \"send\" targets in the Launcher, e.g. <code>127.0.0.1:57120 127.0.0.1:7374</code>.</p> <p>NOTE: These patches are provided as a courtesy to get you started more quickly. Maintaining, extending or developing them is outside the scope of the Open Stage Control community.</p> <p>Choose your app</p> Pure DataMax/MSPSuperCollider <p>Copy the code below, and save it into a text file <code>osc-first-steps.pd</code>. Then open it in Pure Data.</p> <pre><code>#N canvas 436 127 562 502 12;\n#X obj 86 51 loadbang;\n#X msg 86 76 \\; pd dsp 1;\n#X obj 253 51 netreceive -u -b 57120;\n#X obj 253 76 oscparse;\n#X obj 253 101 list trim;\n#X obj 253 126 route fader_1 button_1;\n#X msg 253 190 4 \\$1;\n#X obj 253 215 pow;\n#X obj 253 240 * 200;\n#X obj 253 265 lop~ 3;\n#X msg 328 265 \\$1 100;\n#X obj 328 304 line~;\n#X obj 279 356 *~;\n#X obj 279 381 *~ 0.1;\n#X obj 266 424 dac~;\n#X text 38 139 Open Stage Control \\; \"First Steps\" tutorial \\; hjh\n2023;\n#X obj 253 304 osc~ 200;\n#X obj 328 159 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000\n#000000 0 1;\n#X obj 256 159 hsl 60 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc\n#000000 #000000 0 1;\n#X obj 70 251 unpack f s;\n#X obj 70 325 oscformat;\n#X msg 137 283 set \\$1;\n#X obj 70 424 netsend -u -b;\n#X obj 93 356 loadbang;\n#X msg 93 381 connect 127.0.0.1 8080;\n#X obj 70 226 r sendback;\n#X msg 379 200 \\; sendback \\$1 button_1;\n#X msg 379 233 \\; sendback \\$1 fader_1;\n#X connect 0 0 1 0;\n#X connect 2 0 3 0;\n#X connect 3 0 4 0;\n#X connect 4 0 5 0;\n#X connect 5 0 18 0;\n#X connect 5 1 17 0;\n#X connect 6 0 7 0;\n#X connect 7 0 8 0;\n#X connect 8 0 9 0;\n#X connect 9 0 16 0;\n#X connect 10 0 11 0;\n#X connect 11 0 12 1;\n#X connect 12 0 13 0;\n#X connect 13 0 14 0;\n#X connect 13 0 14 1;\n#X connect 16 0 12 0;\n#X connect 17 0 10 0;\n#X connect 17 0 26 0;\n#X connect 18 0 6 0;\n#X connect 18 0 27 0;\n#X connect 19 0 20 0;\n#X connect 19 1 21 0;\n#X connect 20 0 22 0;\n#X connect 21 0 20 0;\n#X connect 23 0 24 0;\n#X connect 24 0 22 0;\n#X connect 25 0 19 0;\n</code></pre> <p>Copy the text below. In Max, choose File &gt; New from clipboard.</p> <pre><code>----------begin_max5_patcher----------\n949.3oc0XkraaCCD8rCP9GHDxo.GWRJpEWzaEnW6gdrInfVlwgoxjBRTYEMe\n6khTx0HgVlwP1MFAwBZnjl2algyBe9zSFELS9.qJ.7YvOAiF8rVxHirFIi5D\nLJXI8grbZk4ACVxppnKXAiaWTwdPYV3SWSmyJ+EBbFZ0h74lkjyt8BDdkzBp\nJ6FtXwuJYYJq1wwjIvw.LJt4RRh4F7DH3ptWRTujKxYJCJvqIUVq5Di5Dako\ndrfY+7AAfqLK8mSOo4p9x3AfwypUJoXiTNtWFSBaHIJB1bIM5iDiEr603+sD\ntddQESLGfvZGj9ODHElBc5s8f5gnTqEHdKbG4l6vcleYxkKYB0aI32KXBvOT\nZuM3qRgpTlCtL3a7xJkVJqn5x.fpVIK4zbvEfat8F.FhCW8cx4BVlrVX9XgN\nLK3DerKv0BLHoGNyRUNWuC1k6DG0GtsHEAM9wXCGvvsC6qykTkF3E0pdnC5e\nJtjtjozoXXB5rbSbNruv+t0p3OYjhlr6lFkbwhblSSCoOSCBkLIZksAS5988\n4R2Qa.uIP7pgeWxWt3BPVNO62.kDXABfVOmKcZe5MuOJzj3iDEYLSsUAfGtX\nd1SyoYu3D3vdi4mNIQiXhcKKIp622W5a3fmh97W.57xNSIOsO9jfab.gSmZH\nxfW+shuPPy2G0jN2oyCk5AYiwFZNs4liCx1TfwMeS7HKTaAWBb27t3sQ3wff\nYTwh8RuVmgzIQc2pQrGTGaqQEAOFZyJ6wr7M3lIauNbqWd3o5+ivZz14KNM7\nXNpNxcPMzCh21gX3wPL845p5vItnZpGL0NVHYvGRxzB5dwyR1vLgIdzHc693\nihQBKj26hl9LufceaX3GNm5l3ZoVULvpy4X03+tL.djn11rKJhrECPnaCP3l\n8yia+e+bD.Zdv32w.QIHryjWgdTjxFBfR1sQ+eOw31uroFyqOpKC7ZV3UVhJ\nYcYV2Wr6vq.qgw4rJEWPUboX8mx9Pa1l6s9Zl21C88JTIKaFeu+wJ7GBDefP\n7dDAwGVadpWpCNX5KwG8EMXpyqHpzAScdE8fiFT8g1p9HCl9B8gejCbBgjMr\naDcvxGfh2iPn4DL7HnB9w.Bn8TZQjeIplNXwdHuxTYfEZXTneY9SFNFR7lgC\njBQdovgK+AB5kBcWMssCJZQwcrxp1WwpKcSi2JMg1ois2yE16ssnETxti28J\n1SpNfVp6IToaHrtz.wfGha6VNXoTuQQTy61t1v1FUa5KUP0SaUPs7xz+5omn\nef+B9C+QQC\n-----------end_max5_patcher-----------\n</code></pre> <p>Copy/paste the code below into a new code document. Run the entire block to start. It will clean up when you close the GUI window.</p> <pre><code>// OSC response part\n(\nvar addr = NetAddr(\"127.0.0.1\", 8080);  // FROM address\nvar freqRange = ControlSpec(200.0, 800.0, \\exp);\nvar button, slider;\n\nOSCdef(\\button, { |msg|\n    defer { button.value = msg[1] };\n    if(x.notNil) { x.set(\\gate, msg[1]) };\n}, '/button_1', addr);\n\nOSCdef(\\slider, { |msg|\n    defer { slider.value = msg[1] };\n    if(x.notNil) { x.set(\\freq, freqRange.map(msg[1])) };\n}, '/fader_1', addr);\n\nw = Window(\"Open Stage Control\", Rect(800, 200, 400, 100)).front;\nw.layout = HLayout(\n    button = Button(),\n    slider = Slider().orientation_(\\horizontal)\n);\nw.alwaysOnTop = true;  // may not take effect in all window managers\n\nbutton.states = [[\"off\"], [\"playing\", Color.black, Color(0.7, 1, 0.7)]];\nbutton.action = { |view|\n    if(x.notNil) { x.set(\\gate, view.value) };\n    addr.sendMsg('/button_1', view.value);\n};\n\nslider.action = { |view|\n    if(x.notNil) { x.set(\\freq, freqRange.map(view.value)) };\n    addr.sendMsg('/fader_1', view.value);\n};\n\nw.onClose = {\n    if(x.notNil) { x.free };\n    OSCdef(\\button).free;\n    OSCdef(\\slider).free;\n};\n\n// audio part\n// if this fails (if you have an issue with audio devices),\n// you won't hear anything but the onscreen GUIs\n// will reflect changes from Open Stage Control\ns.waitForBoot {\n    x = { |freq = 200, amp = 0.1, gate = 0|\n        var eg = EnvGen.kr(Env.asr(0.1, 1, 0.1), gate);\n        (SinOsc.ar(Lag.kr(freq, 0.1)) * amp * eg).dup\n    }.play;\n};\n)\n</code></pre>"},{"location":"docs/tutorials/first-steps/#deploying-the-interface","title":"Deploying the interface","text":"<p>The whole point of Open Stage Control is to make the interface available on other devices, especially mobile devices.</p> <p>The interface will not be visible to other clients, however, until you save it to disk: three-dots menu &gt; Session &gt; Save, and give the file a name such as <code>open-stage-demo</code> (you don't need to type the <code>.json</code> extension).</p> <p>Now -- remember those status messages in the launcher window? On another device (computer, phone or tablet), go to the <code>http://192.168.xxx.yyy:8080</code> address. The device should be on the same (W)LAN. (If there is another remote address, it may or may not work, depending on your network.) Supported browsers are Firefox v. 75 and higher, or Chromium/Chrome v. 60 and higher.</p> <p>This should open an empty client window, similar to the one you saw before.</p> <p>From here, you can open the session that you just saved: three-dots menu in the webpage &gt; Session &gt; Open Recent (yes, this is synced from the server!). This should display the controls created in that session, and the controls should function the same as in the other client window.</p> <p>And that is... it! Basic usage is as simple as that.</p> <p>For convenience, if there is a session you know that you will use often, and you don't want to load it in the webpage by hand every time, you can choose the file under \"load\" in the initial Launcher window. This is also useful for public deployments with audience participation, where you don't want audience members to have to load manually.</p> <p>When not using Open Stage Control, you can also stop the server from the launcher window (stop button, top-left).</p>"},{"location":"docs/user-interface/client/","title":"Client","text":""},{"location":"docs/user-interface/client/#1-menu","title":"1. Menu","text":"<ul> <li>Session<ul> <li>New session: create a new empty session and enable the editor</li> <li>Open: browse session files on the server</li> <li>Open recent: open a recent session on the server</li> <li>Save / Save as: save session file on the server</li> <li>Fragment mode: when enabled, the session will be saved as a fragment file (only the root's first child will be saved)</li> <li>Save backup: save a copy of current session with a incremented suffix appended to the file name</li> <li>Import: import a session file from the client's filesystem</li> <li>Export: export a session file to the client's filesystem</li> </ul> </li> <li>State<ul> <li>Store: save all widgets' state to a persistent slot (stored in the client's cache)</li> <li>Recall: apply state storer in the persistent slot (updated widgets may send messages)</li> <li>Send All: make all widgets send their current value</li> <li>Open: browse state files on the server</li> <li>Save / Save as: save state file on the server</li> <li>Import: import a state file from the client's filesystem</li> <li>Export: export a state file to the client's filesystem</li> </ul> </li> <li>Editor<ul> <li>Enable: toggle editor's state</li> <li>Grid: toggle grid</li> <li>Project tree: toggle project tree's visibility</li> <li>Inspector: toggle inspector's visibility</li> <li>Relative units (%): when enabled, newly created widgets will have their position and size set in percents.</li> </ul> </li> <li>Console<ul> <li>Enable: toggle console's state</li> <li>Clear console: remove logged messages from the console</li> </ul> </li> <li>Virtual keyboard: (desktop only) toggle virtual keyboard (displayed only when a text input is in focus, except for code editors in the inspector)</li> <li>Fullscreen: toggle fullscreen</li> <li>Prevent sleep (mobile only): attempt to prevent device from going to sleep when idle</li> </ul>"},{"location":"docs/user-interface/client/#2-sidepanels","title":"2. Sidepanels","text":"<p>The sidepanels are only visible when the editor is active, they can be resized and/or hidden. Both are described in the editor section.</p>"},{"location":"docs/user-interface/client/#3-session","title":"3. Session","text":"<p>It is the main component, it contains all the widgets and takes all the available space when the sidepanels are closed.</p>"},{"location":"docs/user-interface/client/#4-notifications","title":"4. Notifications","text":"<p>Notifications appear in the lower right corner, they are usually used to convey server status information.</p>"},{"location":"docs/user-interface/client/#5-modals","title":"5. Modals","text":"<p>Modals are virtual popup windows that may contain various content: file browser, color picker, error, widgets...  </p>"},{"location":"docs/user-interface/client/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"LinuxWindowsMac Shortcut Description Ctrl+Mousewheel change global zoom (pixel scaling) Ctrl+0 reset global zoom Ctrl+E enable/disable editor Ctrl+K show/hide console Ctrl+L clear console Ctrl+S save session Ctrl+Shift+S save session as... Ctrl+O open a session file Ctrl+W close client Shortcut Description Ctrl+Mousewheel change global zoom (pixel scaling) Ctrl+0 reset global zoom Ctrl+E enable/disable editor Ctrl+K show/hide console Ctrl+L clear console Ctrl+S save session Ctrl+Shift+S save session as... Ctrl+O open a session file Alt+F4 close client Shortcut Description Cmd+Mousewheel change global zoom (pixel scaling) Cmd+0 reset zoom Cmd+E enable/disable editor Cmd+K show/hide console Cmd+L clear console Cmd+S save session Cmd+Shift+S save session as... Cmd+O open a session file Cmd+W close client"},{"location":"docs/user-interface/editor/","title":"Editor","text":""},{"location":"docs/user-interface/editor/#widget-selection","title":"Widget selection","text":"<p>Clicking on a widget, on a tab label or on an item in the project tree selects the widgets for editing:</p> <ul> <li>All its editable properties are shown in the inspector panel</li> <li>The corresponding item in the project tree is highlighted</li> <li>A selection outline is drawn around the widget</li> <li>Dragging / Resizing handles are added to the widget</li> </ul> <p></p> <p>To interact with a widget directly without selecting it, either use the middle mouse button or hold Shift+Win (Shift+Cmd on Mac).</p>"},{"location":"docs/user-interface/editor/#menu","title":"Menu","text":"<p>Right clicking on a widget displays a menu with the following actions</p> <ul> <li><code>Show in tree</code>: show widget in project tree (hidden when clicking in the project tree)</li> <li><code>Position</code>:<ul> <li><code>Send to back</code>: Send selected widget to back (first of siblings)</li> <li><code>Send farther</code>: Send selected widget farther</li> <li><code>Bring closer</code>: Bring selected widget closer</li> <li><code>Bring to front</code>: Bring selected widget to front (last of siblings)</li> </ul> </li> <li><code>Copy</code>: copy widget's data</li> <li><code>Cut</code>: copy widget's data and delete selected widget</li> <li><code>Paste</code>: paste copied widget in selected container<ul> <li><code>Paste</code>: paste the widget as is</li> <li><code>ID + 1</code> : increments the id of the copied widget (and all its children) before pasting</li> <li><code>Clone</code> : create a clone widget targetting the copied widget</li> </ul> </li> <li><code>Add widget</code>: create a new widget in selected container</li> <li><code>Add tab</code>: create a new tab in selected container</li> <li><code>Export</code>: export as fragment file</li> <li><code>Delete</code>: delete selected tab or widget</li> </ul>"},{"location":"docs/user-interface/editor/#inspector","title":"Inspector","text":"<p>Selected widget's properties are displayed and can be modified in the inspector. The properties reference lists the available properties for each widget type.</p> <ul> <li>Property fields are all multiline (press <code>shift + enter</code> for new line).</li> <li>Properties are written in JSON, with some flexibility brought by the JSON5 format. For example, double quotes around object keys are not mandatory.</li> <li>Clicking on a property name spawns a help modal window</li> <li>Properties are divided into multiple categories that can be toggled with a click. Alt+Click on a category closes the other categories before toggling selected category.</li> </ul> <p>Some properties (for example <code>onValue</code>) have a special code editor with syntax highlighting and many keyboard shortcuts (available by clicking on the \"Help\" button). In these properties, pressing <code>enter</code> will not submit pending changes but instead insert a new line at the cursor position (as you would expect in a regular editor). To submit pending changes, press Ctrl+Enter (or ++cmd+enter== on Mac) or click outside the editor.</p> <p>Widgets can be locked for edition by enabling their <code>lock</code> property. When locked, a widget can't be modified by the editor but it remains possible to delete it or to move it from a container to another in the project tree.</p>"},{"location":"docs/user-interface/editor/#project-tree","title":"Project tree","text":"<p>The project tree displays the whole widget structure of the session. Widgets can be reordered or moved to another container with drag-and-drop.</p> <p>The \"Filter\" input allows filtering displayed widgets by their <code>id</code>. It's also possible to only display a single type of widget by typing <code>type:fader</code> for example.</p> <p>Invisible widgets are displayed with a lower opacity and their name in italic. Locked widgets are displayed with a lock icon after their name.  </p>"},{"location":"docs/user-interface/editor/#widget-resizing-dragging","title":"Widget resizing / dragging","text":"<p>Selected widget can be resized using its south, south-east and east handles. It can be dragged with its north-west handle (holding Alt extends this handle to the widget's size to ease dragging). If the widget's position/size was written in percents, the editor will try to keep using percents.</p> <p>When the grid is enabled, widget resizing / dragging snaps to a 10 pixel wide grid.</p>"},{"location":"docs/user-interface/editor/#multi-widgets-editing","title":"Multi-widgets editing","text":"<p>Multiple widgets can be edited at once.</p> <ul> <li>The inspector will only display properties that are shared by all selected widgets</li> <li>Selection can only contain sibling widgets (same direct parent)</li> <li>Context-menu actions and properties changes apply to all selected widgets</li> <li>Resizing / Dragging will affect all selected widgets, relatively the selection's size and position</li> </ul>"},{"location":"docs/user-interface/editor/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"Linux / WindowsMac Shortcut Description Ctrl+G Toggle grid. Ctrl+T Toggle session tree. Ctrl+I Toggle inspector. Click Widget selection. Ctrl+Click Multi-widget selection. Widgets can be toggled from selection by clicking on them individually. Shift+Click+Drag Draw a selection rectangle and attempt to select widgets in it. If Ctrl is pressed too, current selection is kept and will be merged with the new one if possible. Ctrl+Z \u00a0Undo Ctrl+Y Ctrl+Shift+Z \u00a0Redo Del \u00a0Delete selected widgets Ctrl+C \u00a0Copy selected widgets Ctrl+X \u00a0Cut selected widgets Ctrl+V \u00a0Paste clipboard in selected widget Ctrl+Shift+V \u00a0Paste and increment id Ctrl+D Duplicate selected widget Ctrl+Shift+D Duplicate selected widget and increment id Alt+C+Drag \u00a0Paste selection to position Alt+C+Shift+Drag \u00a0Paste selection to dragged position and increment id Ctrl+Up Ctrl+Down Ctrl+Left Ctrl+Right \u00a0Move selected widgets (1 grid unit, hold Shift for 5 grid units) Alt+Up Alt+Down Alt+Left Alt+Right Resize selected widgets (1 grid unit, hold Shift for 5 grid units) Ctrl+A Select current widget's siblings and itself Ctrl+Shift+A Cancel current widget selection Up Select current widget's previous sibling Down Select current widget's next sibling Left Select current widget's parent Right Select current widget's first child T Show selected widget in the project tree Home Send selected widget to back Page Up Send selected widget farther Page Down Bring selected widget closer End Bring selected widget to front F2 Bring \"label\" property input into view if selected widget has one H Hide selection area and widget resize / drag handles while pressed Alt+Mousewheel change editor zoom Ctrl+0 reset zoom Shortcut Description Cmd+G Toggle grid. Cmd+T Toggle session tree. Cmd+I Toggle inspector. Click Widget selection. Cmd+Click Multi-widget selection. Widgets can be toggled from selection by clicking on them individually. Shift+Click+Drag Draw a selection rectangle and attempt to select widgets in it. If Cmd is pressed too, current selection is kept and will be merged with the new one if possible. Cmd+Z \u00a0Undo Cmd+Y Cmd+Shift+Z \u00a0Redo Backspace \u00a0Delete selected widgets Cmd+C \u00a0Copy selected widgets Cmd+X \u00a0Cut selected widgets Cmd+V \u00a0Paste clipboard in selected widget Cmd+Shift+V \u00a0Paste and increment id Cmd+D Duplicate selected widget Cmd+Shift+D Duplicate selected widget and increment id Alt+C+Drag \u00a0Paste selection to position Alt+C+Shift+Drag \u00a0Paste selection to dragged position and increment id Cmd+Up Cmd+Down Cmd+Left Cmd+Right \u00a0Move selected widgets (1 grid unit, hold Shift for 5 grid units) Alt+Up Alt+Down Alt+Left Alt+Right Resize selected widgets (1 grid unit, hold Shift for 5 grid units) Cmd+A Select current widget's siblings and itself Cmd+Shift+A Cancel current widget selection Up Select current widget's previous sibling Down Select current widget's next sibling Left Select current widget's parent Right Select current widget's first child T Show selected widget in the project tree Home Send selected widget to back Page Up Send selected widget farther Page Down Bring selected widget closer End Bring selected widget to front F2 Bring \"label\" property input into view if selected widget has one H Hide selection area and widget resize / drag handles while pressed Alt+Mousewheel change editor zoom Cmd+0 reset zoom"},{"location":"docs/user-interface/launcher/","title":"Launcher","text":""},{"location":"docs/user-interface/launcher/#1-menu","title":"1. Menu","text":"<ul> <li>Start: start the server (hidden when started)</li> <li>Stop: stop the server (hidden when stopped)</li> <li>New window: open a new client window (hidden when stopped)</li> <li>Load: load server configuration from file</li> <li>Save / Save as: save server configuration to file</li> <li>List MIDI devices: list available MIDI devices in the console</li> <li>Console:<ul> <li>Clear: clear console</li> <li>Autoscroll: enable/disable console autoscroll</li> <li>Check for update at startup: enable/disable this feature</li> </ul> </li> <li>Autostart: start the server automatically when launcher is started</li> <li>Always on top: pin the launcher window above other the windows</li> </ul> <p>The \"play/stop\" icon can be used to start and stop the server without opening the menu.</p>"},{"location":"docs/user-interface/launcher/#2-configuration-form","title":"2. Configuration form","text":"<p>Each server option is displayed here. When clicking on an option's label, a short help will be printed in the console. When an option is not correctly set, its label will turn to orange and an error message will be printed in the console.</p>"},{"location":"docs/user-interface/launcher/#3-console","title":"3. Console","text":"<p>The console displays various information, runtime errors and server debug messages.</p>"},{"location":"docs/user-interface/launcher/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"LinuxWindowsMac Shortcut Description F5 start server F6 stop server Ctrl+N open new client window Ctrl+O load settings Ctrl+S save settings Ctrl+Shift+S save settings as... Ctrl+M list midi devices Ctrl+L clear console Ctrl+W close window Shortcut Description F5 start server F6 stop server Ctrl+N open new client window Ctrl+O load settings Ctrl+S save settings Ctrl+Shift+S save settings as... Ctrl+M list midi devices Ctrl+L clear console Alt+F4 close window Shortcut Description F5 start server F6 stop server Cmd+N open new client window Cmd+O load settings Cmd+S save settings Cmd+Shift+S save settings as... Cmd+M list midi devices Cmd+L clear console Cmd+W close window Cmd+Q quit app"},{"location":"docs/widgets/advanced-syntaxes/","title":"Advanced syntaxes","text":"<p>Advanced syntaxes are special blocks of code that can be written in the widgets properties to customize the widgets and how they behave. These blocks end up replaced with the value they hold before the widgets evaluate the properties they're in.</p>"},{"location":"docs/widgets/advanced-syntaxes/#inheritance-idproperty","title":"Inheritance: <code>@{id.property}</code>","text":"<p>The inheritance syntax returns either a widget's value or one of its properties. When using this syntax, value or property changes will be applied automatically.</p> <ul> <li><code>id</code>: target widget's <code>id</code>. A widget can fetch its own properties or its direct parent's by using the keywords <code>this</code> or <code>parent</code> instead of <code>id</code>. When <code>this</code> or <code>parent</code> can be used, using the target widget's <code>id</code> instead won't work.</li> <li><code>property</code>: target widget's property name. If omitted (along with the dot), the widget's value will be returned (<code>@{widgetId}</code> is the same as <code>@{widgetId.value}</code>). <code>value</code> always resolves to the target widget's current value, not its <code>value</code> property.</li> </ul> <p>Unique identifier</p> <p>Each widget has a unique random identifier that can be retrieved with the property name <code>uuid</code> (e.g. <code>@{this.uuid}</code>, <code>@{parent.uuid}</code>).</p>"},{"location":"docs/widgets/advanced-syntaxes/#dynamic-properties","title":"Dynamic properties","text":"<p>Some properties, when changed, trigger a complete widget recreation that ends any ongoing user interaction. Also, updating these properties continuously (e.g. when linked to a slider's dynamic value) can be very cpu expensive.</p> <p>Some properties have much cheaper update routines and can be considered as <code>dynamic</code>, as in performance safe. These properties are marked in the documentation with a .</p>"},{"location":"docs/widgets/advanced-syntaxes/#circular-references-cases","title":"Circular references cases","text":"<ul> <li>container widgets can inherit their children's properties only to define <code>dynamic</code> properties</li> <li>widgets can inherit their own <code>value</code> property only to define <code>dynamic</code> properties</li> </ul>"},{"location":"docs/widgets/advanced-syntaxes/#object-properties","title":"Object properties","text":"<p>If the retrieved property is an object (<code>{}</code>), a subset can be retrieved directly by appending a dot and a key (array index or object key) : <code>@{parent.variables.key}</code></p>"},{"location":"docs/widgets/advanced-syntaxes/#nesting","title":"Nesting","text":"<p>The inheritance syntax supports 1-level nesting for defining the target widget's id dynamically : <code>@{fader_@{toggle_1}}</code></p>"},{"location":"docs/widgets/advanced-syntaxes/#osc-listeners-oscaddress-default-usepreargs","title":"OSC listeners: <code>OSC{address, default, usePreArgs}</code>","text":"<p>The OSC listener syntax returns the value received on specified address (or the <code>default</code> value if none has been received yet).</p> <ul> <li><code>address</code>: osc address to listen to; if the leading slash (<code>/</code>) is omitted, the address will be prefixed with the widget's <code>address</code> property</li> <li><code>default</code> (optional): default value returned before any message is received. Must be a primitive value, not an object or an array.</li> <li><code>usePreArgs</code> (optional): by default, osc listeners inherit the widget's <code>preArgs</code> (these must be matched for the osc messages to be processed). Set to <code>false</code> bypass them.</li> </ul> <p>Options can contain <code>@{}</code> blocks.</p> <p>Receiving MIDI</p> <p>Midi messages will be processed only if the receiver's widget includes the emitting MIDI device in its targets.  </p> Array/Object default value <pre><code>JS{\nreturn OSC{address} || {\n\"key a\": 1,\n\"key b\": 2\n}\n}\n</code></pre>"},{"location":"docs/widgets/advanced-syntaxes/#custom-variables-varvariablename-default","title":"Custom variables: <code>VAR{variableName, default}</code>","text":"<p>This syntax creates a custom variable in the widget that can be read and modified from any widget's script property (see scripting). Changes made to this variable using <code>setVar()</code> in scripts will be applied automatically where <code>VAR{}</code> is used.`</p>"},{"location":"docs/widgets/advanced-syntaxes/#file-imports-importfile_name","title":"File imports: <code>IMPORT{file_name}</code>","text":"<p>This allows loading the content of an external file in a property. If used in a <code>JS{}</code> of <code>#{}</code> block, it will be seen as a string variable containing the raw content of the file. Changes made to the file be applied automatically.</p> <p>File paths are resolved in this order:</p> <ul> <li>in the session's directory</li> <li>in theme's directory</li> <li>in the server's <code>remote-root</code> directory if the option is set</li> <li>as absolute paths</li> </ul> <p>Warning</p> <p>Fragments and session files already loaded with fragment widgets should not be imported using this syntax.</p>"},{"location":"docs/widgets/advanced-syntaxes/#javascript-js-code","title":"Javascript: <code>JS{ &lt;code&gt; }</code>","text":"<p>This syntax allows defining a property using Javascript. The code will be compiled as a function and executed in a restricted context.</p> <ul> <li>if no <code>return</code> statement is found, the formula will return an empty string</li> <li>javascript strict mode is always enabled</li> <li><code>setTimeout</code> and <code>setInterval</code> functions are not available</li> </ul> <p>A property cannot contain multiple <code>JS{}</code> blocks</p>"},{"location":"docs/widgets/advanced-syntaxes/#available-variables","title":"Available variables","text":"<ul> <li><code>console</code>: javascript console</li> <li><code>locals</code>: object for storing/reading arbitrary values. Changing its properties does not trigger any synchronisation even if the value is used somewhere else.</li> <li><code>globals</code>: same as <code>locals</code> but shared between all widgets, contains a few useful variables:<ul> <li><code>screen</code>: client screen informations (<code>{width, height, orientation}</code>)</li> <li><code>env</code>: client options (ie: url query options),</li> <li><code>ip</code>: client's ip address,</li> <li><code>url</code>: server url,</li> <li><code>platform</code>: operating system as seen by the client</li> <li><code>session</code>: session file path</li> <li><code>clipboard</code>: instance of navigator Clipboard</li> </ul> </li> </ul> <p>Parsing errors can be read in the console (Ctrl+K).</p> <p>Warning</p> <p>Modifying values in <code>locals</code> or <code>globals</code> does not trigger anything if they are used somewhere else.</p>"},{"location":"docs/widgets/advanced-syntaxes/#using-in-advanced-syntaxes","title":"Using in advanced syntaxes","text":"<p>In this context, <code>@{}</code>, <code>VAR{}</code> and <code>OSC{}</code> syntaxes are seen as variables. When they change, the whole block will be evaluated again.</p> <p>Do not mutate</p> <p>When these syntaxes return objects or arrays, mutating said objects will affect the underlying variables in memory and may lead to unexpected behavior.</p> <p>The <code>@{}</code> syntax, when used for anything else than the widget's value, will always return a copy of the property and is not affected by this.</p>"},{"location":"docs/widgets/advanced-syntaxes/#javascript-code","title":"Javascript: <code>#{ &lt;code&gt; }</code>","text":"<p>This is a shorthand for the <code>JS{}</code> syntax, the only difference being that <code>&lt;code&gt;</code> is automatically prepended with a <code>return</code> statement.</p> <p>A property can contain multiple <code>#{}</code> blocks.</p> <p>Compilation order</p> <p><code>#{}</code> blocks are compiled after <code>JS{}</code> blocks</p>"},{"location":"docs/widgets/canvas/","title":"Canvas widget","text":"<p>The canvas widget allows creating custom widgets with user-defined drawings and touch reactions.</p> <p>It has two special properties, <code>touch</code> and <code>draw</code>, that work like the <code>script</code> property : they are used to defined scripts that will be executed when specific events occurs.</p> <p>This widget requires a good understanding of the javascript Canvas API and of the javascript programming language in general.</p>"},{"location":"docs/widgets/canvas/#canvas-properties","title":"Canvas properties","text":""},{"location":"docs/widgets/canvas/#valuelength","title":"<code>valueLength</code>","text":"<p>This property must be set to the number of values held by the widget : 1 for a simple slider, 2 for an XY pad, etc. Attempts to set the widget's value with a different number of values will be ignored.</p> <pre><code>set(\"this\", 1) // works if valueLength == 1\nset(\"this\", [1, 2]) // works if valueLength == 2\n</code></pre>"},{"location":"docs/widgets/canvas/#autoclear","title":"<code>autoClear</code>","text":"<p>This is a convenience option that clears the canvas context and calls <code>beginPath</code> before each drawing. When this property is set to <code>false</code>, the canvas must be cleared manually.</p>"},{"location":"docs/widgets/canvas/#continuous","title":"<code>continuous</code>","text":"<p>If this property is enabled, the widget will be redrawn at a fixed rate even if not interacted with (see <code>onDraw</code>).</p>"},{"location":"docs/widgets/canvas/#ontouch","title":"<code>onTouch</code>","text":"<p>This script is executed when the widget is touched, when it is released, and during the movement of the pointer while the widget is touched.</p> <p>This script has access to the same variables and functions as the <code>script</code> property (except the event-specific ones), plus the following:</p> <ul> <li><code>value</code>: widget value</li> <li><code>width</code>: canvas width in pixels</li> <li><code>height</code>: canvas height in pixels</li> <li><code>event</code>: object containing the following:<ul> <li><code>type</code>: <code>\"start\"</code>, <code>\"move\"</code> or <code>\"stop\"</code></li> <li><code>target</code>: id of the widget under the pointer, <code>\"this\"</code> if it's the canvas widget itself, <code>null</code> if no widget is under the pointer</li> <li><code>targetName</code>: name attribute of the html element under the pointer</li> <li><code>targetTagName</code>: tag name of the html element under the pointer</li> <li><code>offsetX</code>, <code>offsetY</code>: touch coordinates in pixels, relative to the html element under the pointer</li> <li><code>movementX</code>, <code>movementY</code>: movement of the pointer in pixels since the last event</li> <li><code>pointerId</code>: unique identifier used to differentiate fingers in multitouch situation</li> <li><code>altKey</code>, <code>ctrlKey</code>, <code>shiftKey</code>: keyboard modifier states</li> <li><code>force</code>: amount of pressure applied to the touch surface between <code>0</code> and <code>1</code> (see Touch.force). Equals <code>0</code> if the API is not supported or if no pressure information is found.</li> <li><code>radiusX</code>, <code>radiusY</code>, <code>rotationAngle</code>: see Touch.rotationAngle</li> <li>(iOS only) <code>altitudeAngle</code>, <code>azimuthAngle</code>: see Touch.altitudeAngle</li> <li>(iOS only) <code>touchType</code>: \"direct\" or \"stylus\"</li> </ul> </li> </ul> <p>Extra html elements</p> <p>Elements added using the <code>html</code> property can be touched as well, <code>event.targetName</code> can be used to determine which element is touched.</p>"},{"location":"docs/widgets/canvas/#ondraw","title":"<code>onDraw</code>","text":"<p>This script is executed when the widget should be redrawn, which is when it's touched and when it receives a value.</p> <p>This script has access to the same variables and functions as the <code>script</code> property (except the event-specific ones), plus the following:</p> <ul> <li><code>value</code>: widget value</li> <li><code>width</code>: canvas width in pixels</li> <li><code>height</code>: canvas height in pixels</li> <li><code>ctx</code>: canvas rendering context of the widget</li> <li><code>cssVars</code>: object containing the computed value of some of the widget's style properties such as <code>colorWidget</code>, <code>alphaFill</code>, <code>padding</code>, etc</li> </ul>"},{"location":"docs/widgets/canvas/#onresize","title":"<code>onResize</code>","text":"<p>This script is executed when the widget has resized, before it is redrawn.</p> <p>This script has access to the same variables and functions as the <code>script</code> property (except the event-specific ones), plus the following:</p> <ul> <li><code>value</code>: widget value</li> <li><code>width</code>: canvas width in pixels</li> <li><code>height</code>: canvas height in pixels</li> <li><code>cssVars</code>: object containing the computed value of some of the widget's style properties such as <code>colorWidget</code>, <code>alphaFill</code>, <code>padding</code>, etc</li> </ul>"},{"location":"docs/widgets/canvas/#example-xy-pad","title":"Example: XY pad","text":"<p>Let's create a simple xy pad, with a value made of two numbers between 0 and 1. We set <code>valueLength</code> to <code>2</code> to make sure the widget only accepts incoming messages with two values (x and y).</p> <p>First, we use the <code>onTouch</code> property to store the touch coordinates in the <code>locals</code> object. We also call <code>set()</code> to store these in the widget's value (this way, the widget can send messages and sync with other widgets).</p> <pre><code>// onTouch\n\n// store normalized coordinates\nif (event.type == \"start\") {\nlocals.x = event.offsetX / width\nlocals.y = event.offsetY / height\n} else {\n// when the pointer is moving, increment coordinates\n// because offsetX and offsetY may not be relevant\n// if the pointer hovers a different widgets\nlocals.x += event.movementX / width\nlocals.y += event.movementY / height\n}\n\n// update widget value and send\nset(\"this\", [locals.x, locals.y])\n</code></pre> <p>Then, we use the <code>onDraw</code> property to draw a circle at the touch coordinates.</p> <pre><code>// onDraw\n\n// draw circle at touch coordinates\nctx.arc(value[0] * width, value[1] * height, 6, 0, Math.PI * 2)\n// use colorFill property as stroke color\nctx.strokeStyle = cssVars.colorFill\n// draw stroke\nctx.stroke()\n</code></pre> <p>Finally, we use the <code>onValue</code> property to apply limits to the values.</p> <pre><code>// onValue\n\n// apply limits\nvar x = Math.max(0, Math.min(1, value[0])),\ny = Math.max(0, Math.min(1, value[1]))\n\n// re-update widget value without retriggering script or sending message\nset(\"this\", [x, y], {sync: false, send: false})\n\n// the widget will automatically send its value if\n// this script was triggered by a user interaction\n// no need to call send() here but we could, for example\n// if we want to split the value in to multiple messages\n</code></pre>"},{"location":"docs/widgets/canvas/#example-multi-slider","title":"Example: multi slider","text":"<p>Let's build a row of 20-sliders with a single widget. We first set <code>valueLength</code> to... 20 !</p> <pre><code>// onTouch\n\n// store normalized coordinates\nif (event.type == \"start\") {\nlocals.x = event.offsetX / width\nlocals.y = event.offsetY / height\n} else {\n// when the pointer is moving, increment coordinates\n// because offsetX and offsetY may not be relevant\n// if the pointer hovers a different widgets\nlocals.x += event.movementX / width\nlocals.y += event.movementY / height\n}\n\n\n// which slider are we touching ?\nvar n = parseInt(locals.x * value.length)\nn = Math.max(0, Math.min(n, value.length-1))\n\n// update value at slider's index\n// 1 - locals.y because y axis is from top to bottom in js canvas\nvalue[n] = 1 - locals.y\n\n// update widget value and send\nset(\"this\", value)\n</code></pre> <pre><code>// onDraw\n\nctx.fillStyle = cssVars.colorFill\nctx.globalAlpha = cssVars.alphaFillOn\n\nvar sliderWidth = width / value.length - 1\nfor (var i in value){\nctx.beginPath()\nctx.rect(i * width / value.length, height, sliderWidth, - value[i] * height)\nctx.fill()\n}\n</code></pre> <pre><code>// onValue\n\n// apply limits\nfor (var i in value) {\nvalue[i] = Math.max(0, Math.min(1, value[i]))\n}\n\n// re-update widget value without retriggering script or sending message\nset(\"this\", value, {sync: false, send: false})\n</code></pre>"},{"location":"docs/widgets/fragments/","title":"Fragments","text":"<p>Fragments allow breaking sessions into multiple files and reusable components made of multiple widgets.</p>"},{"location":"docs/widgets/fragments/#fragment-files","title":"Fragment files","text":"<p>When right-clicking on a widget in the editor mode, it is possible to export it as a fragment file.</p> <p>Fragment files have the same extension as session files (<code>.json</code>) and can be opened like regular sessions. When doing so, keep in mind that only the first child of the root widget will be saved. It is possible to save a fragment file as a session file (and vice versa) by toggling the <code>Fragment mode</code> in the main menu.</p>"},{"location":"docs/widgets/fragments/#fragment-widgets","title":"Fragment widgets","text":"<p>Fragment widgets work like clone widget except their source widget are loaded from fragment files or session files. When the sources files are modified, the fragment widgets are updated automatically.</p>"},{"location":"docs/widgets/general-mechanics/","title":"General mechanics","text":""},{"location":"docs/widgets/general-mechanics/#interaction","title":"Interaction","text":"<p>These are interaction events widgets are likely to respond to:</p> Mouse Touch Description Mousedown Tap Handled at pressing time, not releasing. Click Click Handled at release time. Double Click Double Tap Some widgets handle double click / double tap events.\u00a0 Drag Drag \u00a0The widgets respond to mouse and touch drag gestures with a 1:1 precision ratio. <p>Widgets sensibility can be tuned with the <code>sensibility</code> property. Single-touch widgets (i.e. all widgets except <code>mutlixy</code> and <code>range</code>) also accept an alternate interaction event for fine control.</p> Mouse Touch Description <code>Ctrl</code> + Drag / Holding the <code>Ctrl</code> key while dragging with the mouse increases the gesture's precision by 10. / Two-fingers drag \u00a0Using two fingers on a single-touch target increases the gesture's precision by 10."},{"location":"docs/widgets/general-mechanics/#sending-messages","title":"Sending messages","text":"<p>When interacted with, widgets with at least one target (including the server's defaults) send osc messages of the following form:</p> <pre><code>/address ...preArgs ...value\n</code></pre> <p>If they have MIDI targets, the server will try to convert the osc messages into a MIDI messages (see MIDI messages).</p>"},{"location":"docs/widgets/general-mechanics/#receiving-messages","title":"Receiving messages","text":"<p>When an osc message is received, it updates every widgets that meets the following conditions</p> <ul> <li>same <code>address</code></li> <li>same <code>preArgs</code> (no distinction between integers and round floats )</li> </ul> <p>The remaining arguments after <code>preArgs</code> are passed to the widget.</p> <p>When a MIDI message is received, it's converted into an osc message (see MIDI messages) and follows the same rules, except that only the widgets that include the emitting MIDI device in their targets will be able to receive it.   </p>"},{"location":"docs/widgets/general-mechanics/#widget-synchronization","title":"Widget synchronization","text":"<p>Within a single client's scope, there are multiple ways to synchronize widgets:</p> <ul> <li>If they share the same <code>id</code>: in this case, the synchronized widget doesn't send any osc/midi message. This case is mostly used for widget cloning.</li> <li>If they share a <code>linkId</code>: in this case, the synchronized widget sends its osc/midi message normally.</li> <li>If their <code>value</code> properties depend on each other using the advanced syntaxes</li> <li>Using scripting</li> </ul>"},{"location":"docs/widgets/general-mechanics/#client-synchronization","title":"Client synchronization","text":"<p>From a client to another, widgets are automatically synchronized if they share the following properties:</p> <ul> <li><code>address</code></li> <li><code>preArgs</code></li> <li><code>targets</code></li> </ul> <p>Client synchronization can be disabled with the <code>clientSync</code> client option.</p>"},{"location":"docs/widgets/properties-reference/","title":"Properties reference","text":""},{"location":"docs/widgets/properties-reference/#common","title":"Common","text":"Generic properties# <p>Properties shared by all widgets</p> widgetgeometrystylevalueoscscripting property type default description <code>boolean</code> <code>false</code> Set to <code>true</code> to prevent modifying this widget with the editor. This will not prevent deleting the widget or moving it from a container to another. <code>string</code> <code>\"auto\"</code> Widget type <code>string</code> <code>\"auto\"</code> Widgets sharing the same <code>id</code> will act as clones and update each other's value(s) without sending extra osc messages (avoid doing so unless the widgets expect the exact same values). <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the widget. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable pointer interactions. <code>string</code> <code>\"\"</code> User comments. property type default description <code>number</code>|<code>string</code> <code>\"auto\"</code> When both top and left are set to auto, the widget is positioned according to the normal flow of the page (from left to right, by order of creation).Otherwise, the widget will be positioned at absolute coordinates <code>number</code>|<code>percentage</code> <code>\"auto\"</code> When both top and left are set to auto, the widget is positioned according to the normal flow of the page (from left to right, by order of creation).Otherwise, the widget will be positioned at absolute coordinates <code>number</code>|<code>percentage</code> <code>\"auto\"</code> Widget width <code>number</code>|<code>percentage</code> <code>\"auto\"</code> Widget height <code>boolean</code>|<code>number</code> <code>\"false\"</code> If parent's layout is <code>vertical</code> or <code>horizontal</code>, set this to <code>true</code> to stretch the widget to use available space automatically. property type default description <code>string</code> <code>\"auto\"</code> Text color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"auto\"</code> Widget's default accent color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"auto\"</code> Stroke color. Set to \"auto\" to use <code>colorWidget</code>. <code>string</code> <code>\"auto\"</code> Fill color. Set to \"auto\" to use <code>colorWidget</code>. <code>number</code> <code>\"auto\"</code> Stroke color opacity. <code>number</code> <code>\"auto\"</code> Fill color opacity (off). <code>number</code> <code>\"auto\"</code> Fill color opacity (on). <code>number</code> <code>\"auto\"</code> Stroke width. <code>number</code>|<code>string</code> <code>\"auto\"</code> Border radius expressed as a number or a css string. This property may not work for all widgets. <code>number</code> <code>\"auto\"</code> Inner spacing. <code>string</code> <code>\"\"</code> Custom html content to be inserted in the widget (before the widget's content). Elements are all unstyled by default, <code>css</code> should be used to customize their appearance.The code is automatically wrapped in &lt;div class=\"html\"&gt;&lt;/div&gt;Allowed HTML tags:\u00a0\u00a0h1-6, blockquote, p, a, ul, ol, nl, li,\u00a0\u00a0b, i, strong, em, strike, code, hr, br, div,\u00a0\u00a0table, thead, img, caption, tbody, tr, th, td, preAllowed attributes:\u00a0\u00a0&lt;*&gt;: class, style, title, name\u00a0\u00a0&lt;img&gt;: src, width, height <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code> property type default description <code>*</code> <code>\"\"</code> Define the widget's value depending on other widget's values / properties using the advanced property syntax <code>*</code> <code>\"\"</code> If set, the widget will be initialized with this value when the session is loaded. <code>string</code>|<code>array</code> <code>\"\"</code> Widgets sharing the same <code>linkId</code> update each other's value(s) AND send their respective osc messages.When prefixed with &gt;&gt;, the <code>linkId</code> will make the widget act as a master (sending but not receiving)When prefixed with &lt;&lt;, the <code>linkId</code> will make the widget act as a slave (receiving but not sending) property type default description <code>string</code> <code>\"auto\"</code> OSC address for sending / receiving messages, it must start with a slash (<code>/</code>)By default (\"auto\"), the widget's id is used: <code>/widget_id</code> <code>*</code>|<code>array</code> <code>\"\"</code> A value or array of values that will be prepended to the widget's value in the OSC messages it sends.Incoming messages must match these to affect by the widget. <code>string</code> <code>\"\"</code> Defines the osc argument types, one letter per argument (including preArgs)- If empty, the types are inferred automatically from the values (with numbers casted to floats by default)- If there are more arguments than type letters, the last type is used for the extra argumentsSee OSC 1.0 specification for existing typetags <code>integer</code> <code>2</code> Defines the number of decimals to send. <code>string</code>|<code>array</code>|<code>null</code> <code>\"\"</code> This defines the targets of the widget's OSC messages- A <code>string</code> or <code>array</code> of strings formatted as follow: <code>ip:port</code> or <code>[\"ip:portA\", \"ip:portB\"]</code>- If midi is enabled, targets can be <code>midi:device_name</code>- If no target is set, messages can still be sent if the server has default targets <code>boolean</code> <code>false</code> Set to <code>true</code> to ignore the server's default targets <code>boolean</code> <code>false</code> Set to <code>true</code> to prevent the widget from sending any osc message property type default description <code>script</code> <code>\"\"</code> Script executed when the widget is created. See documentation. <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation."},{"location":"docs/widgets/properties-reference/#lock","title":"lock","text":""},{"location":"docs/widgets/properties-reference/#type","title":"type","text":""},{"location":"docs/widgets/properties-reference/#id","title":"id","text":""},{"location":"docs/widgets/properties-reference/#visible","title":"visible","text":""},{"location":"docs/widgets/properties-reference/#interaction","title":"interaction","text":""},{"location":"docs/widgets/properties-reference/#comments","title":"comments","text":""},{"location":"docs/widgets/properties-reference/#left","title":"left","text":""},{"location":"docs/widgets/properties-reference/#top","title":"top","text":""},{"location":"docs/widgets/properties-reference/#width","title":"width","text":""},{"location":"docs/widgets/properties-reference/#height","title":"height","text":""},{"location":"docs/widgets/properties-reference/#expand","title":"expand","text":""},{"location":"docs/widgets/properties-reference/#colorText","title":"colorText","text":""},{"location":"docs/widgets/properties-reference/#colorWidget","title":"colorWidget","text":""},{"location":"docs/widgets/properties-reference/#colorStroke","title":"colorStroke","text":""},{"location":"docs/widgets/properties-reference/#colorFill","title":"colorFill","text":""},{"location":"docs/widgets/properties-reference/#alphaStroke","title":"alphaStroke","text":""},{"location":"docs/widgets/properties-reference/#alphaFillOff","title":"alphaFillOff","text":""},{"location":"docs/widgets/properties-reference/#alphaFillOn","title":"alphaFillOn","text":""},{"location":"docs/widgets/properties-reference/#lineWidth","title":"lineWidth","text":""},{"location":"docs/widgets/properties-reference/#borderRadius","title":"borderRadius","text":""},{"location":"docs/widgets/properties-reference/#padding","title":"padding","text":""},{"location":"docs/widgets/properties-reference/#html","title":"html","text":""},{"location":"docs/widgets/properties-reference/#css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#default","title":"default","text":""},{"location":"docs/widgets/properties-reference/#linkId","title":"linkId","text":""},{"location":"docs/widgets/properties-reference/#address","title":"address","text":""},{"location":"docs/widgets/properties-reference/#preArgs","title":"preArgs","text":""},{"location":"docs/widgets/properties-reference/#typeTags","title":"typeTags","text":""},{"location":"docs/widgets/properties-reference/#decimals","title":"decimals","text":""},{"location":"docs/widgets/properties-reference/#target","title":"target","text":""},{"location":"docs/widgets/properties-reference/#ignoreDefaults","title":"ignoreDefaults","text":""},{"location":"docs/widgets/properties-reference/#bypass","title":"bypass","text":""},{"location":"docs/widgets/properties-reference/#onCreate","title":"onCreate","text":""},{"location":"docs/widgets/properties-reference/#onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#basics","title":"Basics","text":"button# <p>On / off button.</p> stylebuttonscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--color-text-on</code>: <code>colorTextOn</code> <code>string</code> <code>\"auto\"</code> Defines the widget's text color when active. <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Set to <code>false</code> to hide completely- Insert icons using the prefix ^ followed by the icon's name : <code>^play</code>, <code>^pause</code>, etc (see https://fontawesome.com/search?m=free&amp;s=solid- Icons can be transformed with the following suffixes: <code>.flip-[horizontal|vertical|both]</code>, <code>.rotate-[90|180|270]</code>, <code>.spin</code>, <code>.pulse</code>. Example: <code>^play.flip-horizontal</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to display the text vertically <code>boolean</code>|<code>string</code> <code>false</code> Set to <code>true</code> to wrap long lines automatically. Set to <code>soft</code> to avoid breaking words.Choices: <code>false</code>, <code>true</code>, <code>soft</code> property type default description <code>*</code> <code>1</code> Set to <code>null</code> to send send no argument in the osc message. Ignored if <code>mode</code> is <code>momentary</code>. <code>*</code> <code>0</code> Set to <code>null</code> to send send no argument in the osc message. Must be different from <code>on</code>. Ignored if <code>mode</code> is <code>momentary</code> or <code>tap</code>. <code>string</code> <code>\"toggle\"</code> Interaction mode:- <code>toggle</code> (classic on/off switch)- <code>push</code> (press &amp; release)- <code>momentary</code> (no release, no value sent with the address)- <code>tap</code> (no release, sends <code>on</code> as value)Choices: <code>toggle</code>, <code>push</code>, <code>momentary</code>, <code>tap</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to make the button require a double tap to be pushed instead of a single tap <code>boolean</code> <code>false</code> Set to <code>true</code> make the local feedback update only when it receives a value from an osc/midi message that matches the <code>on</code> or <code>off</code> property.When <code>decoupled</code>, the button's value is ambiguous: when interacted with, it will send the value that's requested (<code>on</code> or <code>off</code> for <code>toggle</code> and <code>push</code> modes, <code>on</code> for <code>tap</code> mode, <code>null</code> for <code>momentary</code>), otherwise it will return the value received from the feedback message (<code>on</code> or <code>off</code> property).From a script property, feedback messages can be simulated with:<code>set(\"widget_id\", value, {external: true})</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Additional variables:- <code>locals.touchCoords</code>: <code>[x, y]</code> array representing the touch coordinates, normalized between 0 and 1.- <code>locals.external</code>: <code>true</code> if value was received from an osc/midi message, <code>false otherwise</code>. switch# <p>Value selector button.</p> styleswitch property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--color-text-on</code>: <code>colorTextOn</code> <code>string</code> <code>\"auto\"</code> Defines the widget's text color when active. <code>string</code> <code>\"vertical\"</code> Defines how items should be laid outChoices: <code>vertical</code>, <code>horizontal</code>, <code>grid</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code>|<code>string</code> <code>false</code> Set to <code>true</code> to wrap long lines automatically. Set to <code>soft</code> to avoid breaking words.Choices: <code>false</code>, <code>true</code>, <code>soft</code> property type default description <code>array</code>|<code>object</code> <code>{\u00a0\"Value 1\": 1,\u00a0\"Value 2\": 2}</code> <code>Array</code> of possible values to switch between : <code>[1,2,3]</code><code>Object</code> of <code>\"label\":value</code> pairs. Numeric labels must be prepended or appended with a white space (or any other non-numeric character) otherwise the order of the values won't be kept<code>{\"labels\": [], \"values\": []}</code> <code>object</code> where <code>labels</code> and <code>values</code> arrays must be of the same length. This syntax allows using the same label for different values. <code>string</code> <code>\"tap\"</code> Interaction mode:- <code>tap</code>: activates when the pointer is down but prevents further scrolling- <code>slide</code>: same as <code>tap</code> but allows sliding between values- <code>click</code>: activates upon click only and allows further scrolling- <code>flip</code>: selects the next value upon click regardless of where the widget is touchedChoices: <code>tap</code>, <code>slide</code>, <code>click</code>, <code>flip</code> dropdown# <p>Native dropdown menu.</p> styledropdown property type default description <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Displayed text (defaults to current value). Keywords <code>%key</code> and <code>%value</code> will be replaced by the widget's selected key/value. <code>boolean</code> <code>\"true\"</code> Set to <code>false</code>\u00a0to hide the dropdown icon <code>string</code> <code>\"center\"</code> Set to <code>left</code> or <code>right</code> to change text alignment (otherwise center)Choices: <code>center</code>, <code>left</code>, <code>right</code> property type default description <code>array</code>|<code>object</code> <code>{\u00a0\"Value 1\": 1,\u00a0\"Value 2\": 2}</code> <code>Array</code> of possible values to switch between : <code>[1,2,3]</code><code>Object</code> of label:value pairs. Numeric labels must be prepended or appended with a white space (or any other non-numeric character) otherwise the order of the values won't be kept<code>{\"labels\": [], \"values\": []}</code> <code>object</code> where <code>labels</code> and <code>values</code> arrays must be of the same length. This syntax allows using the same label for different values. menu# <p>Drag and drop menu with a circular or grid layout.</p> geometrystylemenu property type default description <code>number</code>|<code>array</code> <code>200</code> - If <code>layout</code> is <code>circular</code>: diameter (in px)- Else: square size or <code>[width, height]</code> array <code>boolean</code> <code>false</code> Set to <code>true</code> to allow the menu overflowing its tab ancestors. property type default description <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Displayed text (defaults to current value). Keywords <code>%key</code> and <code>%value</code> will be replaced by the widget's selected key/value. <code>boolean</code> <code>\"true\"</code> Set to <code>false</code>\u00a0to hide the dropdown icon <code>string</code> <code>\"center\"</code> Set to <code>left</code> or <code>right</code> to change text alignment (otherwise center)Choices: <code>center</code>, <code>left</code>, <code>right</code> <code>string</code> <code>\"center\"</code> Set to <code>top</code> or <code>bottom</code> to change menu alignment (otherwise center)Choices: <code>center</code>, <code>top</code>, <code>bottom</code> <code>string</code> <code>\"center\"</code> Set to <code>left</code> or <code>right</code> to change menu alignment (otherwise center)Choices: <code>center</code>, <code>left</code>, <code>right</code> <code>string</code> <code>\"circular\"</code> Defines whether the menu's layout should be rendered in a circle or in a boxChoices: <code>circular</code>, <code>horizontal</code>, <code>vertical</code>, <code>grid</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". property type default description <code>string</code> <code>\"default\"</code> Interaction modes:- <code>default</code>: opens on touch, closes and changes value on release- <code>toggle</code>: opens on click, closes and changes value on next click- <code>swipe</code>: opens on touch, changes value when the pointer moves above items, closes on release- <code>doubleTap</code>: same as <code>default</code> but opens on double tap- <code>doubleTap-toggle</code>: same as <code>toggle</code> but opens on double tapChoices: <code>default</code>, <code>toggle</code>, <code>swipe</code>, <code>doubleTap</code>, <code>doubleTap-toggle</code> <code>array</code>|<code>object</code> <code>[\u00a01,\u00a02,\u00a03]</code> <code>Array</code> of possible values to switch between : <code>[1,2,3]</code><code>Object</code> of label:value pairs. Numeric labels must be prepended or appended with a white space (or any other non-numeric character) otherwise the order of the values won't be kept<code>{\"labels\": [], \"values\": []}</code> <code>object</code> where <code>labels</code> and <code>values</code> arrays must be of the same length. This syntax allows using the same label for different values. <code>array</code> <code>\"\"</code> <code>Array</code> of <code>number</code> defining the weights of each value in <code>values</code>Ignored when <code>mode</code> is <code>grid</code> input# <p>Text input.</p> styleinputscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>string</code> <code>\"center\"</code> Set to <code>left</code> or <code>right</code> to change text alignment (otherwise center)Choices: <code>center</code>, <code>left</code>, <code>right</code> <code>string</code> <code>\"\"</code> Unit will be appended to the displayed widget's value (it doesn't affect osc messages) property type default description <code>boolean</code> <code>false</code> Set to <code>true</code> to make the input send its value at each keystroke <code>boolean</code> <code>false</code> Set to <code>true</code> to allow numeric values only and display a numeric keyboard on mobile devices <code>string</code> <code>\"\"</code> Regular expression: if the submitted value doesn't match the regular expression, it will be reset to the last valid value.If leading and trailing slashes are omitted, they will be added automatically and the flag will be set to \"gm\"Examples:- <code>^[0-9]*$</code> accepts digits only, any number of them- <code>/^[a-zs]{0,10}$/i</code> accept between 0 and 10 alphabetic characters and spaces (case insensitive) <code>number</code> <code>\"\"</code> Maximum number of characters allowed property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> textarea# <p>Text area (multi line input). Tip: hit shift + enter for new lines.</p> file# <p>File/Folder selector (server-side).</p> stylefile property type default description <code>string</code> <code>\"center\"</code> Set to <code>left</code> or <code>right</code> to change text alignment (otherwise center)Choices: <code>center</code>, <code>left</code>, <code>right</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to only display the filename (the whole path will still be used as value) <code>string</code> <code>\"open\"</code> File browser modeChoices: <code>open</code>, <code>save</code> property type default description <code>string</code> <code>\"auto\"</code> Default browsing directory <code>string</code> <code>\"*\"</code> Only display files with this extension <code>boolean</code> <code>false</code> Allow selecting a folder (by pressing \"open\" when no file is selected)"},{"location":"docs/widgets/properties-reference/#button_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#button_colorTextOn","title":"colorTextOn","text":""},{"location":"docs/widgets/properties-reference/#button_label","title":"label","text":""},{"location":"docs/widgets/properties-reference/#button_vertical","title":"vertical","text":""},{"location":"docs/widgets/properties-reference/#button_wrap","title":"wrap","text":""},{"location":"docs/widgets/properties-reference/#button_on","title":"on","text":""},{"location":"docs/widgets/properties-reference/#button_off","title":"off","text":""},{"location":"docs/widgets/properties-reference/#button_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#button_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#button_decoupled","title":"decoupled","text":""},{"location":"docs/widgets/properties-reference/#button_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#switch_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#switch_colorTextOn","title":"colorTextOn","text":""},{"location":"docs/widgets/properties-reference/#switch_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#switch_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#switch_wrap","title":"wrap","text":""},{"location":"docs/widgets/properties-reference/#switch_values","title":"values","text":""},{"location":"docs/widgets/properties-reference/#switch_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#dropdown_label","title":"label","text":""},{"location":"docs/widgets/properties-reference/#dropdown_icon","title":"icon","text":""},{"location":"docs/widgets/properties-reference/#dropdown_align","title":"align","text":""},{"location":"docs/widgets/properties-reference/#dropdown_values","title":"values","text":""},{"location":"docs/widgets/properties-reference/#menu_size","title":"size","text":""},{"location":"docs/widgets/properties-reference/#menu_ignoreTabs","title":"ignoreTabs","text":""},{"location":"docs/widgets/properties-reference/#menu_label","title":"label","text":""},{"location":"docs/widgets/properties-reference/#menu_icon","title":"icon","text":""},{"location":"docs/widgets/properties-reference/#menu_textAlign","title":"textAlign","text":""},{"location":"docs/widgets/properties-reference/#menu_menuAlignV","title":"menuAlignV","text":""},{"location":"docs/widgets/properties-reference/#menu_menuAlignH","title":"menuAlignH","text":""},{"location":"docs/widgets/properties-reference/#menu_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#menu_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#menu_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#menu_values","title":"values","text":""},{"location":"docs/widgets/properties-reference/#menu_weights","title":"weights","text":""},{"location":"docs/widgets/properties-reference/#input_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#input_align","title":"align","text":""},{"location":"docs/widgets/properties-reference/#input_unit","title":"unit","text":""},{"location":"docs/widgets/properties-reference/#input_asYouType","title":"asYouType","text":""},{"location":"docs/widgets/properties-reference/#input_numeric","title":"numeric","text":""},{"location":"docs/widgets/properties-reference/#input_validation","title":"validation","text":""},{"location":"docs/widgets/properties-reference/#input_maxLength","title":"maxLength","text":""},{"location":"docs/widgets/properties-reference/#input_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#file_align","title":"align","text":""},{"location":"docs/widgets/properties-reference/#file_hidePath","title":"hidePath","text":""},{"location":"docs/widgets/properties-reference/#file_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#file_directory","title":"directory","text":""},{"location":"docs/widgets/properties-reference/#file_extension","title":"extension","text":""},{"location":"docs/widgets/properties-reference/#file_allowDir","title":"allowDir","text":""},{"location":"docs/widgets/properties-reference/#containers","title":"Containers","text":"panel# <p>Widgets or Tabs container.</p> stylepanelvaluechildren property type default description <code>string</code> <code>\"auto\"</code> Panel background color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"default\"</code> Defines how children are laid out.Choices: <code>default</code>, <code>vertical</code>, <code>horizontal</code>, <code>grid</code> <code>string</code> <code>\"start\"</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, defines how widgets should be justified.Choices: <code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code> <code>true</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, prevents children from overflowing the panel. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable scrollbars <code>boolean</code> <code>true</code> Set to <code>false</code> to make the <code>padding</code> property apply only between children and not at the container's inner boundaries. <code>string</code> <code>\"top\"</code> Defines the position of the navigation bar if the panel contains tabsChoices: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets <code>boolean</code> <code>false</code> Set to <code>true</code> to enable traversing gestures in this widget. Set to <code>smart</code> to limit affected widgets by the type of the first touched widgetChoices: <code>false</code>, <code>true</code>, <code>smart</code> property type default description <code>integer</code>|<code>array</code> <code>\"\"</code> If the panel contains tabs, its value defines which tab is selected selected (by index, starting with 0).If the panel contains widgets and <code>scroll</code> is <code>true</code>, its value is an array that contains the scrolling state between 0 and 1 for the x and y axis. property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously modal# <p>A toggle button that opens a popup panel. Cannot contain tabs directly.</p> geometrystylemodalvaluechildren property type default description <code>number</code>|<code>percentage</code> <code>\"80%\"</code> Modal popup's size <code>number</code>|<code>percentage</code> <code>\"80%\"</code> Modal popup's size <code>number</code>|<code>percentage</code> <code>\"auto\"</code> Modal popup's position <code>number</code>|<code>percentage</code> <code>\"auto\"</code> Modal popup's position <code>boolean</code> <code>false</code> Set to <code>true</code> to make the modal's position relative to the button's position. <code>boolean</code> <code>false</code> Set to <code>true</code> to allow the modal overflowing its tab ancestors. property type default description <code>string</code> <code>\"auto\"</code> Panel background color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"default\"</code> Defines how children are laid out.Choices: <code>default</code>, <code>vertical</code>, <code>horizontal</code>, <code>grid</code> <code>string</code> <code>\"start\"</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, defines how widgets should be justified.Choices: <code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code> <code>true</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, prevents children from overflowing the panel. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable scrollbars <code>boolean</code> <code>true</code> Set to <code>false</code> to make the <code>padding</code> property apply only between children and not at the container's inner boundaries. <code>string</code> <code>\"top\"</code> Defines the position of the navigation bar if the panel contains tabsChoices: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Set to <code>false</code> to hide completely- Insert icons using the prefix ^ followed by the icon's name : <code>^play</code>, <code>^pause</code>, etc (see https://fontawesome.com/icons?d=gallery&amp;s=solid&amp;m=free)- Icons can be transformed with the following suffixes: <code>.flip-[horizontal|vertical|both]</code>, <code>.rotate-[90|180|270]</code>, <code>.spin</code>, <code>.pulse</code>. Example: <code>^play.flip-horizontal</code> <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Alternative label for the modal popup <code>number</code> <code>\"auto\"</code> Modal's inner spacing. property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets <code>boolean</code> <code>false</code> Set to <code>true</code> to enable traversing gestures in this widget. Set to <code>smart</code> to limit affected widgets by the type of the first touched widgetChoices: <code>false</code>, <code>true</code>, <code>smart</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to make the modal require a double tap to open instead of a single tap property type default description <code>integer</code> <code>\"\"</code> Defines the modal's state:<code>0</code> for closed, <code>1</code> for opened property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously clone# <p>Widget replication with overridable properties.</p> clone property type default description <code>string</code> <code>\"\"</code> <code>id</code> of the widget to clone <code>object</code> <code>{}</code> Cloned widget's properties to override fragment# <p>Embedded session or fragment file with overridable properties.</p> fragment property type default description <code>string</code> <code>\"\"</code> Fragment file path (relative to the session or theme file location by default, falling back to absolute path) <code>string</code> <code>\"\"</code> Fallack fragment file path, loaded if <code>file</code> can't be opened <code>object</code> <code>{}</code> Fragment widget's properties to override matrix# <p>Generic matrix for creating rows/columns of widgets.</p> stylematrixvaluechildren property type default description <code>string</code> <code>\"auto\"</code> Panel background color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"horizontal\"</code> Defines how children are laid out.Choices: <code>horizontal</code>, <code>vertical</code>, <code>grid</code> <code>string</code> <code>\"start\"</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, defines how widgets should be justified.Choices: <code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code> <code>true</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, prevents children from overflowing the panel. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable scrollbars <code>boolean</code> <code>true</code> Set to <code>false</code> to make the <code>padding</code> property apply only between children and not at the container's inner boundaries. <code>string</code> <code>\"top\"</code> Defines the position of the navigation bar if the panel contains tabsChoices: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets <code>boolean</code> <code>false</code> Set to <code>true</code> to enable traversing gestures in this widget. Set to <code>smart</code> to limit affected widgets by the type of the first touched widgetChoices: <code>false</code>, <code>true</code>, <code>smart</code> <code>string</code> <code>\"button\"</code> Defines the type of the widgets in the matrix <code>number</code> <code>4</code> Defines the number of widgets in the matrix <code>object</code> <code>{}</code> Defines a set of property to override the widgets' defaults.JS{} and #{} blocks in this field are resolved with an extra variable representing each widget's index: <code>$</code> (e.g. <code>#{$}</code>)Advanced syntax blocks (@{}, OSC{}, JS{}, VAR{} and #{}) are resolved at the matrix' scope (ie @{this.variables} returns the matrix' variables property)Advanced syntax blocks can be passed to children without being resolved at the matrix' scope by adding an underscore before the opening bracket.Note: unless overridden, children inherit from the matrix' <code>id</code> and osc properties (<code>id</code> and <code>address</code> are appended with <code>/$</code>) property type default description <code>integer</code>|<code>array</code> <code>\"\"</code> If the panel contains tabs, its value defines which tab is selected selected (by index, starting with 0).If the panel contains widgets and <code>scroll</code> is <code>true</code>, its value is an array that contains the scrolling state between 0 and 1 for the x and y axis. property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously keyboard# <p>Piano keyboard.</p> stylekeyboardvalue property type default description <code>string</code> <code>\"auto\"</code> White keys color. <code>string</code> <code>\"auto\"</code> Black keys color. property type default description <code>number</code> <code>25</code> Defines the number keys <code>number</code> <code>48</code> MIDI note number to start with (default is C4)Standard keyboards settings are: <code>[25, 48]</code>, <code>[49, 36]</code>, <code>[61, 36]</code>, <code>[88, 21]</code> <code>boolean</code> <code>true</code> Set to <code>false</code> to disable traversing gestures <code>*</code> <code>1</code> Set to <code>null</code> to send send no argument in the osc message <code>*</code> <code>0</code> Set to <code>null</code> to send send no argument in the osc message <code>boolean</code> <code>false</code> Set to <code>true</code> to map the touch coordinates between <code>off</code> (top) and <code>on</code> (bottom). Requires <code>on</code> and <code>off</code> to be numbers <code>string</code> <code>\"push\"</code> Interaction mode:- <code>push</code> (press &amp; release)- <code>toggle</code> (on/off switches)- <code>tap</code> (no release)Choices: <code>push</code>, <code>toggle</code>, <code>tap</code> property type default description <code>array</code> <code>\"\"</code> The keyboard widget accepts the following values:- a <code>[note, value]</code> array to set the value of a single key where <code>note</code> is the note number and <code>value</code> depends on the <code>on</code> and <code>off</code> properties (any value different from <code>off</code> will be interpreted as <code>on</code>).- an array of values with one item per key in the keyboard patchbay# <p>Connect inputs to outputs.</p> stylepatchbayscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> property type default description <code>array</code>|<code>object</code> <code>[\u00a0\"input_1\",\u00a0\"input_2\"]</code> - <code>Array</code> of input names : <code>['input_1', 'input_2']</code>- <code>Object</code> of <code>\"label_1\": \"input_1\"</code> pairs (example: <code>{\"label a\": \"value 1\", \"label b\": \"value 2\"}</code>). Numeric labels must be prepended or appended with a white space (or any other non-numeric character) otherwise the order of the values won't be keptPatchbay inputs can be connected to one or more outputs and will send messages of the following form when they are connected/disconnected: <code>/patchbay_address input_x output_x output_y etc</code>If no output is connected to the input, the message will be <code>/patchbay_address input_x</code>The inputs values can be consumed with the property inheritance syntax: <code>@{patchbay_id/input_1}</code> returns an array of output names connected to <code>input_1</code> <code>array</code>|<code>object</code> <code>[\u00a0\"output_1\",\u00a0\"output_2\"]</code> List of output values the inputs can connect to (see <code>inputs</code>). <code>string</code> <code>false</code> - <code>in</code>: allows only one connection per input- <code>out</code>: allows only one connection per output- <code>both</code>: allows only one connection per input and outputChoices: <code>false</code>, <code>in</code>, <code>out</code>, <code>both</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> folder# <p>Flat container that doesn't affect layout. Mostly useful for grouping widgets in the tree.</p> folderchildren property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously root# <p>Main (unique) container</p> stylerootvaluechildren property type default description <code>string</code> <code>\"auto\"</code> Panel background color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"default\"</code> Defines how children are laid out.Choices: <code>default</code>, <code>vertical</code>, <code>horizontal</code>, <code>grid</code> <code>string</code> <code>\"start\"</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, defines how widgets should be justified.Choices: <code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code> <code>true</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, prevents children from overflowing the panel. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable scrollbars <code>boolean</code> <code>true</code> Set to <code>false</code> to make the <code>padding</code> property apply only between children and not at the container's inner boundaries. <code>string</code> <code>\"top\"</code> Defines the position of the navigation bar if the panel contains tabsChoices: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to hide the main menu button. property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets <code>boolean</code> <code>false</code> Set to <code>true</code> to enable traversing gestures in this widget. Set to <code>smart</code> to limit affected widgets by the type of the first touched widgetChoices: <code>false</code>, <code>true</code>, <code>smart</code> property type default description <code>integer</code>|<code>array</code> <code>\"\"</code> If the panel contains tabs, its value defines which tab is selected selected (by index, starting with 0).If the panel contains widgets and <code>scroll</code> is <code>true</code>, its value is an array that contains the scrolling state between 0 and 1 for the x and y axis. property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously tab# <p>Tabbed panel widget</p> styletabvaluechildren property type default description <code>string</code> <code>\"auto\"</code> Panel background color. Set to \"auto\" to inherit from parent widget. <code>string</code> <code>\"default\"</code> Defines how children are laid out.Choices: <code>default</code>, <code>vertical</code>, <code>horizontal</code>, <code>grid</code> <code>string</code> <code>\"start\"</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, defines how widgets should be justified.Choices: <code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code> <code>string</code>|<code>number</code> <code>\"\"</code> If <code>layout</code> is <code>grid</code>, can be either a number of columns or a valid value for the css property \"grid-template\". <code>boolean</code> <code>true</code> If <code>layout</code> is <code>vertical</code> or <code>horizontal</code>, prevents children from overflowing the panel. <code>boolean</code> <code>true</code> Set to <code>false</code> to disable scrollbars <code>boolean</code> <code>true</code> Set to <code>false</code> to make the <code>padding</code> property apply only between children and not at the container's inner boundaries. <code>string</code> <code>\"top\"</code> Defines the position of the navigation bar if the panel contains tabsChoices: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> <code>string</code>|<code>boolean</code> <code>\"auto\"</code> Set to <code>false</code> to hide completely- Insert icons using the prefix ^ followed by the icon's name : <code>^play</code>, <code>^pause</code>, etc (see https://fontawesome.com/icons?d=gallery&amp;s=solid&amp;m=free)- Icons can be transformed with the following suffixes: <code>.flip-[horizontal|vertical|both]</code>, <code>.rotate-[90|180|270]</code>, <code>.spin</code>, <code>.pulse</code>. Example: <code>^play.flip-horizontal</code> property type default description <code>*</code> <code>\"@{parent.variables}\"</code> Defines one or more arbitrary variables that can be inherited by children widgets <code>boolean</code> <code>false</code> Set to <code>true</code> to enable traversing gestures in this widget. Set to <code>smart</code> to limit affected widgets by the type of the first touched widgetChoices: <code>false</code>, <code>true</code>, <code>smart</code> property type default description <code>integer</code>|<code>array</code> <code>\"\"</code> If the panel contains tabs, its value defines which tab is selected selected (by index, starting with 0).If the panel contains widgets and <code>scroll</code> is <code>true</code>, its value is an array that contains the scrolling state between 0 and 1 for the x and y axis. property type default description <code>array</code> <code>[]</code> Each element of the array must be a widget object. A panel cannot contain widgets and tabs simultaneously. <code>array</code> <code>[]</code> Each element of the array must be a tab object. A panel cannot contain widgets and tabs simultaneously"},{"location":"docs/widgets/properties-reference/#panel_colorBg","title":"colorBg","text":""},{"location":"docs/widgets/properties-reference/#panel_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#panel_justify","title":"justify","text":""},{"location":"docs/widgets/properties-reference/#panel_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#panel_contain","title":"contain","text":""},{"location":"docs/widgets/properties-reference/#panel_scroll","title":"scroll","text":""},{"location":"docs/widgets/properties-reference/#panel_innerPadding","title":"innerPadding","text":""},{"location":"docs/widgets/properties-reference/#panel_tabsPosition","title":"tabsPosition","text":""},{"location":"docs/widgets/properties-reference/#panel_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#panel_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#panel_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#panel_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#panel_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#modal_popupWidth","title":"popupWidth","text":""},{"location":"docs/widgets/properties-reference/#modal_popupHeight","title":"popupHeight","text":""},{"location":"docs/widgets/properties-reference/#modal_popupLeft","title":"popupLeft","text":""},{"location":"docs/widgets/properties-reference/#modal_popupTop","title":"popupTop","text":""},{"location":"docs/widgets/properties-reference/#modal_relative","title":"relative","text":""},{"location":"docs/widgets/properties-reference/#modal_ignoreTabs","title":"ignoreTabs","text":""},{"location":"docs/widgets/properties-reference/#modal_colorBg","title":"colorBg","text":""},{"location":"docs/widgets/properties-reference/#modal_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#modal_justify","title":"justify","text":""},{"location":"docs/widgets/properties-reference/#modal_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#modal_contain","title":"contain","text":""},{"location":"docs/widgets/properties-reference/#modal_scroll","title":"scroll","text":""},{"location":"docs/widgets/properties-reference/#modal_innerPadding","title":"innerPadding","text":""},{"location":"docs/widgets/properties-reference/#modal_tabsPosition","title":"tabsPosition","text":""},{"location":"docs/widgets/properties-reference/#modal_label","title":"label","text":""},{"location":"docs/widgets/properties-reference/#modal_popupLabel","title":"popupLabel","text":""},{"location":"docs/widgets/properties-reference/#modal_popupPadding","title":"popupPadding","text":""},{"location":"docs/widgets/properties-reference/#modal_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#modal_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#modal_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#modal_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#modal_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#modal_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#clone_widgetId","title":"widgetId","text":""},{"location":"docs/widgets/properties-reference/#clone_props","title":"props","text":""},{"location":"docs/widgets/properties-reference/#fragment_file","title":"file","text":""},{"location":"docs/widgets/properties-reference/#fragment_fallback","title":"fallback","text":""},{"location":"docs/widgets/properties-reference/#fragment_props","title":"props","text":""},{"location":"docs/widgets/properties-reference/#matrix_colorBg","title":"colorBg","text":""},{"location":"docs/widgets/properties-reference/#matrix_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#matrix_justify","title":"justify","text":""},{"location":"docs/widgets/properties-reference/#matrix_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#matrix_contain","title":"contain","text":""},{"location":"docs/widgets/properties-reference/#matrix_scroll","title":"scroll","text":""},{"location":"docs/widgets/properties-reference/#matrix_innerPadding","title":"innerPadding","text":""},{"location":"docs/widgets/properties-reference/#matrix_tabsPosition","title":"tabsPosition","text":""},{"location":"docs/widgets/properties-reference/#matrix_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#matrix_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#matrix_widgetType","title":"widgetType","text":""},{"location":"docs/widgets/properties-reference/#matrix_quantity","title":"quantity","text":""},{"location":"docs/widgets/properties-reference/#matrix_props","title":"props","text":""},{"location":"docs/widgets/properties-reference/#matrix_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#matrix_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#matrix_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#keyboard_colorWhite","title":"colorWhite","text":""},{"location":"docs/widgets/properties-reference/#keyboard_colorBlack","title":"colorBlack","text":""},{"location":"docs/widgets/properties-reference/#keyboard_keys","title":"keys","text":""},{"location":"docs/widgets/properties-reference/#keyboard_start","title":"start","text":""},{"location":"docs/widgets/properties-reference/#keyboard_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#keyboard_on","title":"on","text":""},{"location":"docs/widgets/properties-reference/#keyboard_off","title":"off","text":""},{"location":"docs/widgets/properties-reference/#keyboard_velocity","title":"velocity","text":""},{"location":"docs/widgets/properties-reference/#keyboard_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#keyboard_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#patchbay_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#patchbay_inputs","title":"inputs","text":""},{"location":"docs/widgets/properties-reference/#patchbay_outputs","title":"outputs","text":""},{"location":"docs/widgets/properties-reference/#patchbay_exclusive","title":"exclusive","text":""},{"location":"docs/widgets/properties-reference/#patchbay_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#folder_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#folder_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#folder_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#root_colorBg","title":"colorBg","text":""},{"location":"docs/widgets/properties-reference/#root_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#root_justify","title":"justify","text":""},{"location":"docs/widgets/properties-reference/#root_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#root_contain","title":"contain","text":""},{"location":"docs/widgets/properties-reference/#root_scroll","title":"scroll","text":""},{"location":"docs/widgets/properties-reference/#root_innerPadding","title":"innerPadding","text":""},{"location":"docs/widgets/properties-reference/#root_tabsPosition","title":"tabsPosition","text":""},{"location":"docs/widgets/properties-reference/#root_hideMenu","title":"hideMenu","text":""},{"location":"docs/widgets/properties-reference/#root_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#root_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#root_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#root_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#root_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#tab_colorBg","title":"colorBg","text":""},{"location":"docs/widgets/properties-reference/#tab_layout","title":"layout","text":""},{"location":"docs/widgets/properties-reference/#tab_justify","title":"justify","text":""},{"location":"docs/widgets/properties-reference/#tab_gridTemplate","title":"gridTemplate","text":""},{"location":"docs/widgets/properties-reference/#tab_contain","title":"contain","text":""},{"location":"docs/widgets/properties-reference/#tab_scroll","title":"scroll","text":""},{"location":"docs/widgets/properties-reference/#tab_innerPadding","title":"innerPadding","text":""},{"location":"docs/widgets/properties-reference/#tab_tabsPosition","title":"tabsPosition","text":""},{"location":"docs/widgets/properties-reference/#tab_label","title":"label","text":""},{"location":"docs/widgets/properties-reference/#tab_variables","title":"variables","text":""},{"location":"docs/widgets/properties-reference/#tab_traversing","title":"traversing","text":""},{"location":"docs/widgets/properties-reference/#tab_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#tab_widgets","title":"widgets","text":""},{"location":"docs/widgets/properties-reference/#tab_tabs","title":"tabs","text":""},{"location":"docs/widgets/properties-reference/#frames","title":"Frames","text":"frame# <p>Embed a web page in a frame.</p> value property type default description <code>string</code> <code>\"\"</code> External web page URL. svg# <p>Svg parser.</p> svg property type default description <code>string</code> <code>\"\"</code> Svg xml definition (will be wrapped in a <code>&lt; svg /&gt;</code> element) html# <p>Simple HTML parser.</p> image# <p>Load a image (url or base64-encoded).</p> styleimagevalue property type default description <code>string</code> <code>\"cover\"</code> CSS background-sizeChoices: <code>cover</code>, <code>contain</code>, <code>auto</code> <code>string</code> <code>\"center\"</code> CSS background-positionChoices: <code>center</code>, <code>left</code>, <code>right</code>, <code>top</code>, <code>bottom</code>, <code>left top</code>, <code>left bottom</code>, <code>right top</code>, <code>right bottom</code> <code>string</code> <code>\"no-repeat\"</code> CSS background-repeatChoices: <code>no-repeat</code>, <code>repeat</code>, <code>repeat-x</code>, <code>repeat-y</code>, <code>space</code>, <code>round</code> property type default description <code>boolean</code> <code>true</code> Set to false to disable image caching (forces file reload when updating or editing the widget).When true, sending <code>reload</code> to the widget reloads its image without changing its value property type default description <code>string</code> <code>\"\"</code> - File <code>url</code> or <code>path</code> (relative to the session or theme file location by default, falling back to absolute path)- Base64 encoded image : <code>data:image/...</code>- Enter \"qrcode\" to display the server's address QR code"},{"location":"docs/widgets/properties-reference/#frame_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#svg_svg","title":"svg","text":""},{"location":"docs/widgets/properties-reference/#image_size","title":"size","text":""},{"location":"docs/widgets/properties-reference/#image_position","title":"position","text":""},{"location":"docs/widgets/properties-reference/#image_repeat","title":"repeat","text":""},{"location":"docs/widgets/properties-reference/#image_cache","title":"cache","text":""},{"location":"docs/widgets/properties-reference/#image_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#graphs","title":"Graphs","text":"plot# <p>XY coordinates plot.</p> styleplotvaluescripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>boolean</code> <code>false</code> Draw dots on the line <code>boolean</code> <code>false</code> Set to <code>true</code> to use draw bars instead (disables <code>logScaleX</code> and forces <code>x axis</code> even spacing) <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the scale property type default description <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the x axis <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the y axis <code>number</code>|<code>boolean</code> <code>\"auto\"</code> Defines the y axis origin. Set to <code>false</code> to disable it property type default description <code>array</code>|<code>string</code> <code>\"\"</code> - <code>Array</code> of <code>y</code> values: <code>[y1, y2, ...]</code>- <code>Array</code> of <code>[x, y]</code> <code>array</code> values: <code>[[x1 , y1], [x2, y2], ...]</code>- <code>String</code> <code>array</code>: <code>\"[y1, y2, ...]\"</code> or <code>\"[[x1 , y1], [x2, y2], ...]\"</code>- <code>String</code> <code>object</code> to update specific coordinates only: <code>\"{0: y1, 1: y2}\"</code> or <code>\"{0: [x1, y1], 1: [x2, y2]}\"</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> eq# <p>Draws logarithmic frequency response from an array of filter objects.</p> styleeqvaluescripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>boolean</code> <code>false</code> Draw dots on the line <code>boolean</code> <code>false</code> Set to <code>true</code> to use draw bars instead (disables <code>logScaleX</code> and forces <code>x axis</code> even spacing) <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the scale property type default description <code>object</code> <code>{\u00a0\"min\": 20,\u00a0\"max\": 22000}</code> Defines the min and max values for the x axis (in Hz, logarithmic scale) <code>object</code> <code>{\u00a0\"min\": -6,\u00a0\"max\": 6}</code> Defines the min and max values for the y axis (in dB) <code>number</code>|<code>boolean</code> <code>\"auto\"</code> Defines the y axis origin. Set to <code>false</code> to disable it <code>array</code> <code>\"\"</code> Each item must be an object with the following properties- <code>type</code>: string (\"highpass\", \"highshelf\", \"lowpass\", \"lowshelf\", \"peak\", \"bandpass\" or \"notch\", default: \"peak\")- <code>freq</code>: number (filter's resonant frequency, default: 1000)- <code>q</code>: number (Q factor, default: 1)- <code>gain</code>: number (default: 0)- <code>on</code>: boolean (default: true)See https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode <code>boolean</code> <code>true</code> Set to false to hide the scale property type default description <code>array</code>|<code>string</code> <code>\"\"</code> - <code>Array</code> of <code>y</code> values: <code>[y1, y2, ...]</code>- <code>Array</code> of <code>[x, y]</code> <code>array</code> values: <code>[[x1 , y1], [x2, y2], ...]</code>- <code>String</code> <code>array</code>: <code>\"[y1, y2, ...]\"</code> or <code>\"[[x1 , y1], [x2, y2], ...]\"</code>- <code>String</code> <code>object</code> to update specific coordinates only: <code>\"{0: y1, 1: y2}\"</code> or <code>\"{0: [x1, y1], 1: [x2, y2]}\"</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> visualizer# <p>Display its value over time.</p> stylevisualizervaluescripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the scale property type default description <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the x axis <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the y axis <code>number</code> <code>\"auto\"</code> Defines the y axis origin. Set to <code>false</code> to disable it <code>number</code> <code>1</code> Defines visualization duration in seconds <code>number</code> <code>30</code> Defines visualization framerate <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale for the y axis (base 10). Set to a <code>number</code> to define the logarithm's base. <code>boolean</code> <code>false</code> Set to <code>true</code> to freeze current view and ignore incoming values property type default description <code>array</code>|<code>string</code> <code>\"\"</code> - <code>Array</code> of <code>y</code> values: <code>[y1, y2, ...]</code>- <code>Array</code> of <code>[x, y]</code> <code>array</code> values: <code>[[x1 , y1], [x2, y2], ...]</code>- <code>String</code> <code>array</code>: <code>\"[y1, y2, ...]\"</code> or <code>\"[[x1 , y1], [x2, y2], ...]\"</code>- <code>String</code> <code>object</code> to update specific coordinates only: <code>\"{0: y1, 1: y2}\"</code> or <code>\"{0: [x1, y1], 1: [x2, y2]}\"</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code>"},{"location":"docs/widgets/properties-reference/#plot_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#plot_dots","title":"dots","text":""},{"location":"docs/widgets/properties-reference/#plot_bars","title":"bars","text":""},{"location":"docs/widgets/properties-reference/#plot_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#plot_rangeX","title":"rangeX","text":""},{"location":"docs/widgets/properties-reference/#plot_rangeY","title":"rangeY","text":""},{"location":"docs/widgets/properties-reference/#plot_origin","title":"origin","text":""},{"location":"docs/widgets/properties-reference/#plot_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#plot_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#eq_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#eq_dots","title":"dots","text":""},{"location":"docs/widgets/properties-reference/#eq_bars","title":"bars","text":""},{"location":"docs/widgets/properties-reference/#eq_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#eq_rangeX","title":"rangeX","text":""},{"location":"docs/widgets/properties-reference/#eq_rangeY","title":"rangeY","text":""},{"location":"docs/widgets/properties-reference/#eq_origin","title":"origin","text":""},{"location":"docs/widgets/properties-reference/#eq_filters","title":"filters","text":""},{"location":"docs/widgets/properties-reference/#eq_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#eq_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#eq_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#visualizer_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#visualizer_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#visualizer_rangeX","title":"rangeX","text":""},{"location":"docs/widgets/properties-reference/#visualizer_rangeY","title":"rangeY","text":""},{"location":"docs/widgets/properties-reference/#visualizer_origin","title":"origin","text":""},{"location":"docs/widgets/properties-reference/#visualizer_duration","title":"duration","text":""},{"location":"docs/widgets/properties-reference/#visualizer_framerate","title":"framerate","text":""},{"location":"docs/widgets/properties-reference/#visualizer_logScaleY","title":"logScaleY","text":""},{"location":"docs/widgets/properties-reference/#visualizer_freeze","title":"freeze","text":""},{"location":"docs/widgets/properties-reference/#visualizer_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#visualizer_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#indicators","title":"Indicators","text":"led# <p>Intensity display.</p> ledvalue property type default description <code>string</code> <code>\"intensity\"</code> Defines how value is interpreted (see <code>value</code>)Choices: <code>intensity</code>, <code>color</code> <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Value range <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Alpha range (if <code>mode</code> is <code>color</code>) <code>boolean</code> <code>false</code> If <code>mode</code> is <code>intensity</code>, set to <code>true</code> to use logarithmic scale. property type default description <code>number</code>|<code>array</code>|<code>string</code> <code>\"\"</code> If <code>mode</code> is <code>intensity</code>:- <code>Number</code>: <code>intensity</code> between <code>range.min</code> and <code>range.max</code>If <code>mode</code> is <code>color</code>:- <code>Array</code>: <code>[r, g, b]</code> (<code>r</code>, <code>g</code> and <code>b</code> between <code>range.min</code> and <code>range.max</code>)- <code>Array</code>: <code>[r, g, b, alpha]</code> (<code>alpha</code> between <code>alphaRange.min</code> and <code>alphaRange.max</code>)- <code>String</code>: CSS color text# <p>Display text.</p> style property type default description <code>boolean</code> <code>false</code> Set to <code>true</code> to display the text vertically <code>boolean</code>|<code>string</code> <code>false</code> Set to <code>true</code> to wrap long lines automatically. Set to <code>soft</code> to avoid breaking words.Choices: <code>false</code>, <code>true</code>, <code>soft</code> <code>string</code> <code>\"center\"</code> Text alignment.Choices: <code>center</code>, <code>left</code>, <code>right</code>, <code>top</code>, <code>bottom</code>, <code>left top</code>, <code>left bottom</code>, <code>right top</code>, <code>right bottom</code>"},{"location":"docs/widgets/properties-reference/#led_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#led_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#led_alphaRange","title":"alphaRange","text":""},{"location":"docs/widgets/properties-reference/#led_logScale","title":"logScale","text":""},{"location":"docs/widgets/properties-reference/#led_value","title":"value","text":""},{"location":"docs/widgets/properties-reference/#text_vertical","title":"vertical","text":""},{"location":"docs/widgets/properties-reference/#text_wrap","title":"wrap","text":""},{"location":"docs/widgets/properties-reference/#text_align","title":"align","text":""},{"location":"docs/widgets/properties-reference/#pads","title":"Pads","text":"xy# <p>Two-dimensional slider.</p> stylexyscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>integer</code> <code>20</code> Defines the points' size <code>boolean</code> <code>false</code> When set to <code>true</code>, the point will be drawn only while touched. <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the scale property type default description <code>boolean</code> <code>false</code> By default, the points are dragged from their initial position.If set to <code>true</code>, touching anywhere on the widget's surface will make them snap to the touching coordinates <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its default value when released <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the x axis <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the y axis <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale for the x axis. Set to <code>-1</code> for exponential scale. <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale for the y axis. Set to <code>-1</code> for exponential scale. <code>boolean</code>|<code>string</code> <code>false</code> Set to <code>true</code> to make the fader reset to its default value when receiving a double tap.Can also be an osc address, which case the widget will just send an osc message: <code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code> <code>number</code> <code>1</code> Defines the pad's sensitivity when <code>snap</code> is <code>false</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. rgb# <p>Color picker with optional alpha slider.</p> rgbscripting property type default description <code>boolean</code> <code>false</code> By default, the points are dragged from their initial position.If set to <code>true</code>, touching anywhere on the widget's surface will make them snap to the touching coordinates <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its default value when released <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 255}</code> Defines the widget's output scale. <code>boolean</code> <code>false</code> Set to <code>true</code> to enable alpha channel <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the widget's output scale for the alpha channel. property type default description <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. multixy# <p>Multi-point XY pad.</p> stylemultixyscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>integer</code> <code>20</code> Defines the points' size <code>boolean</code> <code>false</code> When set to <code>true</code>, the points will be drawn only while touched. <code>boolean</code> <code>true</code> Set to <code>false</code> to hide the scale property type default description <code>integer</code>|<code>array</code> <code>2</code> Defines the number of points on the padCan be an array of strings that will be used as labels for the points (ex: <code>['A', 'B']</code>) <code>boolean</code> <code>false</code> By default, the points are dragged from their initial position.If set to <code>true</code>, touching anywhere on the widget's surface will make them snap to the touching coordinates <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its default value when released <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the x axis <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the min and max values for the y axis <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale for the x axis. Set to <code>-1</code> for exponential scale. <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale for the y axis. Set to <code>-1</code> for exponential scale. <code>boolean</code>|<code>string</code> <code>false</code> Set to <code>true</code> to make the fader reset to its default value when receiving a double tap.Can also be an osc address, which case the widget will just send an osc message: <code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code> <code>number</code> <code>1</code> Defines the pad's sensitivity when <code>snap</code> is <code>false</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. canvas# <p>Multitouch canvas widget with user-defined drawing functions and touch reactions.</p> stylecanvasscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> property type default description <code>number</code> <code>1</code> Defines the number of values accepted by the widget (minimum 1). Incoming messages that don't comply will be ignoredWhen calling <code>set()</code> from a script, submitted value should be an array only if <code>valueLength</code> is greater than 1. <code>boolean</code> <code>true</code> If set to <code>false</code>, the canvas context won't be cleared automatically and <code>ctx.clear()</code> will need to be called in <code>onDraw</code>. <code>boolean</code>|<code>number</code> <code>false</code> If set to <code>true</code>, <code>onDraw</code> will be called at each frame, otherwise it will be called only when the widget is touched and when it receives a value.Can be a number between 1 and 60 to specify the framerate (default: 30 fps). property type default description <code>script</code> <code>\"\"</code> Script executed whenever the widget's value updates. See documentation. <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released, and when the pointer moves when the widget is touched. See documentation. <code>script</code> <code>\"\"</code> Script executed when the widget is redrawn. See documentation. <code>script</code> <code>\"\"</code> Script executed when the widget is resized. See documentation."},{"location":"docs/widgets/properties-reference/#xy_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#xy_pointSize","title":"pointSize","text":""},{"location":"docs/widgets/properties-reference/#xy_ephemeral","title":"ephemeral","text":""},{"location":"docs/widgets/properties-reference/#xy_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#xy_snap","title":"snap","text":""},{"location":"docs/widgets/properties-reference/#xy_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#xy_rangeX","title":"rangeX","text":""},{"location":"docs/widgets/properties-reference/#xy_rangeY","title":"rangeY","text":""},{"location":"docs/widgets/properties-reference/#xy_logScaleX","title":"logScaleX","text":""},{"location":"docs/widgets/properties-reference/#xy_logScaleY","title":"logScaleY","text":""},{"location":"docs/widgets/properties-reference/#xy_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#xy_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#xy_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#xy_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#rgb_snap","title":"snap","text":""},{"location":"docs/widgets/properties-reference/#rgb_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#rgb_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#rgb_alpha","title":"alpha","text":""},{"location":"docs/widgets/properties-reference/#rgb_rangeAlpha","title":"rangeAlpha","text":""},{"location":"docs/widgets/properties-reference/#rgb_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#multixy_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#multixy_pointSize","title":"pointSize","text":""},{"location":"docs/widgets/properties-reference/#multixy_ephemeral","title":"ephemeral","text":""},{"location":"docs/widgets/properties-reference/#multixy_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#multixy_points","title":"points","text":""},{"location":"docs/widgets/properties-reference/#multixy_snap","title":"snap","text":""},{"location":"docs/widgets/properties-reference/#multixy_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#multixy_rangeX","title":"rangeX","text":""},{"location":"docs/widgets/properties-reference/#multixy_rangeY","title":"rangeY","text":""},{"location":"docs/widgets/properties-reference/#multixy_logScaleX","title":"logScaleX","text":""},{"location":"docs/widgets/properties-reference/#multixy_logScaleY","title":"logScaleY","text":""},{"location":"docs/widgets/properties-reference/#multixy_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#multixy_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#multixy_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#multixy_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#canvas_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#canvas_valueLength","title":"valueLength","text":""},{"location":"docs/widgets/properties-reference/#canvas_autoClear","title":"autoClear","text":""},{"location":"docs/widgets/properties-reference/#canvas_continuous","title":"continuous","text":""},{"location":"docs/widgets/properties-reference/#canvas_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#canvas_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#canvas_onDraw","title":"onDraw","text":""},{"location":"docs/widgets/properties-reference/#canvas_onResize","title":"onResize","text":""},{"location":"docs/widgets/properties-reference/#sliders","title":"Sliders","text":"fader# <p>Vertical / horizontal slider.</p> stylefaderscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>string</code> <code>\"default\"</code> Design styleChoices: <code>default</code>, <code>round</code>, <code>compact</code> <code>number</code> <code>\"auto\"</code> Fader knob size <code>boolean</code> <code>false</code> Set to <code>true</code> to display the fader horizontally <code>boolean</code> <code>false</code> Set to <code>true</code> to show range breakpoints (ignored if <code>design</code> is <code>compact</code>) <code>boolean</code>|<code>array</code> <code>false</code> Set to <code>true</code> to display a dashed gauge. Can be set as an <code>array</code> of two numbers : <code>[dash_size, gap_size]</code> <code>array</code>|<code>object</code> <code>[]</code> When set, the meter's gauge will be filled with a linear color gradient- each item must be a CSS color string.- as an <code>object</code>: each key must be a number between 0 and 1- each item must be a CSS color string.Examples: <code>['blue', 'red']</code>, property type default description <code>boolean</code> <code>false</code> By default, dragging the widget will modify it's value starting from its last value. Setting this to <code>true</code> will make it snap directly to the mouse/touch position <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its <code>default</code> value when released <code>boolean</code> <code>false</code> Set to <code>true</code> to make the fader reset to its <code>default</code> value when receiving a double tap.Can also be an osc address, in which case the widget will just send an osc message (<code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code>) <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the breakpoints of the fader's scale:- keys can be percentages and/or <code>min</code> / <code>max</code>- values can be <code>number</code> or <code>object</code> if a custom label is neededExample: (<code>{min:{\"-inf\": 0}, \"50%\": 0.25, max: {\"+inf\": 1}}</code>) <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale. Set to <code>-1</code> for exponential scale. <code>number</code> <code>1</code> Defines the fader's sensitivity when <code>snap</code> is <code>false</code> <code>number</code>|<code>array</code>|<code>string</code> <code>\"\"</code> Restricts the widget's value:- <code>number</code>: define a number of evenly spaced steps- <code>array</code> of numbers: use arbitrary values as steps- <code>auto</code>: use values defined in <code>range</code> <code>number</code> <code>\"auto\"</code> Defines the starting point's value of the fader's gauge property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. knob# <p>Rotative knob slider.</p> styleknobscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>string</code> <code>\"default\"</code> Design styleNote: \"solid\" design uses \"colorStroke\" for the central knob color.Choices: <code>default</code>, <code>solid</code>, <code>line</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to show the scale's breakpoints <code>boolean</code>|<code>array</code> <code>false</code> Set to <code>true</code> to display a dashed gauge. Can be set as an <code>array</code> of two numbers : <code>[dash_size, gap_size]</code> <code>number</code> <code>270</code> Defines the angle's width of the knob, in degrees property type default description <code>string</code> <code>\"vertical\"</code> - <code>vertical</code>: relative move in vertical motion- <code>circular</code>: relative move in circular motion- <code>snap</code>: snap to touch position- <code>snap-alt</code>: alternative snap mode that allow jumping from <code>range.min</code> to <code>range.max</code>. <code>sensitivity</code> is ignored with this mode.Choices: <code>vertical</code>, <code>circular</code>, <code>snap</code>, <code>snap-alt</code> <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its <code>default</code> value when released <code>boolean</code> <code>false</code> Set to <code>true</code> to make the knob reset to its <code>default</code> value when receiving a double tap.Can also be an osc address, in which case the widget will just send an osc message (<code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code>) <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the breakpoints of the fader's scale:- keys can be percentages and/or <code>min</code> / <code>max</code>- values can be <code>number</code> or <code>object</code> if a custom label is neededExample: (<code>{min:{\"-inf\": 0}, \"50%\": 0.25, max: {\"+inf\": 1}}</code>) <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale. Set to <code>-1</code> for exponential scale. <code>number</code> <code>1</code> Defines the knob's sensitivity when <code>mode</code> is not <code>snap</code> <code>string</code>|<code>number</code>|<code>array</code> <code>\"\"</code> Restricts the widget's value:- <code>number</code>: define a number of evenly spaced steps- <code>array</code> of numbers: use arbitrary values as steps- <code>auto</code>: use values defined in <code>range</code> <code>number</code> <code>\"auto\"</code> Defines the starting point's value of the knob's gauge property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. encoder# <p>A knob that sends a relative direction information instead of an absolute value.</p> styleencoderscripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> property type default description <code>string</code> <code>\"circular\"</code> - <code>circular</code>: relative move in circular motion- <code>snap</code>: snap to touch position and move in vertical motion- <code>vertical</code>: relative move in vertical motionChoices: <code>circular</code>, <code>snap</code>, <code>vertical</code> <code>boolean</code> <code>false</code> Set to <code>true</code> to make the fader reset to its <code>default</code> value when receiving a double tap.Can also be an osc address, in which case the widget will just send an osc message (<code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code>) <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the breakpoints of the fader's scale:- keys can be percentages and/or <code>min</code> / <code>max</code>- values can be <code>number</code> or <code>object</code> if a custom label is neededExample: (<code>{min:{\"-inf\": 0}, \"50%\": 0.25, max: {\"+inf\": 1}}</code>) <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale. Set to <code>-1</code> for exponential scale. <code>number</code> <code>1</code> When set between 0 and 1, reduces the encoder's verbosity <code>number</code> <code>\"\"</code> Defines the granularity / verbosity of the encoder (number of step for a 360\u00b0 arc) <code>*</code> <code>-1</code> Defines which value is sent when rotating the encoder anticlockwise <code>*</code> <code>1</code> Defines which value is sent when rotating the encoder clockwise <code>number</code> <code>\"\"</code> Defines which value is sent when releasing the encoder:- Set to <code>null</code> to send send no argument in the osc message- Can be an <code>object</code> if the type needs to be specified property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code>Additional variables:- <code>locals.speed</code>: encoder's speed (reduce <code>sensitivity</code> to increase averaging)- <code>locals.angle</code>: encoder's angle in degrees <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation. range# <p>A fader with two heads for setting a range.</p> stylerangescripting property type default description <code>string</code> <code>\"\"</code> CSS rules. See documentation.Some style-related properties can be set or read from css using css variables:- <code>--color-background</code>: <code>colorBg</code>- <code>--color-widget</code>: <code>colorWidget</code>- <code>--color-fill</code>: <code>colorFill</code>- <code>--color-stroke</code>: <code>colorStroke</code>- <code>--color-text</code>: <code>colorText</code>- <code>--widget-padding</code>: <code>padding</code>- <code>--line-width</code>: <code>lineWidth</code>- <code>--border-radius</code>: <code>borderRadius</code>- <code>--alpha-fill-on</code>: <code>alphaFillOn</code>- <code>--alpha-fill-off</code>: <code>alphaFillOff</code>- <code>--alpha-stroke</code>: <code>alphaStroke</code>- <code>--alpha-pips</code>: <code>alphaPips</code>- <code>--alpha-pips-text</code>: <code>alphaPipsText</code>Canvas-based widget have their computed width and height available as css variables (read-only):- <code>--widget-width</code>- <code>--widget-height</code> <code>string</code> <code>\"default\"</code> Design styleChoices: <code>default</code>, <code>round</code>, <code>compact</code> <code>number</code> <code>\"auto\"</code> Fader knob size <code>boolean</code> <code>false</code> Set to <code>true</code> to display the fader horizontally <code>boolean</code> <code>false</code> Set to <code>true</code> to show range breakpoints (ignored if <code>design</code> is <code>compact</code>) <code>boolean</code>|<code>array</code> <code>false</code> Set to <code>true</code> to display a dashed gauge. Can be set as an <code>array</code> of two numbers : <code>[dash_size, gap_size]</code> <code>array</code>|<code>object</code> <code>[]</code> When set, the meter's gauge will be filled with a linear color gradient- each item must be a CSS color string.- as an <code>object</code>: each key must be a number between 0 and 1- each item must be a CSS color string.Examples: <code>['blue', 'red']</code>, property type default description <code>boolean</code> <code>false</code> By default, dragging the widget will modify it's value starting from its last value. Setting this to <code>true</code> will make it snap directly to the mouse/touch position <code>boolean</code> <code>false</code> When set to <code>true</code>, the widget will go back to its <code>default</code> value when released <code>boolean</code> <code>false</code> Set to <code>true</code> to make the fader reset to its <code>default</code> value when receiving a double tap.Can also be an osc address, in which case the widget will just send an osc message (<code>/&lt;doubleTap&gt; &lt;preArgs&gt;</code>) <code>object</code> <code>{\u00a0\"min\": 0,\u00a0\"max\": 1}</code> Defines the breakpoints of the fader's scale:- keys can be percentages and/or <code>min</code> / <code>max</code>- values can be <code>number</code> or <code>object</code> if a custom label is neededExample: (<code>{min:{\"-inf\": 0}, \"50%\": 0.25, max: {\"+inf\": 1}}</code>) <code>boolean</code>|<code>number</code> <code>false</code> Set to <code>true</code> to use logarithmic scale. Set to <code>-1</code> for exponential scale. <code>number</code> <code>1</code> Defines the fader's sensitivity when <code>snap</code> is <code>false</code> <code>number</code>|<code>array</code>|<code>string</code> <code>\"\"</code> Restricts the widget's value:- <code>number</code>: define a number of evenly spaced steps- <code>array</code> of numbers: use arbitrary values as steps- <code>auto</code>: use values defined in <code>range</code> property type default description <code>script</code> <code>\"\"</code> Script executed when the widget's value updates. See documentation.Canvas-based widget have their computed width and height available as local variables:- <code>locals.width</code>- <code>locals.height</code> <code>script</code> <code>\"\"</code> Script executed when the widget is touched and released. See documentation."},{"location":"docs/widgets/properties-reference/#fader_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#fader_design","title":"design","text":""},{"location":"docs/widgets/properties-reference/#fader_knobSize","title":"knobSize","text":""},{"location":"docs/widgets/properties-reference/#fader_horizontal","title":"horizontal","text":""},{"location":"docs/widgets/properties-reference/#fader_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#fader_dashed","title":"dashed","text":""},{"location":"docs/widgets/properties-reference/#fader_gradient","title":"gradient","text":""},{"location":"docs/widgets/properties-reference/#fader_snap","title":"snap","text":""},{"location":"docs/widgets/properties-reference/#fader_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#fader_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#fader_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#fader_logScale","title":"logScale","text":""},{"location":"docs/widgets/properties-reference/#fader_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#fader_steps","title":"steps","text":""},{"location":"docs/widgets/properties-reference/#fader_origin","title":"origin","text":""},{"location":"docs/widgets/properties-reference/#fader_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#fader_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#knob_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#knob_design","title":"design","text":""},{"location":"docs/widgets/properties-reference/#knob_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#knob_dashed","title":"dashed","text":""},{"location":"docs/widgets/properties-reference/#knob_angle","title":"angle","text":""},{"location":"docs/widgets/properties-reference/#knob_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#knob_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#knob_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#knob_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#knob_logScale","title":"logScale","text":""},{"location":"docs/widgets/properties-reference/#knob_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#knob_steps","title":"steps","text":""},{"location":"docs/widgets/properties-reference/#knob_origin","title":"origin","text":""},{"location":"docs/widgets/properties-reference/#knob_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#knob_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#encoder_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#encoder_mode","title":"mode","text":""},{"location":"docs/widgets/properties-reference/#encoder_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#encoder_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#encoder_logScale","title":"logScale","text":""},{"location":"docs/widgets/properties-reference/#encoder_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#encoder_ticks","title":"ticks","text":""},{"location":"docs/widgets/properties-reference/#encoder_back","title":"back","text":""},{"location":"docs/widgets/properties-reference/#encoder_forth","title":"forth","text":""},{"location":"docs/widgets/properties-reference/#encoder_release","title":"release","text":""},{"location":"docs/widgets/properties-reference/#encoder_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#encoder_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#range_css","title":"css","text":""},{"location":"docs/widgets/properties-reference/#range_design","title":"design","text":""},{"location":"docs/widgets/properties-reference/#range_knobSize","title":"knobSize","text":""},{"location":"docs/widgets/properties-reference/#range_horizontal","title":"horizontal","text":""},{"location":"docs/widgets/properties-reference/#range_pips","title":"pips","text":""},{"location":"docs/widgets/properties-reference/#range_dashed","title":"dashed","text":""},{"location":"docs/widgets/properties-reference/#range_gradient","title":"gradient","text":""},{"location":"docs/widgets/properties-reference/#range_snap","title":"snap","text":""},{"location":"docs/widgets/properties-reference/#range_spring","title":"spring","text":""},{"location":"docs/widgets/properties-reference/#range_doubleTap","title":"doubleTap","text":""},{"location":"docs/widgets/properties-reference/#range_range","title":"range","text":""},{"location":"docs/widgets/properties-reference/#range_logScale","title":"logScale","text":""},{"location":"docs/widgets/properties-reference/#range_sensitivity","title":"sensitivity","text":""},{"location":"docs/widgets/properties-reference/#range_steps","title":"steps","text":""},{"location":"docs/widgets/properties-reference/#range_onValue","title":"onValue","text":""},{"location":"docs/widgets/properties-reference/#range_onTouch","title":"onTouch","text":""},{"location":"docs/widgets/properties-reference/#scripts","title":"Scripts","text":"script# <p>Scripting widget utility with keyboard bindings</p> scripting property type default description <code>script</code> <code>\"\"</code> Script executed whenever the widget receives a keyboard event if <code>keyBinding</code> is set). See documentation. <code>string</code>|<code>array</code> <code>\"\"</code> Key combo <code>string</code> or <code>array</code> of strings (see KeyboardJS documentation).If the editor is enabled, some keys / combos will not work.To process all keystroke events, write <code>['']</code> <code>boolean</code> <code>true</code> Set to <code>false</code> to prevent keydown repeats when holding the key combo pressed <code>string</code> <code>\"keydown\"</code> Determines which key event trigger the script's executionChoices: <code>keydown</code>, <code>keyup</code>, <code>both</code> variable# <p>Receives / stores a value, to be used in scripts (using the get function) or in properties (using the @{} syntax).</p>"},{"location":"docs/widgets/properties-reference/#script_onKeyboard","title":"onKeyboard","text":""},{"location":"docs/widgets/properties-reference/#script_keyBinding","title":"keyBinding","text":""},{"location":"docs/widgets/properties-reference/#script_keyRepeat","title":"keyRepeat","text":""},{"location":"docs/widgets/properties-reference/#script_keyType","title":"keyType","text":""},{"location":"docs/widgets/scripting/","title":"Scripting","text":"<p>Widgets can run Javascript scripts upon specific events. These scripts are written in special properties under the scripting category.</p> <p>Advanced syntaxes</p> <p>Most advanced syntaxes should be avoided as much as possible in scripting properties:</p> <ul> <li><code>@{}</code>: use <code>get()</code> and <code>getProp()</code> instead</li> <li><code>OSC{}</code>: use <code>get()</code> instead (using another widget as receiver)</li> <li><code>VAR{}</code>: use <code>getVar()</code>instead</li> <li><code>JS{}</code> and <code>#{}</code> are useless (scripting properties are already interpreted as javascript code) unless you want to generate code procedurally</li> </ul> <p>The editor will always fail to recognize these syntaxes as they don't comply with the javacript language specification, even if the resulting code is valid.</p>"},{"location":"docs/widgets/scripting/#events","title":"Events","text":""},{"location":"docs/widgets/scripting/#oncreate","title":"<code>onCreate</code>","text":"<p>This script is called when the widget is created. If the widget has children, it will be executed after the children are created.</p> <p>Modifying parent container</p> <p>Modifying a non-dynamic property on a parent container from this script will not work.</p> <p>The following variables are available in this context:</p> <ul> <li><code>value</code>: widget's value    </li> </ul>"},{"location":"docs/widgets/scripting/#onvalue","title":"<code>onValue</code>","text":"<p>This script is called when the widget's value updates and when it receives a value.</p> <p>The following variables are available in this context:</p> <ul> <li><code>id</code> (<code>string</code>): id of the widget that's responsible for the value update</li> <li><code>value</code>: widget's value</li> <li><code>touch</code>: see Touch state</li> </ul> Keyboard &amp; Matrix <p>In keyboards and matrices, <code>id</code> is the id of the child widget that triggered the event, and <code>value</code> is an array containing the children's values. The touched widget's value can be retrieved with: <pre><code>value[getIndex(id)]\n</code></pre></p> Touch state (deprecated) <p>This feature is deprecated, use <code>onTouch</code> instead</p> <p>When some widgets are touched or released, a special value event can be caught to trigger custom actions.</p> <p>If the variable <code>touch</code> is not <code>undefined</code>, this means it holds the widget's current touch state:</p> <ul> <li><code>0/1</code> for the widget's touch state (<code>fader</code>, <code>knob</code> and <code>xy</code>, <code>range</code> and <code>multixy</code>)</li> <li><code>[i, 0/1]</code> if the widget is multi touch (<code>range</code> and <code>multixy</code>). In this case <code>i</code> is the touched handle's index, starting with <code>0</code>.</li> </ul> <pre><code>if (touch !== undefined) {\n// send multi touch state\nif (touch.length) send('/touch_address', touch[0], touch[1])\n// send global touch state\nelse send('/touch_address', touch)\n} else {\n// do something with the value ?\n}\n</code></pre> <p>To avoid unwanted script executions, touch state events will only be caught if the script contains the word <code>touch</code> and if <code>onTouch</code> is empty.</p>"},{"location":"docs/widgets/scripting/#ontouch","title":"<code>onTouch</code>","text":"<p>This script is executed when the widget is touched, and when it is released.</p> <p>This script has access to the same variables and functions as the <code>script</code> property (except the event-specific ones), plus the following:</p> <ul> <li><code>value</code>: widget value</li> <li><code>event</code>: object containing the following:<ul> <li><code>type</code>: <code>\"start\"</code> or <code>\"stop\"</code></li> <li><code>handle</code>: <code>undefined</code> if the event concerns the widget, <code>integer</code> if it concerns one of it's handles (<code>multixy</code> and <code>range</code> widgets only)</li> </ul> </li> </ul> <p>Note: the canvas widgets exposes more informations in its <code>onTouch</code> script.</p>"},{"location":"docs/widgets/scripting/#ondraw","title":"<code>onDraw</code>","text":"<p>See canvas.</p>"},{"location":"docs/widgets/scripting/#onkeyboard","title":"<code>onKeyboard</code>","text":"<p>Script widget only</p> <p>This script is executed when the key(s) defined in the widget's <code>keyBinding</code> property are pressed.</p> <p>The following variables are available in this context:</p> <ul> <li><code>type</code> (<code>string</code>): <code>keydown</code> or <code>keyup</code></li> <li><code>key</code> (<code>string</code>): key name,</li> <li><code>code</code> (<code>number</code>): key code</li> <li><code>ctrl</code> (<code>boolean)</code>: <code>true</code> if ctrl key is pressed</li> <li><code>shift</code> (<code>boolean</code>): <code>true</code> if shift key is pressed</li> <li><code>alt</code> (<code>boolean</code>): <code>true</code> if alt key is pressed</li> <li><code>meta</code> (<code>boolean</code>): <code>true</code> if meta key is pressed</li> </ul>"},{"location":"docs/widgets/scripting/#available-variables","title":"Available variables","text":"<p>The following variables and functions are accessible in this context.</p> <ul> <li><code>console</code>: javascript console</li> <li><code>locals</code>: object for storing/reading arbitrary values. Changing its properties does not trigger any synchronisation even if the value is used somewhere else.</li> <li><code>globals</code>: same as <code>locals</code> but shared between all widgets, contains a few useful variables:<ul> <li><code>screen</code>: client screen informations (<code>{width, height, orientation}</code>)</li> <li><code>env</code>: client options (ie: url query options),</li> <li><code>ip</code>: client's ip address,</li> <li><code>url</code>: server url,</li> <li><code>platform</code>: operating system as seen by the client</li> <li><code>session</code>: session file path</li> <li><code>clipboard</code>: instance of navigator Clipboard</li> </ul> </li> <li><code>Image</code>: javascript's Image constructor</li> </ul> <p>this</p> <p>Unlike in most javascript contexts, the special keyword <code>this</code> doesn't point to an object but instead returns the string <code>\"this\"</code>.</p>"},{"location":"docs/widgets/scripting/#getid","title":"<code>get(id)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string.</li> </ul> <p>Returns the value of the first matching widget. If the returned value is an object, a copy is returned to allow safe mutation.</p>"},{"location":"docs/widgets/scripting/#setid-value-options","title":"<code>set(id, value, options)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget. <code>id</code> may contains wildcards ('*').</li> <li><code>value</code>: new value for the widget.</li> <li><code>options</code> (optional): <code>object</code>, accepts the following items:<ul> <li><code>sync: false</code>: prevents widgets from triggering synchronization and scripts</li> <li><code>script: false</code>: prevents scripts but not synchronization</li> <li><code>send: false</code>: prevents widgets from sending osc messages</li> <li><code>external: true</code>: simulates a value coming from an osc/midi message (implies <code>sync: false</code> automatically)</li> </ul> </li> </ul> <p>Sets the value of the first matching widget. If <code>\u00ecd</code> contains wildcards, affects all matching widgets except the emitting widget.</p> <p>If the event that triggered the script's execution was initiated by a user interaction, this will make the widget send its value as well (unless <code>options</code> is set to <code>{send: false}</code>).</p>"},{"location":"docs/widgets/scripting/#getvarid-name","title":"<code>getVar(id, name)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string.</li> <li><code>name</code>: variable name as a string.</li> </ul> <p>Returns the value of a widget's custom variable. If the returned value is an object, a copy is returned to allow safe mutation.</p>"},{"location":"docs/widgets/scripting/#setvarid-name-value","title":"<code>setVar(id, name, value)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget. <code>id</code> may contains wildcards ('*').</li> <li><code>name</code>: variable name as a string.</li> <li><code>value</code>: new value for the variable.</li> </ul> <p>Sets the value of a widget's custom variable (see advanced syntaxes). If <code>\u00ecd</code> contains wildcards, affects all matching widgets.</p>"},{"location":"docs/widgets/scripting/#sendtarget-address-args","title":"<code>send(target, address, ...args)</code>","text":"<ul> <li><code>target</code> (optional): <code>\"ip:port\"</code> or <code>\"midi:device_name\"</code> string. If omitted, the widget's target (or the server's defaults) will be used.</li> <li><code>address</code>: osc address, must start with a <code>/</code></li> <li><code>args</code>: values or <code>{type: \"OSC_TYPE_LETTER\", value: VALUE}</code> objects</li> </ul> <p>Sends an osc message.</p> <p>If the event that triggered the script's execution was not initiated by a user interaction, this function will have no effect.</p> <p>This function ignores the widget's <code>bypass</code> and <code>ignoreDefaults</code> properties.</p> Examples <pre><code>send('127.0.0.1:4444', '/address', 1)\nsend('127.0.0.1:4444', '/address', 1, 2)\nsend('/address', 1) // uses the widget's target\nsend('/address', {type: 'i', value: 1}) // sends 1 as an integer\n</code></pre>"},{"location":"docs/widgets/scripting/#getpropid-name","title":"<code>getProp(id, name)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget.</li> <li><code>name</code>: property name.</li> </ul> <p>Returns the property called <code>\"name\"</code> of the first matching widget. If the returned value is an object, a copy is returned to allow safe mutation.</p>"},{"location":"docs/widgets/scripting/#getindexid","title":"<code>getIndex(id)</code>","text":"<ul> <li><code>id</code> (optional): widget <code>id</code> as a string. Defaults to <code>\"this\"</code>.</li> </ul> <p>Returns the widget's index in its container.</p>"},{"location":"docs/widgets/scripting/#updatepropid-name","title":"<code>updateProp(id, name)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget.</li> <li><code>name</code>: property name.</li> </ul> <p>Forces a widget to check if one of its properties has changed and update itself if needed.</p>"},{"location":"docs/widgets/scripting/#updatecanvasid","title":"<code>updateCanvas(id)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget.</li> </ul> <p>Forces a canvas widget redraw.</p>"},{"location":"docs/widgets/scripting/#httpgeturl-callback","title":"<code>httpGet(url, callback)</code>","text":"<ul> <li><code>url</code>: url of the resource to fetch (local url only)</li> <li><code>callback</code>: function executed when/if the http request succeeds, with the response text as argument</li> </ul>"},{"location":"docs/widgets/scripting/#stategetid","title":"<code>stateGet(id)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string, or array of <code>id</code> strings. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget.</li> </ul> <p>Returns a state object (<code>id:value</code>) for matching widget and all their children.</p>"},{"location":"docs/widgets/scripting/#statesetstate-options","title":"<code>stateSet(state, options)</code>","text":"<p>Loads a state object. If the event that triggered the script's execution was initiated by a user interaction, this will make the updated widgets send their value as well.</p> <ul> <li><code>options</code> (optional): <code>object</code>, accepts the following items:<ul> <li><code>send: false</code>: prevents widgets from sending osc messages</li> </ul> </li> </ul>"},{"location":"docs/widgets/scripting/#storage","title":"<code>storage</code>","text":"<p>Global localStorage instance, allows storing data that persists upon refresh/relaunch.</p>"},{"location":"docs/widgets/scripting/#settimeoutid-callback-delay-setintervalid-callback-delay","title":"<code>setTimeout(id, callback, delay)</code> / <code>setInterval(id, callback, delay)</code>","text":"<p>These work like almost their native equivalent, with an extra (optional) <code>id</code> argument.</p> <ul> <li><code>id</code> (optional): unique identifier, if omitted, defaults to <code>undefined</code>. If a timeout with the same id is already running, it is cleared before the new one is created (even if <code>undefined</code>). <code>id</code>s are scoped to the widget's context: two timeouts with the same <code>id</code> in two different widgets can run concurrently</li> <li><code>callback</code>: function to be executed</li> <li><code>delay</code>: delay before execution is ms</li> </ul> <p>Reference:</p> <ul> <li>https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout</li> <li>https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval</li> </ul> <p>Usage note:</p> <p>If no concurrent timeout / interval is needed, calling <code>setTimeout</code>, <code>setInterval</code>, <code>clearTimeout</code> and <code>clearInterval</code> with no <code>\u00ecd</code> argument will do.</p>"},{"location":"docs/widgets/scripting/#cleartimeoutid-clearintervalid","title":"<code>clearTimeout(id)</code> / <code>clearInterval(id)</code>","text":"<p>Clears timeout with matching <code>id</code>.</p> <p>Reference:</p> <ul> <li>https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout</li> <li>https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval</li> </ul>"},{"location":"docs/widgets/scripting/#setfocusid","title":"<code>setFocus(id)</code>","text":"<ul> <li><code>id</code> (optional): widget <code>id</code> as a string</li> </ul> <p>Gives focus to a widget (ie input widget).</p> <p>Built-in client only: tells the operating system to give the focus to the client window</p>"},{"location":"docs/widgets/scripting/#unfocus","title":"<code>unfocus()</code>","text":"<p>Built-in client only: tells the operating system to give the focus to the window that was focused before.</p>"},{"location":"docs/widgets/scripting/#setfocusablefocusable","title":"<code>setFocusable(focusable)</code>","text":"<ul> <li><code>focusable</code>: <code>0</code> or <code>1</code></li> </ul> <p>Built-in client only: define whether the client window can be focused or not. Text inputs cannot be interacted with when the window is not focusable.</p>"},{"location":"docs/widgets/scripting/#getscrollid","title":"<code>getScroll(id)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string.</li> </ul> <p>Returns the scroll position of a container as a <code>[x, y]</code> array.</p> <p>Deprecated</p> <p>Scrollable panels expose their scroll position normalized between 0 and 1 with their value.</p>"},{"location":"docs/widgets/scripting/#setscrollid-x-y","title":"<code>setScroll(id, x, y)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string. Can be <code>\"this\"</code> to target the host widget, or <code>\"parent\"</code> to target the parent widget.</li> <li><code>x</code>: horizontal scroll, <code>undefined</code> to use current value</li> <li><code>y</code>: vertical scroll, <code>undefined</code> to use current value</li> </ul> <p>Sets the scroll state of a container.</p> <p>Deprecated</p> <p>Scrollable panels expose their scroll position normalized between 0 and 1 with their value.</p>"},{"location":"docs/widgets/scripting/#toolbari1-i2","title":"<code>toolbar(i1, i2, ...)</code>","text":"<ul> <li><code>iX</code>: menu entry index</li> </ul> <p>Triggers toolbar action at specified index.</p> <p>Examples</p> <ul> <li><code>toolbar(0, 0)</code> -&gt; Open a new session</li> <li><code>toolbar(4)</code> -&gt; Toggle full screen</li> </ul> <p>Actions will only be triggered if initiated with a user interaction. Fullscreen cannot be toggled with a simulated interaction (i.e. using <code>/SET</code>)</p>"},{"location":"docs/widgets/scripting/#openurlurl","title":"<code>openUrl(url)</code>","text":"<ul> <li><code>url</code>: http(s) url</li> </ul> <p>Built-in client only: opens url with the system's default browser External client only: opens url in a new tab</p> <p>If the event that triggered the script's execution was not initiated by a user interaction, this function will have no effect.</p>"},{"location":"docs/widgets/scripting/#runasid-callback","title":"<code>runAs(id, callback)</code>","text":"<ul> <li><code>id</code>: widget <code>id</code> as a string.</li> <li><code>callback</code>: function to be executed</li> </ul> <p>Run <code>callback</code> function as if executed by another that widget matches specified id. This will not change the value of any local variable but <code>\"this\"</code> and <code>\"parent\"</code> arguments (accepted by functions such as <code>set()</code>) will be interpreted differently. Timeouts and intervals will be created and cleared in the target widget's scope.</p>"},{"location":"docs/widgets/scripting/#reloadkeepstate","title":"<code>reload(keepState)</code>","text":"<ul> <li><code>keepState</code> (optional): <code>true</code> by default, set to false to discard the client's state.</li> </ul> <p>Reload the client application. Cannot be called from the <code>onCreate</code> property.</p> <p>If the event that triggered the script's execution was not initiated by a user interaction, this function will have no effect.</p>"},{"location":"docs/widgets/scripting/#getnavigator","title":"<code>getNavigator()</code>","text":"<p>Returns the instance of Navigator.</p>"},{"location":"docs/widgets/scripting/#browsefileoptions-callback","title":"<code>browseFile(options, callback)</code>","text":"<p>Opens the file file browser and pass selected file to a callback function (does not create nor read files by itself).</p> <ul> <li><code>options</code>: object with the following keys:<ul> <li><code>extension</code>: allowed extension (default: \"*\")</li> <li><code>directory</code>: starting directory for browser (default: user's home)</li> <li><code>allowDir</code>: allow choosing a directory instead of a file (default: false)</li> <li><code>mode</code>: \"save\" or \"open\"</li> </ul> </li> </ul>"}]}