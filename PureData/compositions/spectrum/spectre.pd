#N canvas 260 86 857 605 12;
#X obj 232 415 readsf~;
#X obj 200 341 list trim;
#X obj 200 320 list prepend open;
#X obj 194 214 list split 1;
#X obj 234 237 list split 2;
#X obj 4 244 list append 0;
#X obj 200 299 list append;
#X msg 200 387 1;
#X obj 194 193 text get sonInfo;
#X obj 200 362 t b a;
#X obj 365 5 inlet;
#X obj 232 529 outlet~;
#X obj 324 486 f;
#X obj 310 127 t f f;
#X obj 324 510 list append 0;
#X obj 478 319 delay;
#X obj 390 371 line~;
#X obj 232 501 *~;
#X msg 478 341 0 50;
#N canvas 141 164 509 556 calculFadeOut 0;
#X obj 20 136 text get sonInfo;
#X obj 20 227 list length;
#X obj 20 50 t f f;
#X obj 19 421 text get sonInfo 1, f 10;
#X obj 44 304 t b b;
#X obj 20 249 route 7 8 9;
#X obj 143 404 text get sonInfo 1, f 10;
#X obj 123 513 - 2205;
#X obj 122 479 -;
#X obj 123 534 outlet;
#X obj 20 19 inlet;
#X obj 211 144 t f;
#X obj 20 366 f;
#X obj 143 358 f;
#X obj 300 390 f;
#X obj 386 390 f;
#X obj 20 188 list append;
#X obj 274 170 list split 1;
#X obj 313 199 route bang;
#N canvas 266 291 450 300 chercheLeSon 0;
#X obj 89 22 inlet;
#X obj 89 263 outlet;
#X obj 89 133 text search sonInfo;
#X msg 89 85 symbol sons/son\$1.wav;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 20 114 pd chercheLeSon;
#X obj 274 66 r \$1samplePos;
#N canvas 266 291 450 300 chercheLeSon 0;
#X obj 89 22 inlet;
#X obj 89 263 outlet;
#X obj 89 133 text search sonInfo;
#X msg 89 85 symbol sons/son\$1.wav;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 19 395 pd chercheLeSon;
#N canvas 266 291 450 300 chercheLeSon 0;
#X obj 89 22 inlet;
#X obj 89 263 outlet;
#X obj 89 133 text search sonInfo;
#X msg 89 85 symbol sons/son\$1.wav;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 143 381 pd chercheLeSon;
#X connect 0 0 16 0;
#X connect 1 0 5 0;
#X connect 2 0 19 0;
#X connect 2 1 11 0;
#X connect 3 0 7 0;
#X connect 4 0 13 0;
#X connect 4 1 14 0;
#X connect 5 0 12 0;
#X connect 5 1 4 0;
#X connect 5 2 15 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 10 0 2 0;
#X connect 11 0 12 1;
#X connect 11 0 13 1;
#X connect 12 0 21 0;
#X connect 13 0 22 0;
#X connect 14 0 8 1;
#X connect 15 0 7 0;
#X connect 16 0 1 0;
#X connect 17 0 14 1;
#X connect 17 1 18 0;
#X connect 18 1 15 1;
#X connect 19 0 0 0;
#X connect 20 0 16 1;
#X connect 20 0 17 0;
#X connect 21 0 3 0;
#X connect 22 0 6 0;
#X restore 510 296 pd calculFadeOut;
#X obj 532 187 list split 1;
#X obj 572 212 list split 1;
#X obj 365 100 t f b a;
#X obj 92 154 r \$0sonOffset;
#X obj 250 363 r \$0sonStop;
#X msg 250 387 0;
#X obj 643 239 list split 1;
#X obj 644 443 s \$0sonOffset;
#X obj 684 409 s \$0sonStop;
#X obj 684 317 t b a;
#X obj 684 373 delay;
#X obj 390 344 f;
#X obj 365 78 spigot;
#X msg 397 53 \$2;
#X msg 488 53 0;
#X obj 365 28 t a a b;
#X obj 488 77 s \$0sonOffset;
#X obj 449 126 list append;
#X obj 683 261 route bang;
#X obj 523 103 r \$1samplePos;
#X obj 324 534 s \$1noteOff;
#N canvas 266 291 450 300 chercheLeSon 0;
#X obj 89 22 inlet;
#X obj 89 263 outlet;
#X obj 89 133 text search sonInfo;
#X msg 89 85 symbol sons/son\$1.wav;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 194 170 pd chercheLeSon;
#X obj 408 304 dbtorms;
#X obj 119 71 r \$1clear;
#X obj 119 99 s \$0sonStop;
#X obj 716 342 / 480;
#X text 38 13 le samplerate à 48000 est hardcodé \, dans la base de calcul :/, f 39;
#N canvas 353 76 558 670 fft-analysis 0;
#X obj 32 186 *~;
#X obj 32 105 inlet~;
#X obj 32 248 rfft~;
#X obj 32 365 *~;
#X obj 71 365 *~;
#X obj 30 33 block~ 512 4;
#X text 92 101 The inlet~ now re-uses 3/4 of the previous block \, along with the 128 new samples., f 49;
#X text 197 159 window function as before.;
#X obj 89 235 *~;
#X obj 32 518 *~;
#X obj 89 310 /~ 768;
#X text 152 292 divide by 3N/2 (factor of N because rfft and rifft aren't normalized \, and 3/2 is the gain of overlap-4 reconstruction when Hann window function is applied twice.), f 52;
#X text 132 235 Just to show we're doing something \, we multiply each channel by a gain controlled by an array in the main window. The control is quartic-scaled for easy editing., f 55;
#X obj 89 263 *~;
#X text 107 357 Multiply the (complex-valued) spectrum amplitudes by the (real-valued) gain-and-normalization-factor, f 50;
#X obj 32 411 rifft~;
#X text 98 403 Real-valued inverse Fourier transform. This uses only the first N/@ points of its inputs \, supplying the rest by symmetry (so it's OK that rfft~ only puts out those N/2 points.) There's only one outlet because the output is real-valued.;
#X obj 31 599 outlet~;
#X text 76 518 Multiply by the Hann window function again \, necessary because the operation we performed might result in a signal that doesn't go smoothly to zero at both ends.;
#X text 107 583 This repackages the output into 64-sample chunks for the parent window. Since we're operating with an overlap \, the outlet~ object performs an overlapped sum of the blocks computed in this window.;
#X text 129 19 block~ object specifies vector size of 512 and overlap four. This window now computes blocks of 512 samples at intervals of 128 samples computed on the parent patch., f 55;
#X obj 50 160 tabreceive~ \$1-hann;
#X obj 50 492 tabreceive~ \$1-hann;
#X obj 89 205 tabreceive~ \$0-gain;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 15 0;
#X connect 4 0 15 1;
#X connect 8 0 13 0;
#X connect 8 0 13 1;
#X connect 9 0 17 0;
#X connect 10 0 3 1;
#X connect 10 0 4 1;
#X connect 13 0 10 0;
#X connect 15 0 9 0;
#X connect 21 0 0 1;
#X connect 22 0 9 1;
#X connect 23 0 8 0;
#X connect 23 0 8 1;
#X restore 135 463 pd fft-analysis;
#X obj 646 65 switch~;
#X msg 646 39 1;
#X msg 689 40 0;
#X obj 691 16 r \$1noteOff;
#X obj 4 266 t a b;
#N canvas 679 369 456 453 setPartial 1;
#X obj 83 340 tabwrite \$0-gain;
#X msg 148 88 256;
#X obj 148 112 t a b;
#X msg 181 138 0;
#X obj 122 139 until;
#X obj 127 165 f;
#X obj 157 166 + 1;
#X obj 127 191 t a a;
#X msg 67 290 1;
#X msg 132 260 0;
#X obj 49 255 moses 4;
#X msg 22 294 0;
#X obj 49 222 moses 8;
#X obj 276 155 r \$1partial;
#X obj 277 212 + 4;
#N canvas 690 191 631 300 gain 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-gain 256 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 256 -0.01 512 100 1 0 0;
#X restore 42 52 graph;
#X msg 106 195 const 0;
#X obj 106 224 s \$0-gain;
#X connect 1 0 2 0;
#X restore 275 249 pd gain;
#X obj 143 42 inlet;
#X obj 276 179 * 4;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 1;
#X connect 7 0 12 0;
#X connect 7 1 0 1;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 11 0;
#X connect 10 1 8 0;
#X connect 11 0 0 0;
#X connect 12 0 10 0;
#X connect 12 1 9 0;
#X connect 13 0 17 0;
#X connect 14 0 12 1;
#X connect 16 0 1 0;
#X connect 17 0 14 0;
#X connect 17 0 10 1;
#X restore 36 354 pd setPartial;
#X connect 0 0 47 0;
#X connect 0 1 12 0;
#X connect 1 0 9 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 1 6 1;
#X connect 5 0 52 0;
#X connect 6 0 2 0;
#X connect 7 0 0 0;
#X connect 8 0 3 0;
#X connect 9 0 7 0;
#X connect 9 1 0 0;
#X connect 10 0 35 0;
#X connect 12 0 14 0;
#X connect 13 0 41 0;
#X connect 13 1 12 1;
#X connect 14 0 40 0;
#X connect 15 0 18 0;
#X connect 16 0 17 1;
#X connect 17 0 11 0;
#X connect 18 0 16 0;
#X connect 19 0 15 1;
#X connect 20 0 19 0;
#X connect 20 1 21 0;
#X connect 21 0 42 0;
#X connect 21 1 26 0;
#X connect 22 0 13 0;
#X connect 22 1 15 0;
#X connect 22 1 31 0;
#X connect 22 2 37 0;
#X connect 23 0 5 1;
#X connect 24 0 25 0;
#X connect 25 0 0 0;
#X connect 26 0 27 0;
#X connect 26 1 38 0;
#X connect 29 0 30 0;
#X connect 29 1 45 0;
#X connect 30 0 28 0;
#X connect 31 0 16 0;
#X connect 32 0 22 0;
#X connect 33 0 32 1;
#X connect 34 0 36 0;
#X connect 35 0 32 0;
#X connect 35 1 33 0;
#X connect 35 2 34 0;
#X connect 35 2 49 0;
#X connect 37 0 20 0;
#X connect 38 1 29 0;
#X connect 39 0 37 1;
#X connect 41 0 8 0;
#X connect 42 0 31 1;
#X connect 43 0 44 0;
#X connect 45 0 30 1;
#X connect 47 0 17 0;
#X connect 49 0 48 0;
#X connect 50 0 48 0;
#X connect 51 0 50 0;
#X connect 52 0 6 0;
#X connect 52 1 53 0;
