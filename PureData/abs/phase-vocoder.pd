#N canvas 175 387 785 319 12;
#X floatatom 64 83 7 0 0 0 - \$0location-set - 0;
#X obj 47 110 s \$0location;
#X floatatom 141 85 5 0 0 0 - speed-set - 0;
#X obj 141 109 s \$0speed;
#X obj 214 110 s \$0auto;
#X floatatom 370 85 5 0 0 0 - \$0transpo-set - 0;
#X obj 427 86 bng 17 250 50 0 no-detune empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 370 108 s \$0transpo;
#X msg 529 14 512;
#X msg 535 37 1024;
#X msg 540 60 2048;
#X msg 545 83 4096;
#X text 564 13 <= set;
#X obj 529 109 s \$0window-size;
#X obj 390 162 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 0 1;
#X obj 390 182 s \$0lock;
#N canvas 471 37 754 709 fft-analysis 0;
#X obj 56 486 *~;
#X obj 23 486 *~;
#X obj 23 508 -~;
#X obj 172 484 *~;
#X obj 141 484 *~;
#X obj 141 506 +~;
#X obj 114 202 *~;
#X obj 83 202 *~;
#X obj 55 202 *~;
#X obj 24 202 *~;
#X obj 24 227 +~;
#X obj 128 394 *~;
#X obj 24 631 *~;
#X obj 239 439 rfft~;
#X obj 123 170 rfft~;
#X obj 23 573 rifft~;
#X obj 25 655 outlet~;
#X obj 98 394 *~;
#X obj 98 416 +~;
#X obj 129 227 -~;
#X obj 23 440 *~;
#X obj 56 441 *~;
#X obj 370 652 block~;
#X obj 24 358 +~ 1e-15;
#X obj 23 607 *~;
#X obj 56 607 tabreceive~ \$0-hann;
#X obj 127 655 expr 2/(3*$f1);
#X obj 555 572 loadbang;
#X msg 370 627 set \$1 4;
#X obj 98 440 q8_rsqrt~;
#N canvas 210 25 1029 784 read-windows 0;
#X obj 146 667 *~;
#X obj 276 282 f;
#X obj 200 99 /;
#X obj 325 669 *~;
#X obj 276 231 bang~;
#X obj 146 531 line~;
#X obj 200 124 * 1000;
#X obj 318 284 +;
#X obj 398 249 *;
#X obj 294 341 / 1000;
#X obj 276 368 *;
#X text 308 368 reading location (samples);
#X obj 165 574 / 4;
#X obj 398 219 * 0.01;
#X floatatom 469 475 7 0 0 0 - - - 0;
#X obj 469 451 *;
#X obj 589 348 * 0.01;
#X obj 589 372 + 69;
#X obj 589 397 mtof;
#X obj 589 424 / 440;
#X obj 504 451 t b f;
#X obj 146 693 outlet~;
#X obj 325 694 outlet~;
#X obj 343 638 tabreceive~ \$0-hann;
#X msg 763 413 0;
#X msg 778 554 set \$1;
#X text 527 473 stretched window size (samples), f 16;
#X msg 887 555 set \$1;
#X msg 835 309 set \$1;
#X obj 821 169 t b f;
#X obj 835 286 f;
#X obj 763 200 int;
#X obj 763 232 sel 0;
#X msg 822 203 1;
#X msg 822 226 0;
#X obj 763 257 del 300;
#X obj 146 631 tabread4~ \$0-sample;
#X obj 324 611 tabread4~ \$0-sample;
#X obj 294 317 r \$0-insamprate;
#X floatatom 199 146 5 0 0 0 - - - 0;
#X obj 200 75 t f b;
#X obj 232 99 samplerate~;
#X obj 199 171 / 4;
#X obj 313 394 / 2;
#X obj 276 394 -;
#X text 349 391 back up 1/2 window;
#X obj 146 597 -~;
#X text 337 52 Read two windows out of the recorded sample \, one 1/4 ahead of the other. The mid point of the front window is specified by "location". If "speed" is nonzero \, "location" automatically precesses., f 45;
#X obj 521 676 * -0.5;
#X text 24 582 "back" window 1/4 cycle behind "front" one, f 16;
#X text 230 171 computation period (msec) for overlap of 4;
#X text 252 145 msec in a window;
#X obj 521 622 /;
#X obj 521 650 * 1000;
#X obj 521 598 t f b;
#X obj 553 622 samplerate~;
#X obj 521 575 f;
#X text 766 484 reflect control changes;
#X text 766 501 in main window.;
#X text 805 622 misc controls;
#X obj 146 449 f;
#X obj 146 420 b;
#X msg 146 503 0 \, \$1 \$2;
#X text 717 63 if location changes \, update number box in main window via "location-set" \, but taking care to limit frequency of updates., f 38;
#X text 860 397 setting location by hand sets speed to zero., f 19;
#X text 550 547 "rewind" control takes us to a location depending on stretched window size., f 25;
#X text 434 242 loop to precess the location according to the "speed" parameter., f 22;
#X obj 146 476 pack f f;
#X obj 200 51 r \$0window-size;
#X obj 398 196 r \$0speed;
#X obj 821 123 r \$0location;
#X obj 830 145 r \$0see-loc;
#X obj 844 337 s \$0location-set;
#X obj 294 256 r \$0location;
#X obj 353 288 s \$0see-loc;
#X obj 589 324 r \$0transpo;
#X obj 763 390 r \$0location;
#X obj 763 436 s \$0speed;
#X obj 469 418 r \$0window-size;
#X obj 521 522 r \$0rewind;
#X obj 521 700 s \$0location;
#X obj 778 530 r \$0speed;
#X obj 778 579 s \$0speed-set;
#X obj 887 529 r \$0transpo;
#X obj 887 580 s \$0transpo-set;
#X obj 775 654 r \$0no-detune;
#X msg 775 676 0;
#X obj 775 700 s \$0transpo;
#X obj 890 677 list prepend \$0;
#X obj 890 653 r \$0auto;
#X msg 890 709 \; \$1rewind bang \; \$1speed \$2;
#X obj 723 307 r \$0see-loc;
#X obj 717 359 >;
#X obj 735 336 r \$0-samp-msec;
#X obj 717 383 sel 1;
#X connect 0 0 21 0;
#X connect 1 0 7 0;
#X connect 1 0 10 0;
#X connect 2 0 6 0;
#X connect 3 0 22 0;
#X connect 4 0 1 0;
#X connect 5 0 46 0;
#X connect 5 0 37 0;
#X connect 6 0 39 0;
#X connect 7 0 1 1;
#X connect 7 0 74 0;
#X connect 8 0 7 1;
#X connect 9 0 10 1;
#X connect 10 0 44 0;
#X connect 12 0 46 1;
#X connect 13 0 8 0;
#X connect 14 0 12 0;
#X connect 14 0 43 0;
#X connect 14 0 56 1;
#X connect 14 0 60 1;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 15 0;
#X connect 20 1 15 1;
#X connect 23 0 3 1;
#X connect 23 0 0 1;
#X connect 24 0 77 0;
#X connect 25 0 82 0;
#X connect 27 0 84 0;
#X connect 28 0 72 0;
#X connect 29 0 31 0;
#X connect 29 1 30 1;
#X connect 30 0 28 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 32 0 35 0;
#X connect 33 0 31 1;
#X connect 34 0 31 1;
#X connect 35 0 34 0;
#X connect 35 0 30 0;
#X connect 36 0 0 0;
#X connect 37 0 3 0;
#X connect 38 0 9 0;
#X connect 39 0 42 0;
#X connect 40 0 2 0;
#X connect 40 1 41 0;
#X connect 41 0 2 1;
#X connect 42 0 8 1;
#X connect 42 0 67 1;
#X connect 43 0 44 1;
#X connect 44 0 61 0;
#X connect 44 0 36 1;
#X connect 44 0 37 1;
#X connect 46 0 36 0;
#X connect 48 0 80 0;
#X connect 52 0 53 0;
#X connect 53 0 48 0;
#X connect 54 0 52 0;
#X connect 54 1 55 0;
#X connect 55 0 52 1;
#X connect 56 0 54 0;
#X connect 60 0 67 0;
#X connect 61 0 60 0;
#X connect 62 0 5 0;
#X connect 67 0 62 0;
#X connect 68 0 40 0;
#X connect 69 0 13 0;
#X connect 70 0 29 0;
#X connect 71 0 29 0;
#X connect 73 0 1 1;
#X connect 75 0 16 0;
#X connect 76 0 24 0;
#X connect 78 0 15 0;
#X connect 79 0 56 0;
#X connect 81 0 25 0;
#X connect 83 0 27 0;
#X connect 85 0 86 0;
#X connect 86 0 87 0;
#X connect 88 0 90 0;
#X connect 89 0 88 0;
#X connect 91 0 92 0;
#X connect 92 0 94 0;
#X connect 93 0 92 1;
#X connect 94 0 24 0;
#X restore 123 142 pd read-windows;
#X text 277 14 recall previous output amplitude. Its phase will be added to the phase difference we measure from two windows in the the recorded sound.;
#X obj 126 78 *~;
#X obj 99 78 *~;
#X obj 99 100 +~;
#X obj 164 103 q8_rsqrt~;
#X obj 164 80 +~ 1e-20;
#X obj 83 128 *~;
#X obj 24 127 *~;
#X obj 182 299 r lock;
#X obj 34 254 lrshift~ 1;
#X obj 29 278 lrshift~ -1;
#X obj 146 254 lrshift~ 1;
#X obj 138 278 lrshift~ -1;
#X obj 42 309 *~;
#X obj 164 321 *~;
#X obj 24 334 +~;
#X obj 130 321 +~;
#X text 252 75 divide by the magnitude to make a unit-magnitude complex amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~ is reciprocal square root.;
#X text 252 174 Take FT of the window in back. Multiply its conjugate by the normalized previous output. The result has the magnitude of the input sound and phase (previous output phase) minus (back window phase).;
#X text 254 379 Normalize again \, this time taking care to salt each channel with 1e-15 so that we get a unit complex number even if everything was zero heretofore.;
#X text 287 435 Now take the FT of the forward window and multiply it by the unit complex number from above. The magnitude will be that of the forward window and the phase will be the previous output phase plus the phase difference between the two analysis windows -- except that if "lock" is on \, they will be modified to agree progressively better with the inter-channel phase relationships of the input.;
#X text 254 251 If "lock" is on \, encourage neighboring channels to stay in phase by adding the two neighboring complex amplitudes. The result will tend toward the channel with the strongest amplitude. If the phase relationships between channels in the output and those in the input are in parallel \, then neighboring channels of the quotient will all have the same phase and this will not change any phases. (lrshift shifts the signal to the left or right depending on its argument.);
#X text 264 135 Read two windows \, one 1/4 length behind the other \, of the input sound \, with Hann window function (see inside).;
#X text 341 566 'set' message to block allows variable size, f 22;
#X obj 25 14 tabreceive~ \$0prev-real;
#X obj 83 38 tabreceive~ \$0prev-imag;
#X obj 141 541 tabsend~ \$0prev-imag;
#X obj 140 574 tabsend~ \$0prev-real;
#X obj 127 633 r \$0window-size;
#X obj 370 603 r \$0window-size;
#X obj 555 596 list prepend \$0;
#X msg 555 628 \; \$1window-size 2048 \; \$1transpo 0 \; \$1rewind bang;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 58 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 57 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 41 0;
#X connect 10 0 40 0;
#X connect 10 0 46 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 29 0;
#X connect 19 0 42 0;
#X connect 19 0 43 0;
#X connect 19 0 47 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 23 0 17 1;
#X connect 23 0 17 0;
#X connect 23 0 20 0;
#X connect 24 0 12 0;
#X connect 25 0 24 1;
#X connect 26 0 12 1;
#X connect 27 0 61 0;
#X connect 28 0 22 0;
#X connect 29 0 20 1;
#X connect 29 0 21 1;
#X connect 30 0 14 0;
#X connect 30 1 13 0;
#X connect 32 0 34 1;
#X connect 33 0 34 0;
#X connect 34 0 36 0;
#X connect 35 0 37 1;
#X connect 35 0 38 1;
#X connect 36 0 35 0;
#X connect 37 0 8 0;
#X connect 37 0 7 0;
#X connect 38 0 9 0;
#X connect 38 0 6 0;
#X connect 39 0 44 1;
#X connect 39 0 45 1;
#X connect 40 0 44 0;
#X connect 41 0 44 0;
#X connect 42 0 45 0;
#X connect 43 0 45 0;
#X connect 44 0 46 1;
#X connect 45 0 47 1;
#X connect 46 0 23 0;
#X connect 47 0 11 0;
#X connect 47 0 11 1;
#X connect 47 0 21 0;
#X connect 55 0 33 1;
#X connect 55 0 33 0;
#X connect 55 0 38 0;
#X connect 56 0 32 1;
#X connect 56 0 32 0;
#X connect 56 0 37 0;
#X connect 59 0 26 0;
#X connect 60 0 28 0;
#X connect 61 0 62 0;
#X restore 59 170 pd fft-analysis;
#X obj 59 275 outlet~;
#N canvas 260 25 531 738 phase-tables 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1 0 0;
#X restore 67 395 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1 0 0;
#X restore 67 40 graph;
#X restore 382 242 pd phase-tables;
#N canvas 385 188 595 536 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 2048 float 0;
#X coords 0 1 2047 0 300 100 1;
#X restore 148 395 graph;
#X obj 365 185 osc~;
#X obj 365 210 *~ -0.5;
#X obj 365 234 +~ 0.5;
#X obj 348 277 tabwrite~ \$0-hann;
#X obj 195 238 /;
#X obj 213 206 samplerate~;
#X obj 105 252 swap;
#X obj 105 276 /;
#X obj 206 266 * 1000;
#X obj 124 149 t f b f;
#X msg 213 156 resize \$1;
#X obj 213 180 s \$0-hann;
#X msg 390 155 0;
#X obj 317 151 t f b;
#X text 94 21 calculate Hann window table (variable window size) and constants window-hz (fundamental frequency of analysis) \, window-sec and window-msec (analysis window size in seconds and msec)., f 56;
#X obj 124 114 r \$0window-size;
#X obj 317 123 r \$0window-hz;
#X obj 206 293 s \$0window-msec;
#X obj 195 316 s \$0window-sec;
#X obj 105 300 s \$0window-hz;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 5 0 19 0;
#X connect 6 0 5 1;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 20 0;
#X connect 9 0 18 0;
#X connect 10 0 5 0;
#X connect 10 0 7 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 13 0 1 1;
#X connect 14 0 1 0;
#X connect 14 1 4 0;
#X connect 14 1 13 0;
#X connect 16 0 10 0;
#X connect 17 0 14 0;
#X restore 382 266 pd hann-window;
#X floatatom 510 265 7 0 0 0 - \$0-samp-msec - 0;
#X text 562 264 length \, msec;
#X floatatom 509 238 7 0 0 0 - \$0window-size - 0;
#X text 561 237 (check);
#N canvas 949 242 449 537 soundFile 0;
#N canvas 410 109 731 456 insample 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-sample 97378 float 0;
#X coords 0 1 97377 -1 400 150 1;
#X restore 302 143 graph;
#X obj 49 108 unpack s f;
#X obj 49 218 soundfiler;
#X obj 49 134 t s b;
#X obj 102 137 symbol \$0-sample;
#X obj 49 169 pack s s;
#X msg 49 194 read -resize \$1 \$2;
#X obj 49 81 t a b;
#X obj 59 247 s \$0-samplength;
#X obj 146 108 s \$0-insamprate;
#X obj 49 281 /;
#X obj 49 305 * 1000;
#X obj 49 328 s \$0-samp-msec;
#X obj 87 281 r \$0-insamprate;
#X obj 146 82 samplerate~;
#X obj 49 57 inlet;
#X connect 1 0 3 0;
#X connect 2 0 8 0;
#X connect 2 0 10 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 7 0 1 0;
#X connect 7 1 14 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 13 0 10 1;
#X connect 14 0 9 0;
#X connect 15 0 7 0;
#X restore 60 390 pd insample;
#X obj 60 47 r \$2;
#X obj 60 142 t a b;
#X obj 99 192 pdcontrol;
#X msg 99 168 dir;
#X msg 60 324 symbol \$1/../compositions/\$2/sons/\$3;
#X obj 60 259 list prepend;
#X obj 60 71 list prepend \$1;
#X connect 1 0 7 0;
#X connect 2 0 6 0;
#X connect 2 1 4 0;
#X connect 3 0 6 1;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 2 0;
#X restore 244 196 pd soundFile;
#X obj 243 168 r R_CURSOR;
#N canvas 400 290 761 542 navigate 0;
#X obj 298 503 outlet;
#X msg 550 265 0;
#X obj 129 221 r \$0location-set;
#X obj 129 245 route set;
#X obj 304 300 f;
#X obj 359 351 + 1;
#X obj 302 372 - 1;
#X obj 301 338 f;
#X obj 349 398 mod 8;
#X obj 381 207 sel 1;
#X obj 441 207 sel 1;
#X msg 381 229 0;
#X msg 441 230 1;
#X obj 268 240 metro;
#X obj 287 99 t a a a a;
#X obj 313 202 -;
#X obj 268 266 demux;
#X obj 481 343 r \$0-samp-msec;
#X floatatom 357 480 5 0 0 0 - - - 0;
#X obj 287 42 - 128;
#X obj 312 149 abs;
#X obj 381 183 < 0;
#X obj 441 181 > 0;
#X floatatom 432 139 5 0 0 0 - - - 0;
#X obj 278 170 != 0;
#X obj 321 230 * 2;
#X msg 313 171 129 \$1;
#X obj 287 15 r \$0navigate;
#X text 393 16 0 \, 127 = rewind;
#X text 393 36 129 \, 255 = forward;
#X obj 550 241 r \$0reset;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 4 1;
#X connect 3 0 7 1;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 4 1;
#X connect 8 0 7 1;
#X connect 8 0 0 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 16 1;
#X connect 12 0 16 1;
#X connect 13 0 16 0;
#X connect 14 0 24 0;
#X connect 14 1 21 0;
#X connect 14 2 22 0;
#X connect 14 3 20 0;
#X connect 14 3 23 0;
#X connect 15 0 25 0;
#X connect 16 0 7 0;
#X connect 16 1 4 0;
#X connect 17 0 8 1;
#X connect 19 0 14 0;
#X connect 20 0 26 0;
#X connect 21 0 9 0;
#X connect 22 0 10 0;
#X connect 24 0 13 0;
#X connect 25 0 13 1;
#X connect 26 0 15 0;
#X connect 27 0 19 0;
#X connect 30 0 1 0;
#X restore 51 45 pd navigate;
#N canvas 353 378 525 300 play 0;
#X obj 69 267 outlet;
#X msg 62 218 20;
#X msg 100 217 100;
#X msg 139 216 200;
#X obj 62 164 route slow normal fast;
#X obj 61 31 r play\$3;
#X obj 61 53 route \$2;
#X obj 136 137 s pitch\$3;
#X obj 187 73 print;
#X obj 61 77 list split 1;
#X obj 62 136 list trim;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 4 2 3 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 9 0 8 0;
#X connect 9 0 10 0;
#X connect 9 1 7 0;
#X connect 10 0 4 0;
#X restore 214 46 pd play;
#N canvas 150 175 829 502 pitch 0;
#X obj 139 460 s \$0transpo-set;
#X obj 139 437 line;
#X msg 139 415 \$1 100;
#X obj 397 102 osc~ 1;
#X obj 397 126 env~;
#X obj 397 150 dbtorms;
#X obj 139 293 +;
#X obj 139 257 t b f;
#X obj 396 256 * 1200;
#X obj 397 174 * 2;
#X obj 397 198 - 1;
#X obj 398 74 sig~;
#X obj 139 182 r pitch\$3;
#X obj 139 206 route \$2;
#X obj 139 231 * 10;
#X obj 397 231 * 0;
#X obj 193 296 r transpose\$3;
#X obj 139 363 +;
#X obj 193 318 t b f;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 6 0 17 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 9 0 10 0;
#X connect 10 0 15 0;
#X connect 11 0 3 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 7 0;
#X connect 15 0 8 0;
#X connect 16 0 18 0;
#X connect 17 0 2 0;
#X connect 18 0 17 0;
#X connect 18 1 17 1;
#X restore 369 26 pd pitch;
#N canvas 179 204 450 300 setWindow 0;
#X msg 165 197 1024;
#X msg 42 149 2048;
#X msg 132 219 4096;
#X obj 116 245 s \$0window-size;
#X obj 261 79 f;
#X obj 316 130 + 1;
#X obj 259 151 - 1;
#X obj 258 117 f;
#X floatatom 354 205 5 0 0 0 - - - 0;
#X obj 315 164 mod 8;
#X floatatom 299 268 5 0 0 0 - - - 0;
#X obj 299 244 pow;
#X msg 300 223 2 \$1;
#X obj 300 198 + 5;
#X msg 84 150 128;
#X obj 208 14 r \$0quality;
#X obj 209 39 route normal lowres;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 9 0 4 1;
#X connect 9 0 7 1;
#X connect 9 0 8 0;
#X connect 9 0 13 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 3 0;
#X connect 15 0 16 0;
#X connect 16 0 7 0;
#X connect 16 0 1 0;
#X connect 16 1 4 0;
#X connect 16 1 14 0;
#X restore 609 51 pd setWindow;
#X obj 59 250 hip~ 50;
#X obj 579 202 switch~;
#X obj 579 163 instrumentSelect \$3;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 5 0 7 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 14 0 15 0;
#X connect 16 0 30 0;
#X connect 26 0 1 0;
#X connect 27 0 4 0;
#X connect 30 0 17 0;
#X connect 32 0 31 0;
