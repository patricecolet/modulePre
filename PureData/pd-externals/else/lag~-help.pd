#N canvas 509 23 564 535 10;
#X obj 4 364 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 4 442 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 4 475 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 507 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 129 451 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 129 372 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 191 451 signal;
#X obj 23 40 cnv 4 4 4 empty empty non-linear 0 28 2 18 #e0e0e0 #000000
0;
#X obj 107 40 cnv 4 4 4 empty empty lag 0 28 2 18 #e0e0e0 #000000 0
;
#X obj 129 415 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 155 415 float/signal;
#X obj 184 294 else/out~;
#X obj 184 250 *~;
#X obj 151 192 else/brown~;
#X obj 304 247 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 #dcdcdc
#000000 #000000 0 1;
#X text 327 340 0;
#X text 327 241 1;
#X obj 1 3 cnv 15 301 42 empty empty lag~ 20 20 2 37 #e0e0e0 #000000
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 242 164 else/pulse~ 0.5;
#X text 240 372 - input signal;
#N canvas 716 92 505 349 example 0;
#X obj 81 189 osc~;
#X obj 81 236 else/out~;
#X obj 81 58 else/stepnoise~ 1;
#X obj 81 101 else/rescale~ 200 800;
#X text 195 57 <= random numbers generated once a second;
#X text 219 101 <= values rescaled to 200-800 range;
#X obj 81 147 else/lag~ 1000;
#X text 172 147 <= values are lagged \, generating a portamento;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 6 0 0 0;
#X restore 463 328 pd example;
#X text 197 390 reset;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X text 155 372 float/signal;
#X obj 304 219 else/s2f~;
#X text 240 390 - resets the filter;
#X text 31 257 see also:;
#X obj 32 303 else/glide~;
#N canvas 553 279 542 313 rpole~ 0;
#X obj 145 225 rpole~;
#X floatatom 151 110 5 0 1000 0 - - - 0;
#X obj 178 171 expr exp(ln(0.001) / ($f1 * $f2));
#X text 57 109 decay time (ms);
#X floatatom 178 198 0 0 0 0 - - - 0;
#X text 66 198 filter coefficient;
#X obj 373 141 else/sr~ -khz;
#X text 122 32 This is how to implement the one pole filter with [rpole~].
Or better \, how to convert the time in ms to a filter coefficient
to be used in [rpole~]., f 50;
#X obj 151 138 sel 0;
#X msg 151 171 0, f 2;
#X connect 1 0 8 0;
#X connect 2 0 4 0;
#X connect 4 0 0 1;
#X connect 6 0 2 1;
#X connect 8 0 9 0;
#X connect 8 1 2 0;
#X connect 9 0 4 0;
#X restore 469 307 pd rpole~;
#X obj 242 192 else/lag~ 1000;
#X obj 33 281 else/lag2~;
#X text 185 481 1) float - lag time in ms (default 0);
#X text 52 87 [lag~] is a one pole filter that creates an exponential
glide/portamento for its signal input changes. The lag time in ms is
how long it takes for the signal to converge to within 0.01% of the
target value. Note that the rising ramp is different than the descending
ramp \, unlike [glide~]. the same kind of filter is used in other objects
from the ELSE library (decay~/asr~/adsr~)., f 73;
#X text 239 414 - lag time in ms;
#X text 240 451 - lagged signal;
#X obj 32 323 else/slew~;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 19 0 37 0;
#X connect 32 0 14 0;
#X connect 37 0 12 1;
#X connect 37 0 32 0;
