#N canvas 596 66 562 493 10;
#X obj 2 3 cnv 15 301 42 empty empty function~ 20 20 2 37 #e0e0e0 #000000
0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 22 40 cnv 4 4 4 empty empty Function 0 28 2 18 #e0e0e0 #000000
0;
#X obj 93 40 cnv 4 4 4 empty empty Generator 0 28 2 18 #e0e0e0 #000000
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 2 466 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0
14 #dcdcdc #404040 0;
#X obj 1 260 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0 13
#dcdcdc #000000 0;
#X obj 1 368 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0
13 #dcdcdc #000000 0;
#X obj 1 402 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12
0 13 #dcdcdc #000000 0;
#X obj 100 267 cnv 17 3 92 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 178 279 list;
#X text 130 265 float/signal;
#X obj 100 374 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc
#9c9c9c 0;
#X text 166 375 signal;
#X text 216 375 - function output, f 35;
#X text 218 265 - values from 0 to 1 reads function, f 49;
#X text 107 407 1) list;
#X text 218 279 - 3 or more floats set function, f 49;
#X obj 200 197 else/function~ 1 1 -1;
#X obj 200 174 nbx 5 14 0 1 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X obj 203 150 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc
#000000 #000000 0 1;
#N canvas 695 38 544 587 example 0;
#X obj 172 357 else/out~;
#X obj 59 246 phasor~ 200;
#X obj 59 224 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X text 201 113 inverted sawtooth;
#X text 271 137 triangular wave;
#X text 326 166 trapezoid;
#X text 59 15 The [function~] object allows line segments and in any
range. Here we use it in the -1 to 1 range to generate waveforms and
use them as oscillators with a [phasor~] input., f 73;
#X text 368 223 <== the [function] object is quite convenient for use
with [function~]. Check its help file for more info, f 18;
#X obj 156 327 else/function~ 1 100 -1;
#X obj 156 201 else/function 200 100 empty empty -1 1 220 220 220 50
50 50 1 0 0 0 -1 1 1;
#X obj 156 420 else/graph~ 441 8 -1.05 1.05 200 140;
#X msg 169 138 -1 0.5 1 0.5 -1;
#X msg 142 92 -1 1 1;
#X msg 156 114 1 1 -1;
#X msg 176 166 -1 0.25 1 0.5 1 0.25 -1;
#X text 187 91 sawtooth;
#X obj 142 68 loadbang;
#X connect 1 0 8 0;
#X connect 2 0 1 0;
#X connect 8 0 0 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 9 0;
#X connect 14 0 9 0;
#X connect 16 0 12 0;
#X restore 472 210 pd example;
#X text 42 86 [function~] generates functions from arguments/list input.
Input values from 0 to 1 reads the function. It needs an odd number
of elements in a list \, staring with 3 values \, the syntax is (point1
\, period \, point2 \, period \, point3 \, etc...). The overall sum
of periods is normalized to 1!, f 67;
#X text 159 407 - 3 or more floats to set the function (default no
function);
#X obj 6 434 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 218 320 - sets exponential values for each line segment, f
49;
#N canvas 470 92 839 520 exponential 0;
#X obj 140 295 else/out~;
#X obj 38 157 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 121 358 else/graph~ 441 8 -1.05 1.05 200 140;
#X obj 38 179 phasor~ 200;
#X obj 495 274 else/out~;
#X obj 477 125 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 477 344 else/graph~ 441 8 -1.05 1.05 200 140;
#X text 703 203 parabolic waveform;
#X obj 575 118 expr -$f1 \; -$f1 \; $f1 \; $f1;
#X obj 569 176 pack f f f f;
#X obj 578 71 hsl 128 15 2 25 1 0 empty empty empty -2 -8 0 10 #dcdcdc
#000000 #000000 0 1;
#X floatatom 575 95 6 0 0 0 - - - 0;
#X obj 477 147 phasor~ 100;
#X obj 308 111 else/rescale;
#X obj 308 133 else/rescale~;
#X text 30 91 The exponential factor is the same as used in [else/rescale]
and [else/rescale~]. Check them out as well:;
#X text 575 27 Here's how to create parabolic waveforms:, f 20;
#X obj 122 264 else/function~ -exp -1 0.5 2 1 0.5 2 -1;
#X msg 132 159 expl -2 -2;
#X msg 141 180 expl 2 2;
#X msg 122 138 expl 1 1;
#X obj 569 198 else/insert expl;
#X obj 477 226 else/function~ -exp 0 0.5 -2 1 0.5 -2 0 0.5 2 -1 0.5
2 0;
#X msg 212 185 expi 0 \$1;
#X msg 286 195 expi 1 \$1;
#X floatatom 212 162 5 0 0 0 - - - 0;
#X floatatom 286 172 5 0 0 0 - - - 0;
#X msg 246 234 exp -1 0.5 -2 1 0.5 -2 -1;
#X text 30 15 The 'exp' message or flag also sets an exponential factor
after the duration value. The 'expl' message sets exponential factors
for each segment - by default \, they're "1" (linear). The 'expi' message
sets a single exponential factor. For values >= 0 \, it's like raising
to the power of the given exponential. Negative values are accepted
and offer a mirrored/reversed curve. Check below., f 70;
#X connect 1 0 3 0;
#X connect 3 0 17 0;
#X connect 5 0 12 0;
#X connect 8 0 9 0;
#X connect 8 1 9 1;
#X connect 8 2 9 2;
#X connect 8 3 9 3;
#X connect 9 0 21 0;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 12 0 22 0;
#X connect 17 0 0 0;
#X connect 17 0 2 0;
#X connect 18 0 17 0;
#X connect 19 0 17 0;
#X connect 20 0 17 0;
#X connect 21 0 22 0;
#X connect 22 0 4 0;
#X connect 22 0 6 0;
#X connect 23 0 17 0;
#X connect 24 0 17 0;
#X connect 25 0 23 0;
#X connect 26 0 24 0;
#X connect 27 0 17 0;
#X restore 449 230 pd exponential;
#X obj 480 69 else/setdsp~;
#X text 71 442 -exp <list> sets function with an extra exponential
element for each segment., f 77;
#X text 136 320 expl <list>;
#X text 142 294 exp <list>;
#X text 218 294 -;
#X text 230 294 sets function with an extra exponential element for
each segment, f 47;
#X text 136 336 expi <f \, f>;
#X text 218 335 -;
#X text 230 335 sets an exponential for a line segment specified by
the first float indexed from 0, f 48;
#X text 31 190 see also:;
#X obj 31 216 else/envgen~;
#X obj 200 222 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X connect 25 0 45 0;
#X connect 26 0 25 0;
#X connect 27 0 26 0;
