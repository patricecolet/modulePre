#N canvas 562 23 563 591 10;
#X obj 3 318 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 440 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 503 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 157 449 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 3 564 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 137 198 noise~;
#X obj 3 5 cnv 15 301 42 empty empty sh~ 20 20 2 37 #e0e0e0 #000000
0;
#X obj 306 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 5 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 5 pd;
#X obj 345 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 23 42 cnv 4 4 4 empty empty Sample 0 28 2 18 #e0e0e0 #000000
0;
#X obj 107 42 cnv 4 4 4 empty empty hold 0 28 2 18 #e0e0e0 #000000
0;
#X obj 458 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 478 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 464 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 83 42 cnv 4 4 4 empty empty & 0 28 2 18 #e0e0e0 #000000 0;
#X obj 150 416 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 137 289 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #4a4f51 #cde5c3
#fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #4a4f51 #cde5c3
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 504 64 pd;
#X obj 274 245 else/out~;
#X text 205 417 signal - gate signal, f 31;
#N canvas 431 69 643 374 downsampling 0;
#X obj 95 136 noise~;
#X obj 140 143 else/imp~ 100;
#X obj 95 222 else/out~;
#X obj 143 94 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10
#dcdcdc #000000 #000000 0 1;
#X obj 140 121 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 401 130 noise~;
#X obj 401 216 else/out~;
#X obj 455 88 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10
#dcdcdc #000000 #000000 0 1;
#X obj 452 115 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 401 170 samphold~;
#X obj 452 137 phasor~ 100;
#X text 317 18 This isn't possible with the corresponding vanilla counterparts
because of the way they were designed. Change the slider up to the
sample rate and check it out., f 51;
#X obj 95 176 else/sh~;
#X text 24 21 With [sh~] you can downsample a signal (in a "sample
and hold" fashion) and raise it up to the sample rate \, when in gate
mode., f 45;
#X text 125 307 Note that in trigger mode \, it can only go up to the
Nyquist frequency. But for frequencies below Nyquist \, an impulse
generator will behave the same way for both modes!;
#X connect 0 0 12 0;
#X connect 1 0 12 1;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 9 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X connect 10 0 9 1;
#X connect 12 0 2 0;
#X restore 443 279 pd downsampling;
#X obj 515 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 502 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X text 200 449 signal - sampled and held signal;
#X obj 137 261 else/sig2float~;
#X text 219 345 bang - sample the signal, f 29;
#X obj 150 329 cnv 17 3 82 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 170 363 set <float> - set the held value, f 36;
#N canvas 446 163 739 298 more 0;
#X obj 498 133 noise~;
#X obj 562 148 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 187 160 noise~;
#X obj 256 159 osc~ 1;
#X msg 96 160 thresh \$1;
#X obj 96 140 nbx 5 14 -0.9 0.9 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X obj 99 119 hsl 128 15 -0.9 0.9 0 0 empty empty empty -2 -8 0 10
#dcdcdc #000000 #000000 0 1;
#X msg 427 132 set \$1;
#X obj 427 113 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X text 26 21 The first argument of [sh~] is the threshold value value
(0 by default) \, so the signal from the right inlet needs to be greater
than it to sample and output the incoming signal. The threshold value
can also be set via the "thresh" message., f 52;
#X obj 187 201 else/sh~ 0.9;
#X obj 498 184 else/sh~ 0 1.55;
#X text 369 21 The second argument of [sh~] is for the initially held
value (0 by default) \, so it is output when loading the object and
before it is triggered by the right inlet. The set message can set
the held output. The [sh~] can also be triggered by a bang., f 55
;
#X obj 498 231 else/numbox~ 6 12 100 #c0c0c4 #440008 0 0 10 0;
#X obj 187 235 else/numbox~ 6 12 100 #c0c0c4 #440008 0 0 10 0;
#X connect 0 0 11 0;
#X connect 1 0 11 0;
#X connect 2 0 10 0;
#X connect 3 0 10 1;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 10 0 14 0;
#X connect 11 0 13 0;
#X restore 492 255 pd more;
#X text 154 511 1) float - initial threshold (default 0), f 49;
#X text 154 527 2) float - initially held value (default 0), f 49
;
#X obj 137 227 else/sh~;
#X obj 274 183 else/imp~ 2;
#X text 154 543 3) float - mode: 0 (gate \, default) or 1 (trigger)
;
#X obj 3 473 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 188 482 "-tr" - sets to trigger mode;
#X text 219 381 gate - sets to gate mode, f 29;
#X text 198 398 trigger - sets to trigger mode, f 32;
#N canvas 727 74 515 524 modes 0;
#X obj 243 202 noise~;
#X obj 262 277 else/out~;
#X obj 243 237 else/sh~;
#X msg 204 170 gate;
#X msg 140 170 trigger;
#X text 58 18 By default \, [sh~] is in gate mode. Below \, we have
an oscillator in the second inlet \, so when its values are greater
than zero \, the gate is open and the signal passes through \, being
held only when the oscillator values are less or equal to zero., f
55;
#X text 57 92 In trigger mode \, it will sample and hold until the
next trigger \, which happens when the second inlet value is greater
than the threshold and its last value was equal or below it., f 55
;
#X text 244 171 <= change modes;
#X obj 296 203 osc~ 1;
#X text 72 417 You can change the mode with the messages like above
\, or set it with the third argument. Alternatively \, you can set
it to trigger mode with the "-tr" flag as in:, f 55;
#X obj 347 472 else/sh~ -tr;
#X obj 243 353 else/numbox~ 6 12 100 #c0c0c4 #440008 0 0 10 0;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 0 11 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 8 0 2 1;
#X restore 485 229 pd modes;
#X obj 98 197 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X text 37 94 [sh~] samples and holds a value from the left inlet.
In "gate" mode (default) \, values are sampled if the signal in the
right inlet is greater than the threshold (0 by default) \, or held
if lesser or equal to it. In "trigger" mode \, the value needs to fall
below the threshold before it can retrigger [sh~]. A bang also triggers
it., f 62;
#X text 171 328 float/signal - input to sample and hold;
#X connect 5 0 33 0;
#X connect 26 0 18 0;
#X connect 33 0 26 0;
#X connect 34 0 20 0;
#X connect 34 0 33 1;
#X connect 41 0 33 0;
