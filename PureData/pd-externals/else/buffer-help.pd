#N canvas 474 26 563 442 10;
#X obj 2 3 cnv 15 301 42 empty empty buffer 20 20 2 37 #e0e0e0 #000000
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 29 40 cnv 4 4 4 empty empty Get/set 0 28 2 18 #e0e0e0 #000000
0;
#X obj 88 40 cnv 4 4 4 empty empty array 0 28 2 18 #e0e0e0 #000000
0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 6 258 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 350 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 385 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 416 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 94 265 cnv 17 3 59 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 94 361 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 134 40 cnv 4 4 4 empty empty buffer 0 28 2 18 #e0e0e0 #000000
0;
#X obj 182 151 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 214 223 else/display;
#X obj 42 169 cnv 15 98 68 empty empty empty 20 12 0 14 #e0e0e0 #404040
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-buffer 5 float 3;
#A 0 0.9 0.4 0 -0.4 -0.9;
#X coords 0 1 5 -1 100 70 1 0 0;
#X restore 41 168 graph;
#X text 170 265 list;
#X text 134 280 set <list>;
#X text 210 265 - resize \, set array and output list;
#X text 170 294 bang;
#X text 210 294 - output array;
#X obj 94 329 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 210 309 - sets array name;
#X text 170 361 list;
#X text 210 361 - array values;
#X text 33 86 [buffer] does not much and nothing that [array] can't
\, but it's a convenient object for getting and setting array values
\, kinda like a storage object such as [else/message]. You can get/set
arrays from actual arrays \, [table] or [array] objects., f 76;
#X obj 214 198 else/buffer \$0-buffer;
#X text 170 328 list;
#X text 210 328 - resize and set array;
#X msg 337 169 0.9 0.4 0 -0.4 -0.9;
#X msg 222 169 -0.9 -0.5 0.5 0.9;
#X msg 214 141 set 1 -0.7 0.7;
#X text 210 280 - 1st item is index \, the next are values from that
index;
#X text 311 140 <= set array values (no output);
#X text 465 162 set array (no output), f 11;
#X text 116 309 name <symbol>;
#X text 171 394 1) symbol - array name (default none);
#X connect 19 0 33 0;
#X connect 33 0 20 0;
#X connect 36 0 33 1;
#X connect 37 0 33 0;
#X connect 38 0 33 0;
