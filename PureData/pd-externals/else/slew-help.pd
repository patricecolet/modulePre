#N canvas 402 23 562 520 10;
#X obj 4 302 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 4 385 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 4 450 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 493 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 119 394 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 119 309 cnv 17 3 47 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 23 40 cnv 4 4 4 empty empty Control 0 28 2 18 #e0e0e0 #000000
0;
#X obj 87 40 cnv 4 4 4 empty empty slew 0 28 2 18 #e0e0e0 #000000 0
;
#X obj 119 360 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 1 3 cnv 15 301 42 empty empty slew 20 20 2 37 #e0e0e0 #000000
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 716 92 494 369 example 0;
#X obj 78 236 osc~;
#X obj 78 283 else/out~;
#X text 185 44 <= random numbers generated once a second;
#X text 212 87 <= values rescaled to 200-800 range;
#X obj 78 45 else/stepnoise 1;
#X obj 78 88 else/rescale 200 800;
#X floatatom 78 203 8 0 0 0 - - - 0;
#X text 164 174 <= values are limited \, generating a portamento;
#X obj 78 174 else/slew 800;
#X msg 103 140 rate \$1;
#X floatatom 103 118 5 0 0 0 - - - 0;
#X text 140 117 <= increasing refresh rate generates steps;
#X connect 0 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 0 0;
#X connect 8 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X restore 477 267 pd example;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X text 26 218 see also:;
#X obj 130 39 cnv 4 4 4 empty empty limiter 0 28 2 18 #e0e0e0 #000000
0;
#X msg 272 149 1;
#X floatatom 272 225 5 0 0 0 - - - 0;
#X msg 281 177 0;
#X msg 289 199 -1;
#X obj 200 275 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc
#000000 #000000 0 1;
#X floatatom 117 199 0 0 0 0 - - - 0;
#X obj 117 174 else/rand.f 0 1;
#X obj 117 150 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 187 310 float;
#X text 187 361 float;
#X obj 27 264 else/slew~;
#X obj 28 242 else/slew2;
#X text 187 395 float;
#X msg 240 149 0.1;
#X text 314 199 <= no limit;
#X text 321 160 per second), f 22;
#X obj 4 420 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 145 342 rate <float>;
#X text 230 342 - refresh rate in ms, f 46;
#X text 151 326 set <float>;
#X text 165 472 2) float - initial start value (default 0);
#X text 230 395 - slew limited values;
#X text 303 148 <= speed limit (amplitude;
#X text 308 177 <= 0 speed (stopped);
#X text 230 310 - values to be slew limited, f 46;
#X text 165 457 1) float - slew limit speed (default 0);
#X text 230 361 - speed limit (negative values = no limit), f 46;
#N canvas 849 83 455 434 rate 0;
#X floatatom 287 323 5 0 0 0 - - - 0;
#X msg 296 275 0;
#X msg 304 297 -1;
#X obj 155 373 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc
#000000 #000000 0 1;
#X floatatom 152 309 7 0 0 0 - - - 0;
#X obj 152 280 else/rand.f 0 1;
#X obj 152 256 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X msg 255 247 0.1;
#X text 42 16 When new values come in \, the object limits the change
to a maximum step until it reaches the new value. A speed of "1" means
that it takes one second to move to a difference of 1 in amplitue.
The actual step between subsequent changes depend on this speed and
the refresh rate \, which is the rate that the values are given.,
f 61;
#X msg 86 311 rate \$1;
#X msg 86 211 1;
#X msg 96 234 100;
#X msg 105 258 250;
#X floatatom 86 289 7 0 0 0 - - - 0;
#X text 42 148 You can change the refresh rate with the -rate flag
or the rate message. If you change the rate \, the step limit changes
\, but the speed remains the same., f 61;
#X msg 287 247 0.5;
#X text 42 92 By default \, the refresh rate is 5 ms \, so we have
200 values in a second. If the speed is then "1" \, this means that
the step value is 1/200 (0.005). So a shift between 0 and 1 takes 200
steps of 0.005 and a second to reach 1!, f 61;
#X obj 152 345 else/slew -rate 100 0.1;
#X connect 0 0 17 1;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 17 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 0 0;
#X connect 9 0 17 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 9 0;
#X connect 15 0 0 0;
#X connect 17 0 3 0;
#X restore 495 245 pd rate;
#X msg 208 223 set 0;
#X msg 197 199 set 1;
#X text 230 326 - sets new start point and goes back to target;
#X text 114 429 -rate <float>: sets refresh rate in ms (default 5 \,
minimum 1), f 61;
#X obj 197 248 else/slew 1 1;
#X text 46 86 [slew] takes an amplitude limit per second and an incoming
value to be 'slew limited'. It then generates a line towards the incoming
value. The difference between [slew] and [line] is that [slew] has
a fixed speed \, not a fixed period. A limit of zero stops the line
generation and a negative value turns the limiter off., f 80;
#X connect 22 0 23 0;
#X connect 23 0 54 1;
#X connect 24 0 23 0;
#X connect 25 0 23 0;
#X connect 27 0 54 0;
#X connect 28 0 27 0;
#X connect 29 0 28 0;
#X connect 35 0 23 0;
#X connect 50 0 54 0;
#X connect 51 0 54 0;
#X connect 54 0 26 0;
