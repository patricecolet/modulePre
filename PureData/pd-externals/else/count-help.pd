#N canvas 464 27 559 538 10;
#X obj 3 510 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 3 211 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 385 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 439 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 100 362 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 101 393 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 100 220 cnv 17 3 137 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c
0;
#X obj 3 5 cnv 15 301 42 empty empty count 20 20 2 37 #e0e0e0 #000000
0;
#X obj 306 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 5 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 5 pd;
#X obj 345 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 23 42 cnv 4 4 4 empty empty A 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 478 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 515 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 464 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 502 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 44 42 cnv 4 4 4 empty empty counter 0 28 2 18 #e0e0e0 #000000
0;
#X obj 228 125 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 228 178 else/display;
#X text 167 364 list;
#X text 157 394 float;
#X text 165 217 bang;
#X text 207 365 - updates arguments, f 55;
#X text 133 447 1) list -;
#X text 159 231 float;
#X text 111 259 reset <float>;
#X text 208 258 -;
#X text 220 258 without float \, resets to the reset point \, but a
float sets a new reset point as well, f 53;
#X text 123 245 set <float>;
#X text 208 244 - sets new count value, f 55;
#X obj 309 181 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 123 284 max <float>;
#X text 208 283 - sets maximum value, f 55;
#X text 123 298 min <float>;
#X text 208 297 - sets minimum value, f 55;
#X text 177 312 up;
#X text 208 312 - sets count direction upwards, f 55;
#X text 165 327 down;
#X text 208 327 - sets count direction downwards, f 55;
#X text 123 342 alt <float>;
#X obj 101 415 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 163 416 bang;
#X obj 3 467 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 166 473 -alt - sets to alternating mode;
#X text 208 341 - non-0 sets to alternating mode (between up/down)
, f 55;
#N canvas 441 61 672 411 arguments 0;
#X obj 246 287 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 251 100 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 251 164 else/display;
#X obj 174 164 else/display;
#X obj 246 360 else/display;
#X obj 126 361 else/display;
#X msg 126 287 reset;
#X text 14 16 By default \, the direction is upwards \, the minimum
and reset (or starting)) value is 0 and the maximum is 16.777.216 (2^24)
- the largest integer possible in Pd. A bang outputs the current count
value \, starting from the reset value (0 in the examples below). Only
one argument sets the maximum value \, so it counts from 0 to that
value and loops back to the minimum value., f 61;
#X msg 174 101 reset;
#X text 23 199 Two arguments set the minimum and maximum value in any
order (the smaller of the 2 is always the minimum \, and the greater
is the maximum). But if the first argument is greater than the second
\, then the count order is set to downwards and it starts with the
maximum value. The first of two arguments also sets the reset/starting
point.;
#X obj 456 333 else/display;
#X msg 456 270 reset;
#X obj 429 269 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X msg 567 220 4;
#X msg 580 246 10 15;
#X msg 590 275 15 10;
#X obj 174 138 else/count;
#X obj 251 138 else/count 4;
#X obj 126 331 else/count 10 15;
#X obj 246 321 else/count 15 10;
#X obj 456 307 else/count -reset 5;
#X text 428 55 The right inlet resets these arguments. It makes a difference
if you send it 1 or 2 arguments. It's like the object has been reinitialized
with such arguments., f 25;
#X msg 551 195 5 15;
#X msg 533 171 20 10;
#X connect 0 0 18 0;
#X connect 0 0 19 0;
#X connect 1 0 16 0;
#X connect 1 0 17 0;
#X connect 6 0 18 0;
#X connect 6 0 19 0;
#X connect 8 0 16 0;
#X connect 8 0 17 0;
#X connect 11 0 20 0;
#X connect 12 0 20 0;
#X connect 13 0 20 1;
#X connect 14 0 20 1;
#X connect 15 0 20 1;
#X connect 16 0 3 0;
#X connect 17 0 2 0;
#X connect 18 0 5 0;
#X connect 19 0 4 0;
#X connect 20 0 10 0;
#X connect 22 0 20 1;
#X connect 23 0 20 1;
#X restore 459 137 pd arguments;
#N canvas 836 163 453 240 direction 0;
#X obj 169 196 nbx 2 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 169 89 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X obj 280 195 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X msg 181 125 up;
#X msg 214 126 down;
#X msg 120 127 alt \$1;
#X obj 120 105 tgl 16 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000 0 1;
#X text 28 19 You can change the direction \, upwards or downward \,
with the "up" and "down" message.The alternanting mode \, set with
the "-alt" flag or message \, alternates between these two directions
after reaching a limit (minimum or maximum value), f 64;
#X obj 169 165 else/count -alt 5 1;
#X connect 1 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X connect 8 0 0 0;
#X connect 8 1 2 0;
#X restore 459 158 pd direction;
#N canvas 713 102 561 362 messages 0;
#X obj 218 318 nbx 2 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 218 160 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 365 317 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 97 47 float;
#X text 134 47 - set new count value and output it, f 55;
#X text 49 76 reset <float>;
#X text 134 76 -;
#X text 61 61 set <float>;
#X text 134 61 - sets new count value, f 55;
#X text 61 102 max <float>;
#X text 134 101 - sets maximum value, f 55;
#X text 61 116 min <float>;
#X text 134 115 - sets minimum value, f 55;
#X obj 176 195 nbx 3 16 0 10 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X obj 125 181 nbx 3 16 0 10 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X msg 125 206 set \$1;
#X msg 237 215 reset \$1;
#X obj 237 193 nbx 3 16 0 10 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X msg 253 238 reset;
#X msg 318 243 min \$1;
#X msg 370 249 max \$1;
#X obj 318 221 nbx 3 16 0 10 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X obj 370 225 nbx 3 16 0 10 0 0 empty empty empty 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#X text 38 14 The remaining messages:;
#X obj 218 287 else/count -reset 10 1 20;
#X text 146 76 without float \, resets to the reset point \, but a
float sets a new reset point as well (you can also use the -reset flag)
;
#X connect 1 0 24 0;
#X connect 13 0 24 0;
#X connect 14 0 15 0;
#X connect 15 0 24 0;
#X connect 16 0 24 0;
#X connect 17 0 16 0;
#X connect 18 0 24 0;
#X connect 19 0 24 0;
#X connect 20 0 24 0;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X connect 24 0 0 0;
#X connect 24 1 2 0;
#X restore 465 180 pd messages;
#X text 208 394 - count value;
#X text 68 87 [count] counts and wraps between a minimum and maximum
value. It has modes for counting up \, down and alternating between
them.;
#X text 208 230 - sets new count value and outputs it, f 55;
#X text 208 216 - counts, f 55;
#X text 208 416 - bang when reaching count limits;
#X text 106 488 -reset <float> - sets start & reset value;
#X text 198 446 1 float sets: max / 2 floats set: min & max;
#X obj 228 151 else/count 1 4;
#X connect 19 0 57 0;
#X connect 57 0 20 0;
#X connect 57 1 32 0;
