#N canvas 571 23 562 481 10;
#X obj 23 41 cnv 4 4 4 empty empty Control 0 28 2 18 #e0e0e0 #000000
0;
#X obj 3 451 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 3 305 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 354 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 3 421 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 81 361 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 81 313 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 3 4 cnv 15 301 42 empty empty rampnoise 20 20 2 37 #e0e0e0 #000000
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 244 133 hsl 128 15 0.1 1 1 0 empty empty empty -2 -8 0 10 #dcdcdc
#000000 #000000 0 1;
#X obj 241 159 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X text 268 133 rate in Hz;
#X obj 89 41 cnv 4 4 4 empty empty rampnoise 0 28 2 18 #e0e0e0 #000000
0;
#X text 146 362 float;
#X text 146 315 float;
#X obj 241 210 vsl 22 80 0 127 0 0 dsfsdgs sddfjhgj empty 0 -9 0 10
#dcdcdc #000000 #000000 0 1;
#X text 187 315 - frequency in hertz up to 100 (negative values accepted)
;
#X text 187 332 -;
#X text 127 427 1) float;
#N canvas 436 104 419 532 rescale 0;
#X text 46 17 The output range if from 0 to 127 \, which is the whole
MIDI default range. Use the [rescale] object if you want a different
range for the output., f 53;
#X obj 127 109 vsl 22 80 0 127 0 0 dsfsdgs sddfjhgj empty 0 -9 0 10
#dcdcdc #000000 #000000 0 1;
#X obj 127 200 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 127 254 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X text 187 255 cutoff in hertz;
#X obj 127 365 biquad~;
#X obj 127 394 else/plate.rev~ 50 0.9 0.9 0.9 0.7, f 18;
#X obj 160 335 else/bl.saw~;
#X obj 160 312 sig~ 35;
#X obj 127 227 else/rescale 200 700;
#X obj 127 282 else/bicoeff2 lowpass 500 20;
#X obj 127 83 else/rampnoise 0.5;
#X obj 137 437 else/out~;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 5 0 6 0;
#X connect 6 0 12 0;
#X connect 6 1 12 1;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 3 0;
#X connect 10 0 5 0;
#X connect 11 0 1 0;
#X restore 465 246 pd rescale;
#X text 187 427 - frequency in hertz (default 0), f 55;
#X obj 34 232 else/rampnoise~;
#X text 104 332 seed <float>;
#X obj 241 181 else/rampnoise 2;
#X text 37 207 see also:;
#X text 187 363 - ramp noise's waveform in the range from 0 - 127;
#X text 64 91 [rampnoise] is a control rate ramp noise. It doesn't
need the DSP on to function. Give it a seed value if you want a reproducible
output.;
#X obj 34 254 else/stepnoise;
#N canvas 459 157 726 249 seed 0;
#X text 30 19 Pseudo random number generators aren't true random number
generators. Instead \, an algorithm is used to provide a sequence of
numbers that seems random. The same sequence can be reproduced if you
set a "seed" value \, which can be any integer number., f 52;
#X text 31 165 You can set a seed with the '-seed' flag. If you don't
supply it \, each object gets its own seed internal seed. If you send
a 'seed' message without float \, the object also gets a unique seed
value., f 52;
#X text 30 98 Seeds are kept locally \, which means that if two [rampnoise]
objects are seeded the same they will have the same output. Conversely
\, you can seed the same [rampnoise] object twice with the same seed
to repeat the output., f 52;
#X msg 542 63 seed 507;
#X msg 382 63 seed;
#X text 602 62 <-- set seed;
#X floatatom 382 158 10 0 0 0 - - - 12;
#X floatatom 542 158 10 0 0 0 - - - 12;
#X obj 385 193 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dfdfdf
#000000 #000000 0 1;
#X obj 545 193 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dfdfdf
#000000 #000000 0 1;
#X text 387 25 Sync [rampnoise] objects with a seed value;
#X obj 542 120 else/rampnoise -seed 507 1, f 14;
#X obj 382 120 else/rampnoise -seed 507 1, f 14;
#X connect 3 0 12 0;
#X connect 3 0 11 0;
#X connect 4 0 12 0;
#X connect 4 0 11 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 11 0 7 0;
#X connect 12 0 6 0;
#X restore 484 267 pd seed;
#X obj 6 386 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 120 397 -seed <float>: sets seed (default: unique internal)
, f 54;
#X text 199 332 a float sets seed \, no float sets a unique internal
;
#X obj 34 277 else/lfnoise;
#X connect 17 0 18 0;
#X connect 18 0 31 0;
#X connect 31 0 23 0;
