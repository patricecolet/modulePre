#N canvas 453 42 559 489 10;
#X obj 4 338 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 373 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 428 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 136 382 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 137 347 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 457 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Parse\ OSC\ messages 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty osc.parse 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X listbox 156 251 52 0 0 0 - - - 0;
#X obj 156 303 else/display;
#X text 19 227 see also:;
#X text 171 383 anything;
#X text 195 348 list;
#X text 214 436 NONE;
#X floatatom 156 176 9 0 0 0 - - - 0;
#X obj 159 150 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 16 294 else/osc.route;
#X msg 156 202 /fader \$1;
#X obj 156 227 else/osc.format;
#X obj 156 277 else/osc.parse;
#X obj 16 272 else/osc.parse;
#X text 224 202 <-- message to be formated as an OSC message;
#X text 229 348 - formatted OSC message;
#X obj 16 249 else/osc.receive;
#X text 229 384 - parsed OSC message;
#X text 58 88 [osc.parse] is similar to Vanilla's [oscparse] but the output is not a list and more closely related on how OSC messages are generally dealt with. It is still in the [osc.receive] abstraction and you can use the object for more edge and lower level cases., f 70;
#X text 189 399 float;
#X floatatom 254 278 5 0 0 0 - - - 0;
#X text 294 278 timetag offset in ms;
#X text 229 400 - timetag offset in milliseconds;
#X connect 17 0 28 0;
#X connect 23 0 26 0;
#X connect 24 0 23 0;
#X connect 26 0 27 0;
#X connect 27 0 17 0;
#X connect 28 0 18 0;
#X connect 28 1 36 0;
